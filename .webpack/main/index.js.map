{"version":3,"file":"index.js","mappings":"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","sources":["webpack://projection/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://projection/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://projection/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://projection/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://projection/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://projection/./node_modules/@babel/runtime/helpers/createClass.js","webpack://projection/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://projection/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://projection/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://projection/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://projection/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://projection/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://projection/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://projection/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://projection/./node_modules/@babel/runtime/regenerator/index.js","webpack://projection/./node_modules/atob/node-atob.js","webpack://projection/./node_modules/electron-squirrel-startup/index.js","webpack://projection/./node_modules/electron-squirrel-startup/node_modules/debug/src/browser.js","webpack://projection/./node_modules/electron-squirrel-startup/node_modules/debug/src/debug.js","webpack://projection/./node_modules/electron-squirrel-startup/node_modules/debug/src/index.js","webpack://projection/./node_modules/electron-squirrel-startup/node_modules/debug/src/node.js","webpack://projection/./node_modules/electron-squirrel-startup/node_modules/ms/index.js","webpack://projection/./node_modules/regenerator-runtime/runtime.js","webpack://projection/./node_modules/systeminformation/lib/audio.js","webpack://projection/./node_modules/systeminformation/lib/battery.js","webpack://projection/./node_modules/systeminformation/lib/bluetooth.js","webpack://projection/./node_modules/systeminformation/lib/cpu.js","webpack://projection/./node_modules/systeminformation/lib/docker.js","webpack://projection/./node_modules/systeminformation/lib/dockerSocket.js","webpack://projection/./node_modules/systeminformation/lib/filesystem.js","webpack://projection/./node_modules/systeminformation/lib/graphics.js","webpack://projection/./node_modules/systeminformation/lib/index.js","webpack://projection/./node_modules/systeminformation/lib/internet.js","webpack://projection/./node_modules/systeminformation/lib/memory.js","webpack://projection/./node_modules/systeminformation/lib/network.js","webpack://projection/./node_modules/systeminformation/lib/osinfo.js","webpack://projection/./node_modules/systeminformation/lib/printer.js","webpack://projection/./node_modules/systeminformation/lib/processes.js","webpack://projection/./node_modules/systeminformation/lib/system.js","webpack://projection/./node_modules/systeminformation/lib/usb.js","webpack://projection/./node_modules/systeminformation/lib/users.js","webpack://projection/./node_modules/systeminformation/lib/util.js","webpack://projection/./node_modules/systeminformation/lib/virtualbox.js","webpack://projection/./node_modules/systeminformation/lib/wifi.js","webpack://projection/external node-commonjs \"child_process\"","webpack://projection/external node-commonjs \"electron\"","webpack://projection/external node-commonjs \"fs\"","webpack://projection/external node-commonjs \"http\"","webpack://projection/external node-commonjs \"https\"","webpack://projection/external node-commonjs \"net\"","webpack://projection/external node-commonjs \"os\"","webpack://projection/external node-commonjs \"path\"","webpack://projection/external node-commonjs \"tty\"","webpack://projection/external node-commonjs \"util\"","webpack://projection/webpack/bootstrap","webpack://projection/webpack/runtime/compat get default export","webpack://projection/webpack/runtime/define property getters","webpack://projection/webpack/runtime/hasOwnProperty shorthand","webpack://projection/webpack/runtime/make namespace object","webpack://projection/webpack/runtime/compat","webpack://projection/./public/events/WindowEvents.js","webpack://projection/external node-commonjs \"crypto\"","webpack://projection/./node_modules/uuid/dist/esm-node/rng.js","webpack://projection/./node_modules/uuid/dist/esm-node/regex.js","webpack://projection/./node_modules/uuid/dist/esm-node/stringify.js","webpack://projection/./node_modules/uuid/dist/esm-node/validate.js","webpack://projection/./node_modules/uuid/dist/esm-node/v4.js","webpack://projection/./public/utils/gltf/Buffer.js","webpack://projection/./public/utils/gltf/Accessor.js","webpack://projection/./node_modules/gl-matrix/esm/common.js","webpack://projection/./node_modules/gl-matrix/esm/vec3.js","webpack://projection/./public/utils/gltf/utils/groupInto.js","webpack://projection/./public/utils/gltf/PrimitiveProcessor.js","webpack://projection/./node_modules/gl-matrix/esm/mat4.js","webpack://projection/./node_modules/gl-matrix/esm/quat.js","webpack://projection/./node_modules/gl-matrix/esm/vec4.js","webpack://projection/./node_modules/gl-matrix/esm/mat3.js","webpack://projection/./public/utils/gltf/utils/parseNode.js","webpack://projection/./public/utils/gltf/utils/getPrimitive.js","webpack://projection/./public/utils/gltf/utils/parseMaterial.js","webpack://projection/./public/utils/gltf/glTF.js","webpack://projection/./public/events/FileSystemEvents.js","webpack://projection/./public/main.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = require(\"regenerator-runtime\");","\"use strict\";\n\nfunction atob(str) {\n  return Buffer.from(str, 'base64').toString('binary');\n}\n\nmodule.exports = atob.atob = atob;","var path = require('path');\n\nvar spawn = require('child_process').spawn;\n\nvar debug = require('debug')('electron-squirrel-startup');\n\nvar app = require('electron').app;\n\nvar run = function (args, done) {\n  var updateExe = path.resolve(path.dirname(process.execPath), '..', 'Update.exe');\n  debug('Spawning `%s` with args `%s`', updateExe, args);\n  spawn(updateExe, args, {\n    detached: true\n  }).on('close', done);\n};\n\nvar check = function () {\n  if (process.platform === 'win32') {\n    var cmd = process.argv[1];\n    debug('processing squirrel command `%s`', cmd);\n    var target = path.basename(process.execPath);\n\n    if (cmd === '--squirrel-install' || cmd === '--squirrel-updated') {\n      run(['--createShortcut=' + target + ''], app.quit);\n      return true;\n    }\n\n    if (cmd === '--squirrel-uninstall') {\n      run(['--removeShortcut=' + target + ''], app.quit);\n      return true;\n    }\n\n    if (cmd === '--squirrel-obsolete') {\n      app.quit();\n      return true;\n    }\n  }\n\n  return false;\n};\n\nmodule.exports = check();","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction createDebug(namespace) {\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace); // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}","/**\n * Module dependencies.\n */\nvar tty = require('tty');\n\nvar util = require('util');\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  }); // coerce string value into JS value\n\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;else if (/^(no|off|false|disabled)$/i.test(val)) val = false;else if (val === 'null') val = null;else val = Number(val);\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function () {}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')();\n}\n\nvar stream = 1 === fd ? process.stdout : 2 === fd ? process.stderr : createWritableStdioStream(fd);\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(fd);\n}\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\n\nexports.formatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts).split('\\n').map(function (str) {\n    return str.trim();\n  }).join(' ');\n};\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\n\nexports.formatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString() + ' ' + name + ' ' + args[0];\n  }\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\n\nfunction createWritableStdioStream(fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap'); // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty'; // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n\n      stream = new fs.SyncWriteStream(fd, {\n        autoClose: false\n      });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      }); // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe'; // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  } // For supporting legacy API we put the FD here.\n\n\n  stream.fd = fd;\n  stream._isStdio = true;\n  return stream;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\n\nexports.enable(load());","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  define(Gp, iteratorSymbol, function () {\n    return this;\n  });\n  define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function () {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}","'use strict'; // @ts-check\n// ==================================================================================\n// audio.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 16. audio\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\n\nconst execSync = require('child_process').execSync;\n\nconst util = require('./util'); // const fs = require('fs');\n\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos';\n\nfunction parseAudioType(str, input, output) {\n  let result = '';\n\n  if (str.indexOf('speak') >= 0) {\n    result = 'Speaker';\n  }\n\n  if (str.indexOf('laut') >= 0) {\n    result = 'Speaker';\n  }\n\n  if (str.indexOf('loud') >= 0) {\n    result = 'Speaker';\n  }\n\n  if (str.indexOf('head') >= 0) {\n    result = 'Headset';\n  }\n\n  if (str.indexOf('mic') >= 0) {\n    result = 'Microphone';\n  }\n\n  if (str.indexOf('mikr') >= 0) {\n    result = 'Microphone';\n  }\n\n  if (str.indexOf('phone') >= 0) {\n    result = 'Phone';\n  }\n\n  if (str.indexOf('controll') >= 0) {\n    result = 'Controller';\n  }\n\n  if (str.indexOf('line o') >= 0) {\n    result = 'Line Out';\n  }\n\n  if (str.indexOf('digital o') >= 0) {\n    result = 'Digital Out';\n  }\n\n  if (!result && output) {\n    result = 'Speaker';\n  } else if (!result && input) {\n    result = 'Microphone';\n  }\n\n  return result;\n}\n\nfunction getLinuxAudioPci() {\n  let cmd = 'lspci -v 2>/dev/null';\n  let result = [];\n\n  try {\n    const parts = execSync(cmd).toString().split('\\n\\n');\n\n    for (let i = 0; i < parts.length; i++) {\n      const lines = parts[i].split('\\n');\n\n      if (lines && lines.length && lines[0].toLowerCase().indexOf('audio') >= 0) {\n        const audio = {};\n        audio.slotId = lines[0].split(' ')[0];\n        audio.driver = util.getValue(lines, 'Kernel driver in use', ':', true) || util.getValue(lines, 'Kernel modules', ':', true);\n        result.push(audio);\n      }\n    }\n\n    return result;\n  } catch (e) {\n    return result;\n  }\n}\n\nfunction parseLinuxAudioPciMM(lines, audioPCI) {\n  const result = {};\n  const slotId = util.getValue(lines, 'Slot');\n  const pciMatch = audioPCI.filter(function (item) {\n    return item.slotId === slotId;\n  });\n  result.id = slotId;\n  result.name = util.getValue(lines, 'SDevice'); // result.type = util.getValue(lines, 'Class');\n\n  result.manufacturer = util.getValue(lines, 'SVendor');\n  result.revision = util.getValue(lines, 'Rev');\n  result.driver = pciMatch && pciMatch.length === 1 && pciMatch[0].driver ? pciMatch[0].driver : '';\n  result.default = null;\n  result.channel = 'PCIe';\n  result.type = parseAudioType(result.name, null, null);\n  result.in = null;\n  result.out = null;\n  result.status = 'online';\n  return result;\n}\n\nfunction parseDarwinChannel(str) {\n  let result = '';\n\n  if (str.indexOf('builtin') >= 0) {\n    result = 'Built-In';\n  }\n\n  if (str.indexOf('extern') >= 0) {\n    result = 'Audio-Jack';\n  }\n\n  if (str.indexOf('hdmi') >= 0) {\n    result = 'HDMI';\n  }\n\n  if (str.indexOf('displayport') >= 0) {\n    result = 'Display-Port';\n  }\n\n  if (str.indexOf('usb') >= 0) {\n    result = 'USB';\n  }\n\n  if (str.indexOf('pci') >= 0) {\n    result = 'PCIe';\n  }\n\n  return result;\n}\n\nfunction parseDarwinAudio(audioObject, id) {\n  const result = {};\n  const channelStr = ((audioObject.coreaudio_device_transport || '') + ' ' + (audioObject._name || '')).toLowerCase();\n  result.id = id;\n  result.name = audioObject._name;\n  result.manufacturer = audioObject.coreaudio_device_manufacturer;\n  result.revision = null;\n  result.driver = null;\n  result.default = !!(audioObject.coreaudio_default_audio_input_device || '') || !!(audioObject.coreaudio_default_audio_output_device || '');\n  result.channel = parseDarwinChannel(channelStr);\n  result.type = parseAudioType(result.name, !!(audioObject.coreaudio_device_input || ''), !!(audioObject.coreaudio_device_output || ''));\n  result.in = !!(audioObject.coreaudio_device_input || '');\n  result.out = !!(audioObject.coreaudio_device_output || '');\n  result.status = 'online';\n  return result;\n}\n\nfunction parseWindowsAudio(lines) {\n  const result = {};\n  const status = util.getValue(lines, 'StatusInfo', ':'); // const description = util.getValue(lines, 'Description', ':');\n\n  result.id = util.getValue(lines, 'DeviceID', ':'); // PNPDeviceID??\n\n  result.name = util.getValue(lines, 'name', ':');\n  result.manufacturer = util.getValue(lines, 'manufacturer', ':');\n  result.revision = null;\n  result.driver = null;\n  result.default = null;\n  result.channel = null;\n  result.type = parseAudioType(result.name, null, null);\n  result.in = null;\n  result.out = null;\n  result.status = status;\n  return result;\n}\n\nfunction audio(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = [];\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'lspci -vmm 2>/dev/null';\n        exec(cmd, function (error, stdout) {\n          // PCI\n          if (!error) {\n            const audioPCI = getLinuxAudioPci();\n            const parts = stdout.toString().split('\\n\\n');\n\n            for (let i = 0; i < parts.length; i++) {\n              const lines = parts[i].split('\\n');\n\n              if (util.getValue(lines, 'class', ':', true).toLowerCase().indexOf('audio') >= 0) {\n                const audio = parseLinuxAudioPciMM(lines, audioPCI);\n                result.push(audio);\n              }\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        let cmd = 'system_profiler SPAudioDataType -json';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            try {\n              const outObj = JSON.parse(stdout.toString());\n\n              if (outObj.SPAudioDataType && outObj.SPAudioDataType.length && outObj.SPAudioDataType[0] && outObj.SPAudioDataType[0]['_items'] && outObj.SPAudioDataType[0]['_items'].length) {\n                for (let i = 0; i < outObj.SPAudioDataType[0]['_items'].length; i++) {\n                  const audio = parseDarwinAudio(outObj.SPAudioDataType[0]['_items'][i], i);\n                  result.push(audio);\n                }\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_windows) {\n        util.powerShell('Get-WmiObject Win32_SoundDevice | select DeviceID,StatusInfo,Name,Manufacturer | fl').then((stdout, error) => {\n          if (!error) {\n            const parts = stdout.toString().split(/\\n\\s*\\n/);\n\n            for (let i = 0; i < parts.length; i++) {\n              if (util.getValue(parts[i].split('\\n'), 'name', ':')) {\n                result.push(parseWindowsAudio(parts[i].split('\\n')));\n              }\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.audio = audio;","'use strict'; // @ts-check;\n// ==================================================================================\n// battery.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 6. Battery\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\n\nconst fs = require('fs');\n\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos';\n\nfunction parseWinBatteryPart(lines, designedCapacity, fullChargeCapacity) {\n  const result = {};\n  let status = util.getValue(lines, 'BatteryStatus', ':').trim(); // 1 = \"Discharging\"\n  // 2 = \"On A/C\"\n  // 3 = \"Fully Charged\"\n  // 4 = \"Low\"\n  // 5 = \"Critical\"\n  // 6 = \"Charging\"\n  // 7 = \"Charging High\"\n  // 8 = \"Charging Low\"\n  // 9 = \"Charging Critical\"\n  // 10 = \"Undefined\"\n  // 11 = \"Partially Charged\"\n\n  if (status >= 0) {\n    const statusValue = status ? parseInt(status) : 0;\n    result.status = statusValue;\n    result.hasBattery = true;\n    result.maxCapacity = fullChargeCapacity || parseInt(util.getValue(lines, 'DesignCapacity', ':') || 0);\n    result.designedCapacity = parseInt(util.getValue(lines, 'DesignCapacity', ':') || designedCapacity);\n    result.voltage = parseInt(util.getValue(lines, 'DesignVoltage', ':') || 0) / 1000.0;\n    result.capacityUnit = 'mWh';\n    result.percent = parseInt(util.getValue(lines, 'EstimatedChargeRemaining', ':') || 0);\n    result.currentCapacity = parseInt(result.maxCapacity * result.percent / 100);\n    result.isCharging = statusValue >= 6 && statusValue <= 9 || statusValue === 11 || !(statusValue === 3) && !(statusValue === 1) && result.percent < 100;\n    result.acConnected = result.isCharging || statusValue === 2;\n    result.model = util.getValue(lines, 'DeviceID', ':');\n  } else {\n    result.status = -1;\n  }\n\n  return result;\n}\n\nmodule.exports = function (callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = {\n        hasBattery: false,\n        cycleCount: 0,\n        isCharging: false,\n        designedCapacity: 0,\n        maxCapacity: 0,\n        currentCapacity: 0,\n        voltage: 0,\n        capacityUnit: '',\n        percent: 0,\n        timeRemaining: null,\n        acConnected: true,\n        type: '',\n        model: '',\n        manufacturer: '',\n        serial: ''\n      };\n\n      if (_linux) {\n        let battery_path = '';\n\n        if (fs.existsSync('/sys/class/power_supply/BAT1/uevent')) {\n          battery_path = '/sys/class/power_supply/BAT1/';\n        } else if (fs.existsSync('/sys/class/power_supply/BAT0/uevent')) {\n          battery_path = '/sys/class/power_supply/BAT0/';\n        }\n\n        let acConnected = false;\n        let acPath = '';\n\n        if (fs.existsSync('/sys/class/power_supply/AC/online')) {\n          acPath = '/sys/class/power_supply/AC/online';\n        } else if (fs.existsSync('/sys/class/power_supply/AC0/online')) {\n          acPath = '/sys/class/power_supply/AC0/online';\n        }\n\n        if (acPath) {\n          const file = fs.readFileSync(acPath);\n          acConnected = file.toString().trim() === '1';\n        }\n\n        if (battery_path) {\n          fs.readFile(battery_path + 'uevent', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              result.isCharging = util.getValue(lines, 'POWER_SUPPLY_STATUS', '=').toLowerCase() === 'charging';\n              result.acConnected = acConnected || result.isCharging;\n              result.voltage = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_VOLTAGE_NOW', '='), 10) / 1000000.0;\n              result.capacityUnit = result.voltage ? 'mWh' : 'mAh';\n              result.cycleCount = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CYCLE_COUNT', '='), 10);\n              result.maxCapacity = Math.round(parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CHARGE_FULL', '=', true, true), 10) / 1000.0 * (result.voltage || 1));\n              const desingedMinVoltage = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_VOLTAGE_MIN_DESIGN', '='), 10) / 1000000.0;\n              result.designedCapacity = Math.round(parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CHARGE_FULL_DESIGN', '=', true, true), 10) / 1000.0 * (desingedMinVoltage || result.voltage || 1));\n              result.currentCapacity = Math.round(parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CHARGE_NOW', '='), 10) / 1000.0 * (result.voltage || 1));\n\n              if (!result.maxCapacity) {\n                result.maxCapacity = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_FULL', '=', true, true), 10) / 1000.0;\n                result.designedCapacity = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_FULL_DESIGN', '=', true, true), 10) / 1000.0 | result.maxCapacity;\n                result.currentCapacity = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_NOW', '='), 10) / 1000.0;\n              }\n\n              const percent = util.getValue(lines, 'POWER_SUPPLY_CAPACITY', '=');\n              const energy = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_NOW', '='), 10);\n              const power = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_POWER_NOW', '='), 10);\n              const current = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CURRENT_NOW', '='), 10);\n              result.percent = parseInt('0' + percent, 10);\n\n              if (result.maxCapacity && result.currentCapacity) {\n                result.hasBattery = true;\n\n                if (!percent) {\n                  result.percent = 100.0 * result.currentCapacity / result.maxCapacity;\n                }\n              }\n\n              if (result.isCharging) {\n                result.hasBattery = true;\n              }\n\n              if (energy && power) {\n                result.timeRemaining = Math.floor(energy / power * 60);\n              } else if (current && result.currentCapacity) {\n                result.timeRemaining = Math.floor(result.currentCapacity / current * 60);\n              }\n\n              result.type = util.getValue(lines, 'POWER_SUPPLY_TECHNOLOGY', '=');\n              result.model = util.getValue(lines, 'POWER_SUPPLY_MODEL_NAME', '=');\n              result.manufacturer = util.getValue(lines, 'POWER_SUPPLY_MANUFACTURER', '=');\n              result.serial = util.getValue(lines, 'POWER_SUPPLY_SERIAL_NUMBER', '=');\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          });\n        } else {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('sysctl -i hw.acpi.battery hw.acpi.acline', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          const batteries = parseInt('0' + util.getValue(lines, 'hw.acpi.battery.units'), 10);\n          const percent = parseInt('0' + util.getValue(lines, 'hw.acpi.battery.life'), 10);\n          result.hasBattery = batteries > 0;\n          result.cycleCount = null;\n          result.isCharging = util.getValue(lines, 'hw.acpi.acline') !== '1';\n          result.acConnected = result.isCharging;\n          result.maxCapacity = null;\n          result.currentCapacity = null;\n          result.capacityUnit = 'unknown';\n          result.percent = batteries ? percent : null;\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('ioreg -n AppleSmartBattery -r | egrep \"CycleCount|IsCharging|DesignCapacity|MaxCapacity|CurrentCapacity|BatterySerialNumber|TimeRemaining|Voltage\"; pmset -g batt | grep %', function (error, stdout) {\n          if (stdout) {\n            let lines = stdout.toString().replace(/ +/g, '').replace(/\"+/g, '').replace(/-/g, '').split('\\n');\n            result.cycleCount = parseInt('0' + util.getValue(lines, 'cyclecount', '='), 10);\n            result.voltage = parseInt('0' + util.getValue(lines, 'voltage', '='), 10) / 1000.0;\n            result.capacityUnit = result.voltage ? 'mWh' : 'mAh';\n            result.maxCapacity = Math.round(parseInt('0' + util.getValue(lines, 'applerawmaxcapacity', '='), 10) * (result.voltage || 1));\n            result.currentCapacity = Math.round(parseInt('0' + util.getValue(lines, 'applerawcurrentcapacity', '='), 10) * (result.voltage || 1));\n            result.designedCapacity = Math.round(parseInt('0' + util.getValue(lines, 'DesignCapacity', '='), 10) * (result.voltage || 1));\n            result.manufacturer = 'Apple';\n            result.serial = util.getValue(lines, 'BatterySerialNumber', '=');\n            let percent = null;\n            const line = util.getValue(lines, 'internal', 'Battery');\n            let parts = line.split(';');\n\n            if (parts && parts[0]) {\n              let parts2 = parts[0].split('\\t');\n\n              if (parts2 && parts2[1]) {\n                percent = parseFloat(parts2[1].trim().replace(/%/g, ''));\n              }\n            }\n\n            if (parts && parts[1]) {\n              result.isCharging = parts[1].trim() === 'charging';\n              result.acConnected = parts[1].trim() !== 'discharging';\n            } else {\n              result.isCharging = util.getValue(lines, 'ischarging', '=').toLowerCase() === 'yes';\n              result.acConnected = result.isCharging;\n            }\n\n            if (result.maxCapacity && result.currentCapacity) {\n              result.hasBattery = true;\n              result.type = 'Li-ion';\n              result.percent = percent !== null ? percent : Math.round(100.0 * result.currentCapacity / result.maxCapacity);\n\n              if (!result.isCharging) {\n                result.timeRemaining = parseInt('0' + util.getValue(lines, 'TimeRemaining', '='), 10);\n              }\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n\n      if (_windows) {\n        try {\n          const workload = [];\n          workload.push(util.powerShell('Get-WmiObject Win32_Battery | select BatteryStatus, DesignCapacity, DesignVoltage, EstimatedChargeRemaining, DeviceID | fl'));\n          workload.push(util.powerShell('(Get-WmiObject -Class BatteryStaticData -Namespace ROOT/WMI).DesignedCapacity'));\n          workload.push(util.powerShell('(Get-WmiObject -Class BatteryFullChargedCapacity -Namespace ROOT/WMI).FullChargedCapacity'));\n          util.promiseAll(workload).then(data => {\n            if (data) {\n              // let parts = data.results[0].split(/\\n\\s*\\n/);\n              let parts = data.results[0].split(/\\n\\s*\\n/);\n              let batteries = [];\n\n              const hasValue = value => /\\S/.test(value);\n\n              for (let i = 0; i < parts.length; i++) {\n                if (hasValue(parts[i]) && (!batteries.length || !hasValue(parts[i - 1]))) {\n                  batteries.push([]);\n                }\n\n                if (hasValue(parts[i])) {\n                  batteries[batteries.length - 1].push(parts[i]);\n                }\n              }\n\n              let designCapacities = data.results[1].split('\\r\\n').filter(e => e);\n              let fullChargeCapacities = data.results[2].split('\\r\\n').filter(e => e);\n\n              if (batteries.length) {\n                let first = false;\n                let additionalBatteries = [];\n\n                for (let i = 0; i < batteries.length; i++) {\n                  let lines = batteries[i][0].split('\\r\\n');\n                  const designedCapacity = designCapacities && designCapacities.length >= i + 1 && designCapacities[i] ? util.toInt(designCapacities[i]) : 0;\n                  const fullChargeCapacity = fullChargeCapacities && fullChargeCapacities.length >= i + 1 && fullChargeCapacities[i] ? util.toInt(fullChargeCapacities[i]) : 0;\n                  const parsed = parseWinBatteryPart(lines, designedCapacity, fullChargeCapacity);\n\n                  if (!first && parsed.status > 0 && parsed.status !== 10) {\n                    result.hasBattery = parsed.hasBattery;\n                    result.maxCapacity = parsed.maxCapacity;\n                    result.designedCapacity = parsed.designedCapacity;\n                    result.voltage = parsed.voltage;\n                    result.capacityUnit = parsed.capacityUnit;\n                    result.percent = parsed.percent;\n                    result.currentCapacity = parsed.currentCapacity;\n                    result.isCharging = parsed.isCharging;\n                    result.acConnected = parsed.acConnected;\n                    result.model = parsed.model;\n                    first = true;\n                  } else if (parsed.status !== -1) {\n                    additionalBatteries.push({\n                      hasBattery: parsed.hasBattery,\n                      maxCapacity: parsed.maxCapacity,\n                      designedCapacity: parsed.designedCapacity,\n                      voltage: parsed.voltage,\n                      capacityUnit: parsed.capacityUnit,\n                      percent: parsed.percent,\n                      currentCapacity: parsed.currentCapacity,\n                      isCharging: parsed.isCharging,\n                      timeRemaining: null,\n                      acConnected: parsed.acConnected,\n                      model: parsed.model,\n                      type: '',\n                      manufacturer: '',\n                      serial: ''\n                    });\n                  }\n                }\n\n                if (!first && additionalBatteries.length) {\n                  result = additionalBatteries[0];\n                  additionalBatteries.shift();\n                }\n\n                if (additionalBatteries.length) {\n                  result.additionalBatteries = additionalBatteries;\n                }\n              }\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n};","'use strict'; // @ts-check\n// ==================================================================================\n// audio.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 17. bluetooth\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\n\nconst execSync = require('child_process').execSync;\n\nconst path = require('path');\n\nconst util = require('./util');\n\nconst fs = require('fs');\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos';\n\nfunction parseBluetoothType(str) {\n  let result = '';\n\n  if (str.indexOf('keyboard') >= 0) {\n    result = 'Keyboard';\n  }\n\n  if (str.indexOf('mouse') >= 0) {\n    result = 'Mouse';\n  }\n\n  if (str.indexOf('speaker') >= 0) {\n    result = 'Speaker';\n  }\n\n  if (str.indexOf('headset') >= 0) {\n    result = 'Headset';\n  }\n\n  if (str.indexOf('phone') >= 0) {\n    result = 'Phone';\n  } // to be continued ...\n\n\n  return result;\n}\n\nfunction parseLinuxBluetoothInfo(lines, macAddr1, macAddr2) {\n  const result = {};\n  result.device = null;\n  result.name = util.getValue(lines, 'name', '=');\n  result.manufacturer = null;\n  result.macDevice = macAddr1;\n  result.macHost = macAddr2;\n  result.batteryPercent = null;\n  result.type = parseBluetoothType(result.name.toLowerCase());\n  result.connected = false;\n  return result;\n}\n\nfunction parseDarwinBluetoothDevices(bluetoothObject, macAddr2) {\n  const result = {};\n  const typeStr = ((bluetoothObject.device_minorClassOfDevice_string || bluetoothObject.device_majorClassOfDevice_string || '') + (bluetoothObject.device_name || '')).toLowerCase();\n  result.device = bluetoothObject.device_services || '';\n  result.name = bluetoothObject.device_name || '';\n  result.manufacturer = bluetoothObject.device_manufacturer || '';\n  result.macDevice = (bluetoothObject.device_addr || '').toLowerCase().replace(/-/g, ':');\n  result.macHost = macAddr2;\n  result.batteryPercent = bluetoothObject.device_batteryPercent || null;\n  result.type = parseBluetoothType(typeStr);\n  result.connected = bluetoothObject.device_isconnected === 'attrib_Yes' || false;\n  return result;\n}\n\nfunction parseWindowsBluetooth(lines) {\n  const result = {};\n  result.device = null;\n  result.name = util.getValue(lines, 'name', ':');\n  result.manufacturer = util.getValue(lines, 'manufacturer', ':');\n  result.macDevice = null;\n  result.macHost = null;\n  result.batteryPercent = null;\n  result.type = parseBluetoothType(result.name.toLowerCase());\n  result.connected = null;\n  return result;\n}\n\nfunction bluetoothDevices(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = [];\n\n      if (_linux) {\n        // get files in /var/lib/bluetooth/ recursive\n        const btFiles = util.getFilesInPath('/var/lib/bluetooth/');\n\n        for (let i = 0; i < btFiles.length; i++) {\n          const filename = path.basename(btFiles[i]);\n          const pathParts = btFiles[i].split('/');\n          const macAddr1 = pathParts.length >= 6 ? pathParts[pathParts.length - 2] : null;\n          const macAddr2 = pathParts.length >= 7 ? pathParts[pathParts.length - 3] : null;\n\n          if (filename === 'info') {\n            const infoFile = fs.readFileSync(btFiles[i], {\n              encoding: 'utf8'\n            }).split('\\n');\n            result.push(parseLinuxBluetoothInfo(infoFile, macAddr1, macAddr2));\n          }\n        } // determine \"connected\" with hcitool con\n\n\n        try {\n          const hdicon = execSync('hcitool con').toString().toLowerCase();\n\n          for (let i = 0; i < result.length; i++) {\n            if (result[i].macDevice && result[i].macDevice.length > 10 && hdicon.indexOf(result[i].macDevice.toLowerCase()) >= 0) {\n              result[i].connected = true;\n            }\n          }\n        } catch (e) {\n          util.noop();\n        }\n\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n\n      if (_darwin) {\n        let cmd = 'system_profiler SPBluetoothDataType -json';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            try {\n              const outObj = JSON.parse(stdout.toString());\n\n              if (outObj.SPBluetoothDataType && outObj.SPBluetoothDataType.length && outObj.SPBluetoothDataType[0] && outObj.SPBluetoothDataType[0]['device_title'] && outObj.SPBluetoothDataType[0]['device_title'].length) {\n                // missing: host BT Adapter macAddr ()\n                let macAddr2 = null;\n\n                if (outObj.SPBluetoothDataType[0]['local_device_title'] && outObj.SPBluetoothDataType[0].local_device_title.general_address) {\n                  macAddr2 = outObj.SPBluetoothDataType[0].local_device_title.general_address.toLowerCase().replace(/-/g, ':');\n                }\n\n                for (let i = 0; i < outObj.SPBluetoothDataType[0]['device_title'].length; i++) {\n                  const obj = outObj.SPBluetoothDataType[0]['device_title'][i];\n                  const objKey = Object.keys(obj);\n\n                  if (objKey && objKey.length === 1) {\n                    const innerObject = obj[objKey[0]];\n                    innerObject.device_name = objKey[0];\n                    const bluetoothDevice = parseDarwinBluetoothDevices(innerObject, macAddr2);\n                    result.push(bluetoothDevice);\n                  }\n                }\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_windows) {\n        util.powerShell('Get-WmiObject Win32_PNPEntity | select PNPClass, Name, Manufacturer | fl').then((stdout, error) => {\n          if (!error) {\n            const parts = stdout.toString().split(/\\n\\s*\\n/);\n\n            for (let i = 0; i < parts.length; i++) {\n              if (util.getValue(parts[i].split('\\n'), 'PNPClass', ':') === 'Bluetooth') {\n                result.push(parseWindowsBluetooth(parts[i].split('\\n')));\n              }\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_freebsd || _netbsd || _openbsd || _sunos) {\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.bluetoothDevices = bluetoothDevices;","'use strict'; // @ts-check\n// ==================================================================================\n// cpu.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 4. CPU\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\n\nconst exec = require('child_process').exec;\n\nconst execSync = require('child_process').execSync;\n\nconst fs = require('fs');\n\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos';\n\nlet _cpu_speed = 0;\nlet _current_cpu = {\n  user: 0,\n  nice: 0,\n  system: 0,\n  idle: 0,\n  irq: 0,\n  load: 0,\n  tick: 0,\n  ms: 0,\n  currentLoad: 0,\n  currentLoadUser: 0,\n  currentLoadSystem: 0,\n  currentLoadNice: 0,\n  currentLoadIdle: 0,\n  currentLoadIrq: 0,\n  rawCurrentLoad: 0,\n  rawCurrentLoadUser: 0,\n  rawCurrentLoadSystem: 0,\n  rawCurrentLoadNice: 0,\n  rawCurrentLoadIdle: 0,\n  rawCurrentLoadIrq: 0\n};\nlet _cpus = [];\nlet _corecount = 0;\nconst AMDBaseFrequencies = {\n  '8346': '1.8',\n  '8347': '1.9',\n  '8350': '2.0',\n  '8354': '2.2',\n  '8356|SE': '2.4',\n  '8356': '2.3',\n  '8360': '2.5',\n  '2372': '2.1',\n  '2373': '2.1',\n  '2374': '2.2',\n  '2376': '2.3',\n  '2377': '2.3',\n  '2378': '2.4',\n  '2379': '2.4',\n  '2380': '2.5',\n  '2381': '2.5',\n  '2382': '2.6',\n  '2384': '2.7',\n  '2386': '2.8',\n  '2387': '2.8',\n  '2389': '2.9',\n  '2393': '3.1',\n  '8374': '2.2',\n  '8376': '2.3',\n  '8378': '2.4',\n  '8379': '2.4',\n  '8380': '2.5',\n  '8381': '2.5',\n  '8382': '2.6',\n  '8384': '2.7',\n  '8386': '2.8',\n  '8387': '2.8',\n  '8389': '2.9',\n  '8393': '3.1',\n  '2419EE': '1.8',\n  '2423HE': '2.0',\n  '2425HE': '2.1',\n  '2427': '2.2',\n  '2431': '2.4',\n  '2435': '2.6',\n  '2439SE': '2.8',\n  '8425HE': '2.1',\n  '8431': '2.4',\n  '8435': '2.6',\n  '8439SE': '2.8',\n  '4122': '2.2',\n  '4130': '2.6',\n  '4162EE': '1.7',\n  '4164EE': '1.8',\n  '4170HE': '2.1',\n  '4174HE': '2.3',\n  '4176HE': '2.4',\n  '4180': '2.6',\n  '4184': '2.8',\n  '6124HE': '1.8',\n  '6128HE': '2.0',\n  '6132HE': '2.2',\n  '6128': '2.0',\n  '6134': '2.3',\n  '6136': '2.4',\n  '6140': '2.6',\n  '6164HE': '1.7',\n  '6166HE': '1.8',\n  '6168': '1.9',\n  '6172': '2.1',\n  '6174': '2.2',\n  '6176': '2.3',\n  '6176SE': '2.3',\n  '6180SE': '2.5',\n  '3250': '2.5',\n  '3260': '2.7',\n  '3280': '2.4',\n  '4226': '2.7',\n  '4228': '2.8',\n  '4230': '2.9',\n  '4234': '3.1',\n  '4238': '3.3',\n  '4240': '3.4',\n  '4256': '1.6',\n  '4274': '2.5',\n  '4276': '2.6',\n  '4280': '2.8',\n  '4284': '3.0',\n  '6204': '3.3',\n  '6212': '2.6',\n  '6220': '3.0',\n  '6234': '2.4',\n  '6238': '2.6',\n  '6262HE': '1.6',\n  '6272': '2.1',\n  '6274': '2.2',\n  '6276': '2.3',\n  '6278': '2.4',\n  '6282SE': '2.6',\n  '6284SE': '2.7',\n  '6308': '3.5',\n  '6320': '2.8',\n  '6328': '3.2',\n  '6338P': '2.3',\n  '6344': '2.6',\n  '6348': '2.8',\n  '6366': '1.8',\n  '6370P': '2.0',\n  '6376': '2.3',\n  '6378': '2.4',\n  '6380': '2.5',\n  '6386': '2.8',\n  'FX|4100': '3.6',\n  'FX|4120': '3.9',\n  'FX|4130': '3.8',\n  'FX|4150': '3.8',\n  'FX|4170': '4.2',\n  'FX|6100': '3.3',\n  'FX|6120': '3.6',\n  'FX|6130': '3.6',\n  'FX|6200': '3.8',\n  'FX|8100': '2.8',\n  'FX|8120': '3.1',\n  'FX|8140': '3.2',\n  'FX|8150': '3.6',\n  'FX|8170': '3.9',\n  'FX|4300': '3.8',\n  'FX|4320': '4.0',\n  'FX|4350': '4.2',\n  'FX|6300': '3.5',\n  'FX|6350': '3.9',\n  'FX|8300': '3.3',\n  'FX|8310': '3.4',\n  'FX|8320': '3.5',\n  'FX|8350': '4.0',\n  'FX|8370': '4.0',\n  'FX|9370': '4.4',\n  'FX|9590': '4.7',\n  'FX|8320E': '3.2',\n  'FX|8370E': '3.3',\n  // ZEN Desktop CPUs\n  '1200': '3.1',\n  'Pro 1200': '3.1',\n  '1300X': '3.5',\n  'Pro 1300': '3.5',\n  '1400': '3.2',\n  '1500X': '3.5',\n  'Pro 1500': '3.5',\n  '1600': '3.2',\n  '1600X': '3.6',\n  'Pro 1600': '3.2',\n  '1700': '3.0',\n  'Pro 1700': '3.0',\n  '1700X': '3.4',\n  'Pro 1700X': '3.4',\n  '1800X': '3.6',\n  '1900X': '3.8',\n  '1920': '3.2',\n  '1920X': '3.5',\n  '1950X': '3.4',\n  // ZEN Desktop APUs\n  '200GE': '3.2',\n  'Pro 200GE': '3.2',\n  '220GE': '3.4',\n  '240GE': '3.5',\n  '3000G': '3.5',\n  '300GE': '3.4',\n  '3050GE': '3.4',\n  '2200G': '3.5',\n  'Pro 2200G': '3.5',\n  '2200GE': '3.2',\n  'Pro 2200GE': '3.2',\n  '2400G': '3.6',\n  'Pro 2400G': '3.6',\n  '2400GE': '3.2',\n  'Pro 2400GE': '3.2',\n  // ZEN Mobile APUs\n  'Pro 200U': '2.3',\n  '300U': '2.4',\n  '2200U': '2.5',\n  '3200U': '2.6',\n  '2300U': '2.0',\n  'Pro 2300U': '2.0',\n  '2500U': '2.0',\n  'Pro 2500U': '2.2',\n  '2600H': '3.2',\n  '2700U': '2.0',\n  'Pro 2700U': '2.2',\n  '2800H': '3.3',\n  // ZEN Server Processors\n  '7351': '2.4',\n  '7351P': '2.4',\n  '7401': '2.0',\n  '7401P': '2.0',\n  '7551P': '2.0',\n  '7551': '2.0',\n  '7251': '2.1',\n  '7261': '2.5',\n  '7281': '2.1',\n  '7301': '2.2',\n  '7371': '3.1',\n  '7451': '2.3',\n  '7501': '2.0',\n  '7571': '2.2',\n  '7601': '2.2',\n  // ZEN Embedded Processors\n  'V1500B': '2.2',\n  'V1780B': '3.35',\n  'V1202B': '2.3',\n  'V1404I': '2.0',\n  'V1605B': '2.0',\n  'V1756B': '3.25',\n  'V1807B': '3.35',\n  '3101': '2.1',\n  '3151': '2.7',\n  '3201': '1.5',\n  '3251': '2.5',\n  '3255': '2.5',\n  '3301': '2.0',\n  '3351': '1.9',\n  '3401': '1.85',\n  '3451': '2.15',\n  // ZEN+ Desktop\n  '1200|AF': '3.1',\n  '2300X': '3.5',\n  '2500X': '3.6',\n  '2600': '3.4',\n  '2600E': '3.1',\n  '1600|AF': '3.2',\n  '2600X': '3.6',\n  '2700': '3.2',\n  '2700E': '2.8',\n  'Pro 2700': '3.2',\n  '2700X': '3.7',\n  'Pro 2700X': '3.6',\n  '2920X': '3.5',\n  '2950X': '3.5',\n  '2970WX': '3.0',\n  '2990WX': '3.0',\n  // ZEN+ Desktop APU\n  'Pro 300GE': '3.4',\n  'Pro 3125GE': '3.4',\n  '3150G': '3.5',\n  'Pro 3150G': '3.5',\n  '3150GE': '3.3',\n  'Pro 3150GE': '3.3',\n  '3200G': '3.6',\n  'Pro 3200G': '3.6',\n  '3200GE': '3.3',\n  'Pro 3200GE': '3.3',\n  '3350G': '3.6',\n  'Pro 3350G': '3.6',\n  '3350GE': '3.3',\n  'Pro 3350GE': '3.3',\n  '3400G': '3.7',\n  'Pro 3400G': '3.7',\n  '3400GE': '3.3',\n  'Pro 3400GE': '3.3',\n  // ZEN+ Mobile\n  '3300U': '2.1',\n  'PRO 3300U': '2.1',\n  '3450U': '2.1',\n  '3500U': '2.1',\n  'PRO 3500U': '2.1',\n  '3500C': '2.1',\n  '3550H': '2.1',\n  '3580U': '2.1',\n  '3700U': '2.3',\n  'PRO 3700U': '2.3',\n  '3700C': '2.3',\n  '3750H': '2.3',\n  '3780U': '2.3',\n  // ZEN2 Desktop CPUS\n  '3100': '3.6',\n  '3300X': '3.8',\n  '3500': '3.6',\n  '3500X': '3.6',\n  '3600': '3.6',\n  'Pro 3600': '3.6',\n  '3600X': '3.8',\n  '3600XT': '3.8',\n  'Pro 3700': '3.6',\n  '3700X': '3.6',\n  '3800X': '3.9',\n  '3800XT': '3.9',\n  '3900': '3.1',\n  'Pro 3900': '3.1',\n  '3900X': '3.8',\n  '3900XT': '3.8',\n  '3950X': '3.5',\n  '3960X': '3.8',\n  '3970X': '3.7',\n  '3990X': '2.9',\n  '3945WX': '4.0',\n  '3955WX': '3.9',\n  '3975WX': '3.5',\n  '3995WX': '2.7',\n  // ZEN2 Desktop APUs\n  '4300GE': '3.5',\n  'Pro 4300GE': '3.5',\n  '4300G': '3.8',\n  'Pro 4300G': '3.8',\n  '4600GE': '3.3',\n  'Pro 4650GE': '3.3',\n  '4600G': '3.7',\n  'Pro 4650G': '3.7',\n  '4700GE': '3.1',\n  'Pro 4750GE': '3.1',\n  '4700G': '3.6',\n  'Pro 4750G': '3.6',\n  '4300U': '2.7',\n  '4450U': '2.5',\n  'Pro 4450U': '2.5',\n  '4500U': '2.3',\n  '4600U': '2.1',\n  'PRO 4650U': '2.1',\n  '4680U': '2.1',\n  '4600HS': '3.0',\n  '4600H': '3.0',\n  '4700U': '2.0',\n  'PRO 4750U': '1.7',\n  '4800U': '1.8',\n  '4800HS': '2.9',\n  '4800H': '2.9',\n  '4900HS': '3.0',\n  '4900H': '3.3',\n  '5300U': '2.6',\n  '5500U': '2.1',\n  '5700U': '1.8',\n  // ZEN2 - EPYC\n  '7232P': '3.1',\n  '7302P': '3.0',\n  '7402P': '2.8',\n  '7502P': '2.5',\n  '7702P': '2.0',\n  '7252': '3.1',\n  '7262': '3.2',\n  '7272': '2.9',\n  '7282': '2.8',\n  '7302': '3.0',\n  '7352': '2.3',\n  '7402': '2.8',\n  '7452': '2.35',\n  '7502': '2.5',\n  '7532': '2.4',\n  '7542': '2.9',\n  '7552': '2.2',\n  '7642': '2.3',\n  '7662': '2.0',\n  '7702': '2.0',\n  '7742': '2.25',\n  '7H12': '2.6',\n  '7F32': '3.7',\n  '7F52': '3.5',\n  '7F72': '3.2',\n  // Epyc (Milan)\n  '7763': '2.45',\n  '7713': '2.0',\n  '7713P': '2.0',\n  '7663': '2.0',\n  '7643': '2.3',\n  '75F3': '2.95',\n  '7543': '2.8',\n  '7543P': '2.8',\n  '7513': '2.6',\n  '7453': '2.75',\n  '74F3': '3.2',\n  '7443': '2.85',\n  '7443P': '2.85',\n  '7413': '2.65',\n  '73F3': '3.5',\n  '7343': '3.2',\n  '7313': '3.0',\n  '7313P': '3.0',\n  '72F3': '3.7',\n  // ZEN3\n  '5600X': '3.7',\n  '5800X': '3.8',\n  '5900X': '3.7',\n  '5950X': '3.4'\n};\nconst socketTypes = {\n  1: 'Other',\n  2: 'Unknown',\n  3: 'Daughter Board',\n  4: 'ZIF Socket',\n  5: 'Replacement/Piggy Back',\n  6: 'None',\n  7: 'LIF Socket',\n  8: 'Slot 1',\n  9: 'Slot 2',\n  10: '370 Pin Socket',\n  11: 'Slot A',\n  12: 'Slot M',\n  13: '423',\n  14: 'A (Socket 462)',\n  15: '478',\n  16: '754',\n  17: '940',\n  18: '939',\n  19: 'mPGA604',\n  20: 'LGA771',\n  21: 'LGA775',\n  22: 'S1',\n  23: 'AM2',\n  24: 'F (1207)',\n  25: 'LGA1366',\n  26: 'G34',\n  27: 'AM3',\n  28: 'C32',\n  29: 'LGA1156',\n  30: 'LGA1567',\n  31: 'PGA988A',\n  32: 'BGA1288',\n  33: 'rPGA988B',\n  34: 'BGA1023',\n  35: 'BGA1224',\n  36: 'LGA1155',\n  37: 'LGA1356',\n  38: 'LGA2011',\n  39: 'FS1',\n  40: 'FS2',\n  41: 'FM1',\n  42: 'FM2',\n  43: 'LGA2011-3',\n  44: 'LGA1356-3',\n  45: 'LGA1150',\n  46: 'BGA1168',\n  47: 'BGA1234',\n  48: 'BGA1364',\n  49: 'AM4',\n  50: 'LGA1151',\n  51: 'BGA1356',\n  52: 'BGA1440',\n  53: 'BGA1515',\n  54: 'LGA3647-1',\n  55: 'SP3',\n  56: 'SP3r2',\n  57: 'LGA2066',\n  58: 'BGA1392',\n  59: 'BGA1510',\n  60: 'BGA1528',\n  61: 'LGA4189',\n  62: 'LGA1200',\n  63: 'LGA4677'\n};\nconst socketTypesByName = {\n  'LGA1150': 'i7-5775C i3-4340 i3-4170 G3250 i3-4160T i3-4160 E3-1231 G3258 G3240 i7-4790S i7-4790K i7-4790 i5-4690K i5-4690 i5-4590T i5-4590S i5-4590 i5-4460 i3-4360 i3-4150 G1820 G3420 G3220 i7-4771 i5-4440 i3-4330 i3-4130T i3-4130 E3-1230 i7-4770S i7-4770K i7-4770 i5-4670K i5-4670 i5-4570T i5-4570S i5-4570 i5-4430',\n  'LGA1151': 'i9-9900KS E-2288G E-2224 G5420 i9-9900T i9-9900 i7-9700T i7-9700F i7-9700E i7-9700 i5-9600 i5-9500T i5-9500F i5-9500 i5-9400T i3-9350K i3-9300 i3-9100T i3-9100F i3-9100 G4930 i9-9900KF i7-9700KF i5-9600KF i5-9400F i5-9400 i3-9350KF i9-9900K i7-9700K i5-9600K G5500 G5400 i7-8700T i7-8086K i5-8600 i5-8500T i5-8500 i5-8400T i3-8300 i3-8100T G4900 i7-8700K i7-8700 i5-8600K i5-8400 i3-8350K i3-8100 E3-1270 G4600 G4560 i7-7700T i7-7700K i7-7700 i5-7600K i5-7600 i5-7500T i5-7500 i5-7400 i3-7350K i3-7300 i3-7100T i3-7100 G3930 G3900 G4400 i7-6700T i7-6700K i7-6700 i5-6600K i5-6600 i5-6500T i5-6500 i5-6400T i5-6400 i3-6300 i3-6100T i3-6100 E3-1270 E3-1270 T4500 T4400',\n  '1155': 'G440 G460 G465 G470 G530T G540T G550T G1610T G1620T G530 G540 G1610 G550 G1620 G555 G1630 i3-2100T i3-2120T i3-3220T i3-3240T i3-3250T i3-2100 i3-2105 i3-2102 i3-3210 i3-3220 i3-2125 i3-2120 i3-3225 i3-2130 i3-3245 i3-3240 i3-3250 i5-3570T i5-2500T i5-2400S i5-2405S i5-2390T i5-3330S i5-2500S i5-3335S i5-2300 i5-3450S i5-3340S i5-3470S i5-3475S i5-3470T i5-2310 i5-3550S i5-2320 i5-3330 i5-3350P i5-3450 i5-2400 i5-3340 i5-3570S i5-2380P i5-2450P i5-3470 i5-2500K i5-3550 i5-2500 i5-3570 i5-3570K i5-2550K i7-3770T i7-2600S i7-3770S i7-2600K i7-2600 i7-3770 i7-3770K i7-2700K G620T G630T G640T G2020T G645T G2100T G2030T G622 G860T G620 G632 G2120T G630 G640 G2010 G840 G2020 G850 G645 G2030 G860 G2120 G870 G2130 G2140 E3-1220L E3-1220L E3-1260L E3-1265L E3-1220 E3-1225 E3-1220 E3-1235 E3-1225 E3-1230 E3-1230 E3-1240 E3-1245 E3-1270 E3-1275 E3-1240 E3-1245 E3-1270 E3-1280 E3-1275 E3-1290 E3-1280 E3-1290'\n};\n\nfunction getSocketTypesByName(str) {\n  let result = '';\n\n  for (const key in socketTypesByName) {\n    const names = socketTypesByName[key].split(' ');\n\n    for (let i = 0; i < names.length; i++) {\n      if (str.indexOf(names[i]) >= 0) {\n        result = key;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction cpuManufacturer(str) {\n  let result = str;\n  str = str.toLowerCase();\n\n  if (str.indexOf('intel') >= 0) {\n    result = 'Intel';\n  }\n\n  if (str.indexOf('amd') >= 0) {\n    result = 'AMD';\n  }\n\n  if (str.indexOf('qemu') >= 0) {\n    result = 'QEMU';\n  }\n\n  if (str.indexOf('hygon') >= 0) {\n    result = 'Hygon';\n  }\n\n  if (str.indexOf('centaur') >= 0) {\n    result = 'WinChip/Via';\n  }\n\n  if (str.indexOf('vmware') >= 0) {\n    result = 'VMware';\n  }\n\n  if (str.indexOf('Xen') >= 0) {\n    result = 'Xen Hypervisor';\n  }\n\n  if (str.indexOf('tcg') >= 0) {\n    result = 'QEMU';\n  }\n\n  if (str.indexOf('apple') >= 0) {\n    result = 'Apple';\n  }\n\n  return result;\n}\n\nfunction cpuBrandManufacturer(res) {\n  res.brand = res.brand.replace(/\\(R\\)+/g, '®').replace(/\\s+/g, ' ').trim();\n  res.brand = res.brand.replace(/\\(TM\\)+/g, '™').replace(/\\s+/g, ' ').trim();\n  res.brand = res.brand.replace(/\\(C\\)+/g, '©').replace(/\\s+/g, ' ').trim();\n  res.brand = res.brand.replace(/CPU+/g, '').replace(/\\s+/g, ' ').trim();\n  res.manufacturer = cpuManufacturer(res.brand);\n  let parts = res.brand.split(' ');\n  parts.shift();\n  res.brand = parts.join(' ');\n  return res;\n}\n\nfunction getAMDSpeed(brand) {\n  let result = '0';\n\n  for (let key in AMDBaseFrequencies) {\n    if ({}.hasOwnProperty.call(AMDBaseFrequencies, key)) {\n      let parts = key.split('|');\n      let found = 0;\n      parts.forEach(item => {\n        if (brand.indexOf(item) > -1) {\n          found++;\n        }\n      });\n\n      if (found === parts.length) {\n        result = AMDBaseFrequencies[key];\n      }\n    }\n  }\n\n  return parseFloat(result);\n} // --------------------------\n// CPU - brand, speed\n\n\nfunction getCpu() {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      const UNKNOWN = 'unknown';\n      let result = {\n        manufacturer: UNKNOWN,\n        brand: UNKNOWN,\n        vendor: '',\n        family: '',\n        model: '',\n        stepping: '',\n        revision: '',\n        voltage: '',\n        speed: 0,\n        speedMin: 0,\n        speedMax: 0,\n        governor: '',\n        cores: util.cores(),\n        physicalCores: util.cores(),\n        processors: 1,\n        socket: '',\n        flags: '',\n        virtualization: false,\n        cache: {}\n      };\n      cpuFlags().then(flags => {\n        result.flags = flags;\n        result.virtualization = flags.indexOf('vmx') > -1 || flags.indexOf('svm') > -1; // if (_windows) {\n        //   try {\n        //     const systeminfo = execSync('systeminfo', util.execOptsWin).toString();\n        //     result.virtualization = result.virtualization || (systeminfo.indexOf('Virtualization Enabled In Firmware: Yes') !== -1) || (systeminfo.indexOf('Virtualisierung in Firmware aktiviert: Ja') !== -1) || (systeminfo.indexOf('Virtualisation activée dans le microprogramme : Qiu') !== -1);\n        //   } catch (e) {\n        //     util.noop();\n        //   }\n        // }\n\n        if (_darwin) {\n          exec('sysctl machdep.cpu hw.cpufrequency_max hw.cpufrequency_min hw.packages hw.physicalcpu_max hw.ncpu hw.tbfrequency hw.cpufamily hw.cpusubfamily', function (error, stdout) {\n            let lines = stdout.toString().split('\\n');\n            const modelline = util.getValue(lines, 'machdep.cpu.brand_string');\n            const modellineParts = modelline.split('@');\n            result.brand = modellineParts[0].trim();\n            const speed = modellineParts[1] ? modellineParts[1].trim() : '0';\n            result.speed = parseFloat(speed.replace(/GHz+/g, ''));\n            let tbFrequency = util.getValue(lines, 'hw.tbfrequency') / 1000000000.0;\n            tbFrequency = tbFrequency < 0.1 ? tbFrequency * 100 : tbFrequency;\n            result.speed = result.speed === 0 ? tbFrequency : result.speed;\n            _cpu_speed = result.speed;\n            result = cpuBrandManufacturer(result);\n            result.speedMin = util.getValue(lines, 'hw.cpufrequency_min') ? util.getValue(lines, 'hw.cpufrequency_min') / 1000000000.0 : result.speed;\n            result.speedMax = util.getValue(lines, 'hw.cpufrequency_max') ? util.getValue(lines, 'hw.cpufrequency_max') / 1000000000.0 : result.speed;\n            result.vendor = util.getValue(lines, 'machdep.cpu.vendor') || 'Apple';\n            result.family = util.getValue(lines, 'machdep.cpu.family') || util.getValue(lines, 'hw.cpufamily');\n            result.model = util.getValue(lines, 'machdep.cpu.model');\n            result.stepping = util.getValue(lines, 'machdep.cpu.stepping') || util.getValue(lines, 'hw.cpusubfamily');\n            const countProcessors = util.getValue(lines, 'hw.packages');\n            const countCores = util.getValue(lines, 'hw.physicalcpu_max');\n            const countThreads = util.getValue(lines, 'hw.ncpu');\n\n            if (os.arch() === 'arm64') {\n              const clusters = execSync('ioreg -c IOPlatformDevice -d 3 -r | grep cluster-type').toString().split('\\n');\n              const efficiencyCores = clusters.filter(line => line.indexOf('\"E\"') >= 0).length;\n              const performanceCores = clusters.filter(line => line.indexOf('\"P\"') >= 0).length;\n              result.socket = 'SOC';\n              result.efficiencyCores = efficiencyCores;\n              result.performanceCores = performanceCores;\n            }\n\n            if (countProcessors) {\n              result.processors = parseInt(countProcessors) || 1;\n            }\n\n            if (countCores && countThreads) {\n              result.cores = parseInt(countThreads) || util.cores();\n              result.physicalCores = parseInt(countCores) || util.cores();\n            }\n\n            cpuCache().then(res => {\n              result.cache = res;\n              resolve(result);\n            });\n          });\n        }\n\n        if (_linux) {\n          let modelline = '';\n          let lines = [];\n\n          if (os.cpus()[0] && os.cpus()[0].model) {\n            modelline = os.cpus()[0].model;\n          }\n\n          exec('export LC_ALL=C; lscpu; echo -n \"Governor: \"; cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor 2>/dev/null; echo; unset LC_ALL', function (error, stdout) {\n            if (!error) {\n              lines = stdout.toString().split('\\n');\n            }\n\n            modelline = util.getValue(lines, 'model name') || modelline;\n            const modellineParts = modelline.split('@');\n            result.brand = modellineParts[0].trim();\n            result.speed = modellineParts[1] ? parseFloat(modellineParts[1].trim()) : 0;\n\n            if (result.speed === 0 && (result.brand.indexOf('AMD') > -1 || result.brand.toLowerCase().indexOf('ryzen') > -1)) {\n              result.speed = getAMDSpeed(result.brand);\n            }\n\n            if (result.speed === 0) {\n              const current = getCpuCurrentSpeedSync();\n\n              if (current.avg !== 0) {\n                result.speed = current.avg;\n              }\n            }\n\n            _cpu_speed = result.speed;\n            result.speedMin = Math.round(parseFloat(util.getValue(lines, 'cpu min mhz').replace(/,/g, '.')) / 10.0) / 100;\n            result.speedMax = Math.round(parseFloat(util.getValue(lines, 'cpu max mhz').replace(/,/g, '.')) / 10.0) / 100;\n            result = cpuBrandManufacturer(result);\n            result.vendor = cpuManufacturer(util.getValue(lines, 'vendor id')); // if (!result.vendor) { result.vendor = util.getValue(lines, 'anbieterkennung'); }\n\n            result.family = util.getValue(lines, 'cpu family'); // if (!result.family) { result.family = util.getValue(lines, 'prozessorfamilie'); }\n\n            result.model = util.getValue(lines, 'model:'); // if (!result.model) { result.model = util.getValue(lines, 'modell:'); }\n\n            result.stepping = util.getValue(lines, 'stepping');\n            result.revision = util.getValue(lines, 'cpu revision');\n            result.cache.l1d = util.getValue(lines, 'l1d cache');\n\n            if (result.cache.l1d) {\n              result.cache.l1d = parseInt(result.cache.l1d) * (result.cache.l1d.indexOf('M') !== -1 ? 1024 * 1024 : result.cache.l1d.indexOf('K') !== -1 ? 1024 : 1);\n            }\n\n            result.cache.l1i = util.getValue(lines, 'l1i cache');\n\n            if (result.cache.l1i) {\n              result.cache.l1i = parseInt(result.cache.l1i) * (result.cache.l1i.indexOf('M') !== -1 ? 1024 * 1024 : result.cache.l1i.indexOf('K') !== -1 ? 1024 : 1);\n            }\n\n            result.cache.l2 = util.getValue(lines, 'l2 cache');\n\n            if (result.cache.l2) {\n              result.cache.l2 = parseInt(result.cache.l2) * (result.cache.l2.indexOf('M') !== -1 ? 1024 * 1024 : result.cache.l2.indexOf('K') !== -1 ? 1024 : 1);\n            }\n\n            result.cache.l3 = util.getValue(lines, 'l3 cache');\n\n            if (result.cache.l3) {\n              result.cache.l3 = parseInt(result.cache.l3) * (result.cache.l3.indexOf('M') !== -1 ? 1024 * 1024 : result.cache.l3.indexOf('K') !== -1 ? 1024 : 1);\n            }\n\n            const threadsPerCore = util.getValue(lines, 'thread(s) per core') || '1'; // const coresPerSocketInt = parseInt(util.getValue(lines, 'cores(s) per socket') || '1', 10);\n\n            const processors = util.getValue(lines, 'socket(s)') || '1';\n            let threadsPerCoreInt = parseInt(threadsPerCore, 10);\n            let processorsInt = parseInt(processors, 10);\n            result.physicalCores = result.cores / threadsPerCoreInt;\n            result.processors = processorsInt;\n            result.governor = util.getValue(lines, 'governor') || ''; // Test Raspberry\n\n            if (result.vendor === 'ARM') {\n              const linesRpi = fs.readFileSync('/proc/cpuinfo').toString().split('\\n');\n              const rPIRevision = util.decodePiCpuinfo(linesRpi);\n\n              if (rPIRevision.model.toLowerCase().indexOf('raspberry') >= 0) {\n                result.family = result.manufacturer;\n                result.manufacturer = rPIRevision.manufacturer;\n                result.brand = rPIRevision.processor;\n                result.revision = rPIRevision.revisionCode;\n                result.socket = 'SOC';\n              }\n            } // socket type\n\n\n            let lines2 = [];\n            exec('export LC_ALL=C; dmidecode –t 4 2>/dev/null | grep \"Upgrade: Socket\"; unset LC_ALL', function (error2, stdout2) {\n              lines2 = stdout2.toString().split('\\n');\n\n              if (lines2 && lines2.length) {\n                result.socket = util.getValue(lines2, 'Upgrade').replace('Socket', '').trim() || result.socket;\n              }\n\n              resolve(result);\n            });\n          });\n        }\n\n        if (_freebsd || _openbsd || _netbsd) {\n          let modelline = '';\n          let lines = [];\n\n          if (os.cpus()[0] && os.cpus()[0].model) {\n            modelline = os.cpus()[0].model;\n          }\n\n          exec('export LC_ALL=C; dmidecode -t 4; dmidecode -t 7 unset LC_ALL', function (error, stdout) {\n            let cache = [];\n\n            if (!error) {\n              const data = stdout.toString().split('# dmidecode');\n              const processor = data.length > 1 ? data[1] : '';\n              cache = data.length > 2 ? data[2].split('Cache Information') : [];\n              lines = processor.split('\\n');\n            }\n\n            result.brand = modelline.split('@')[0].trim();\n            result.speed = modelline.split('@')[1] ? parseFloat(modelline.split('@')[1].trim()) : 0;\n\n            if (result.speed === 0 && (result.brand.indexOf('AMD') > -1 || result.brand.toLowerCase().indexOf('ryzen') > -1)) {\n              result.speed = getAMDSpeed(result.brand);\n            }\n\n            if (result.speed === 0) {\n              const current = getCpuCurrentSpeedSync();\n\n              if (current.avg !== 0) {\n                result.speed = current.avg;\n              }\n            }\n\n            _cpu_speed = result.speed;\n            result.speedMin = result.speed;\n            result.speedMax = Math.round(parseFloat(util.getValue(lines, 'max speed').replace(/Mhz/g, '')) / 10.0) / 100;\n            result = cpuBrandManufacturer(result);\n            result.vendor = cpuManufacturer(util.getValue(lines, 'manufacturer'));\n            let sig = util.getValue(lines, 'signature');\n            sig = sig.split(',');\n\n            for (var i = 0; i < sig.length; i++) {\n              sig[i] = sig[i].trim();\n            }\n\n            result.family = util.getValue(sig, 'Family', ' ', true);\n            result.model = util.getValue(sig, 'Model', ' ', true);\n            result.stepping = util.getValue(sig, 'Stepping', ' ', true);\n            result.revision = '';\n            const voltage = parseFloat(util.getValue(lines, 'voltage'));\n            result.voltage = isNaN(voltage) ? '' : voltage.toFixed(2);\n\n            for (let i = 0; i < cache.length; i++) {\n              lines = cache[i].split('\\n');\n              let cacheType = util.getValue(lines, 'Socket Designation').toLowerCase().replace(' ', '-').split('-');\n              cacheType = cacheType.length ? cacheType[0] : '';\n              const sizeParts = util.getValue(lines, 'Installed Size').split(' ');\n              let size = parseInt(sizeParts[0], 10);\n              const unit = sizeParts.length > 1 ? sizeParts[1] : 'kb';\n              size = size * (unit === 'kb' ? 1024 : unit === 'mb' ? 1024 * 1024 : unit === 'gb' ? 1024 * 1024 * 1024 : 1);\n\n              if (cacheType) {\n                if (cacheType === 'l1') {\n                  result.cache[cacheType + 'd'] = size / 2;\n                  result.cache[cacheType + 'i'] = size / 2;\n                } else {\n                  result.cache[cacheType] = size;\n                }\n              }\n            } // socket type\n\n\n            result.socket = util.getValue(lines, 'Upgrade').replace('Socket', '').trim(); // # threads / # cores\n\n            const threadCount = util.getValue(lines, 'thread count').trim();\n            const coreCount = util.getValue(lines, 'core count').trim();\n\n            if (coreCount && threadCount) {\n              result.cores = parseInt(threadCount, 10);\n              result.physicalCores = parseInt(coreCount, 10);\n            }\n\n            resolve(result);\n          });\n        }\n\n        if (_sunos) {\n          resolve(result);\n        }\n\n        if (_windows) {\n          try {\n            const workload = [];\n            workload.push(util.powerShell('Get-WmiObject Win32_processor | select Name, Revision, L2CacheSize, L3CacheSize, Manufacturer, MaxClockSpeed, Description, UpgradeMethod, Caption, NumberOfLogicalProcessors, NumberOfCores | fl'));\n            workload.push(util.powerShell('Get-WmiObject Win32_CacheMemory | select CacheType,InstalledSize,Level | fl')); // workload.push(util.powerShell('Get-ComputerInfo -property \"HyperV*\"'));\n\n            workload.push(util.powerShell('(Get-CimInstance Win32_ComputerSystem).HypervisorPresent'));\n            Promise.all(workload).then(data => {\n              let lines = data[0].split('\\r\\n');\n              let name = util.getValue(lines, 'name', ':') || '';\n\n              if (name.indexOf('@') >= 0) {\n                result.brand = name.split('@')[0].trim();\n                result.speed = name.split('@')[1] ? parseFloat(name.split('@')[1].trim()) : 0;\n                _cpu_speed = result.speed;\n              } else {\n                result.brand = name.trim();\n                result.speed = 0;\n              }\n\n              result = cpuBrandManufacturer(result);\n              result.revision = util.getValue(lines, 'revision', ':');\n              result.cache.l1d = 0;\n              result.cache.l1i = 0;\n              result.cache.l2 = util.getValue(lines, 'l2cachesize', ':');\n              result.cache.l3 = util.getValue(lines, 'l3cachesize', ':');\n\n              if (result.cache.l2) {\n                result.cache.l2 = parseInt(result.cache.l2, 10) * 1024;\n              }\n\n              if (result.cache.l3) {\n                result.cache.l3 = parseInt(result.cache.l3, 10) * 1024;\n              }\n\n              result.vendor = util.getValue(lines, 'manufacturer', ':');\n              result.speedMax = Math.round(parseFloat(util.getValue(lines, 'maxclockspeed', ':').replace(/,/g, '.')) / 10.0) / 100;\n\n              if (result.speed === 0 && (result.brand.indexOf('AMD') > -1 || result.brand.toLowerCase().indexOf('ryzen') > -1)) {\n                result.speed = getAMDSpeed(result.brand);\n              }\n\n              if (result.speed === 0) {\n                result.speed = result.speedMax;\n              }\n\n              result.speedMin = result.speed;\n              let description = util.getValue(lines, 'description', ':').split(' ');\n\n              for (let i = 0; i < description.length; i++) {\n                if (description[i].toLowerCase().startsWith('family') && i + 1 < description.length && description[i + 1]) {\n                  result.family = description[i + 1];\n                }\n\n                if (description[i].toLowerCase().startsWith('model') && i + 1 < description.length && description[i + 1]) {\n                  result.model = description[i + 1];\n                }\n\n                if (description[i].toLowerCase().startsWith('stepping') && i + 1 < description.length && description[i + 1]) {\n                  result.stepping = description[i + 1];\n                }\n              } // socket type\n\n\n              const socketId = util.getValue(lines, 'UpgradeMethod', ':');\n\n              if (socketTypes[socketId]) {\n                result.socket = socketTypes[socketId];\n              }\n\n              const socketByName = getSocketTypesByName(name);\n\n              if (socketByName) {\n                result.socket = socketByName;\n              } // # threads / # cores\n\n\n              const countProcessors = util.countLines(lines, 'Caption');\n              const countThreads = util.getValue(lines, 'NumberOfLogicalProcessors', ':');\n              const countCores = util.getValue(lines, 'NumberOfCores', ':');\n\n              if (countProcessors) {\n                result.processors = parseInt(countProcessors) || 1;\n              }\n\n              if (countCores && countThreads) {\n                result.cores = parseInt(countThreads) || util.cores();\n                result.physicalCores = parseInt(countCores) || util.cores();\n              }\n\n              if (countProcessors > 1) {\n                result.cores = result.cores * countProcessors;\n                result.physicalCores = result.physicalCores * countProcessors;\n              }\n\n              const parts = data[1].split(/\\n\\s*\\n/);\n              parts.forEach(function (part) {\n                lines = part.split('\\r\\n');\n                const cacheType = util.getValue(lines, 'CacheType');\n                const level = util.getValue(lines, 'Level');\n                const installedSize = util.getValue(lines, 'InstalledSize'); // L1 Instructions\n\n                if (level === '3' && cacheType === '3') {\n                  result.cache.l1i = parseInt(installedSize, 10);\n                } // L1 Data\n\n\n                if (level === '3' && cacheType === '4') {\n                  result.cache.l1d = parseInt(installedSize, 10);\n                } // L1 all\n\n\n                if (level === '3' && cacheType === '5' && !result.cache.l1i && !result.cache.l1d) {\n                  result.cache.l1i = parseInt(installedSize, 10) / 2;\n                  result.cache.l1d = parseInt(installedSize, 10) / 2;\n                }\n              }); // lines = data[2].split('\\r\\n');\n              // result.virtualization = (util.getValue(lines, 'HyperVRequirementVirtualizationFirmwareEnabled').toLowerCase() === 'true');\n              // result.virtualization = (util.getValue(lines, 'HyperVisorPresent').toLowerCase() === 'true');\n\n              const hyperv = data[2] ? data[2].toString().toLowerCase() : '';\n              result.virtualization = hyperv.indexOf('true') !== -1;\n              resolve(result);\n            });\n          } catch (e) {\n            resolve(result);\n          }\n        }\n      });\n    });\n  });\n} // --------------------------\n// CPU - Processor Data\n\n\nfunction cpu(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      getCpu().then(result => {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.cpu = cpu; // --------------------------\n// CPU - current speed - in GHz\n\nfunction getCpuCurrentSpeedSync() {\n  let cpus = os.cpus();\n  let minFreq = 999999999;\n  let maxFreq = 0;\n  let avgFreq = 0;\n  let cores = [];\n\n  if (cpus && cpus.length) {\n    for (let i in cpus) {\n      if ({}.hasOwnProperty.call(cpus, i)) {\n        let freq = cpus[i].speed > 100 ? (cpus[i].speed + 1) / 1000 : cpus[i].speed / 10;\n        avgFreq = avgFreq + freq;\n\n        if (freq > maxFreq) {\n          maxFreq = freq;\n        }\n\n        if (freq < minFreq) {\n          minFreq = freq;\n        }\n\n        cores.push(parseFloat(freq.toFixed(2)));\n      }\n    }\n\n    avgFreq = avgFreq / cpus.length;\n    return {\n      min: parseFloat(minFreq.toFixed(2)),\n      max: parseFloat(maxFreq.toFixed(2)),\n      avg: parseFloat(avgFreq.toFixed(2)),\n      cores: cores\n    };\n  } else {\n    return {\n      min: 0,\n      max: 0,\n      avg: 0,\n      cores: cores\n    };\n  }\n}\n\nfunction cpuCurrentSpeed(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = getCpuCurrentSpeedSync();\n\n      if (result.avg === 0 && _cpu_speed !== 0) {\n        const currCpuSpeed = parseFloat(_cpu_speed);\n        result = {\n          min: currCpuSpeed,\n          max: currCpuSpeed,\n          avg: currCpuSpeed,\n          cores: []\n        };\n      }\n\n      if (callback) {\n        callback(result);\n      }\n\n      resolve(result);\n    });\n  });\n}\n\nexports.cpuCurrentSpeed = cpuCurrentSpeed; // --------------------------\n// CPU - temperature\n// if sensors are installed\n\nfunction cpuTemperature(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = {\n        main: null,\n        cores: [],\n        max: null,\n        socket: [],\n        chipset: null\n      };\n\n      if (_linux) {\n        // CPU Chipset, Socket\n        try {\n          const cmd = 'cat /sys/class/thermal/thermal_zone*/type  2>/dev/null; echo \"-----\"; cat /sys/class/thermal/thermal_zone*/temp 2>/dev/null;';\n          const parts = execSync(cmd).toString().split('-----\\n');\n\n          if (parts.length === 2) {\n            const lines = parts[0].split('\\n');\n            const lines2 = parts[1].split('\\n');\n\n            for (let i = 0; i < lines.length; i++) {\n              const line = lines[i].trim();\n\n              if (line.startsWith('acpi') && lines2[i]) {\n                result.socket.push(Math.round(parseInt(lines2[i], 10) / 100) / 10);\n              }\n\n              if (line.startsWith('pch') && lines2[i]) {\n                result.chipset = Math.round(parseInt(lines2[i], 10) / 100) / 10;\n              }\n            }\n          }\n        } catch (e) {\n          util.noop();\n        }\n\n        const cmd = 'for mon in /sys/class/hwmon/hwmon*; do for label in \"$mon\"/temp*_label; do if [ -f $label ]; then value=$(echo $label | rev | cut -c 7- | rev)_input; if [ -f \"$value\" ]; then echo $(cat \"$label\")___$(cat \"$value\");  fi; fi; done; done;';\n\n        try {\n          exec(cmd, function (error, stdout) {\n            stdout = stdout.toString();\n            const tdiePos = stdout.toLowerCase().indexOf('tdie');\n\n            if (tdiePos !== -1) {\n              stdout = stdout.substring(tdiePos);\n            }\n\n            let lines = stdout.split('\\n');\n            lines.forEach(line => {\n              const parts = line.split('___');\n              const label = parts[0];\n              const value = parts.length > 1 && parts[1] ? parts[1] : '0';\n\n              if (value && (label === undefined || label && label.toLowerCase().startsWith('core'))) {\n                result.cores.push(Math.round(parseInt(value, 10) / 100) / 10);\n              } else if (value && label && result.main === null) {\n                result.main = Math.round(parseInt(value, 10) / 100) / 10;\n              }\n            });\n\n            if (result.cores.length > 0) {\n              if (result.main === null) {\n                result.main = Math.round(result.cores.reduce((a, b) => a + b, 0) / result.cores.length);\n              }\n\n              let maxtmp = Math.max.apply(Math, result.cores);\n              result.max = maxtmp > result.main ? maxtmp : result.main;\n            }\n\n            if (result.main !== null) {\n              if (result.max === null) {\n                result.max = result.main;\n              }\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n              return;\n            }\n\n            exec('sensors', function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                let tdieTemp = null;\n                let newSectionStarts = true;\n                let section = '';\n                lines.forEach(function (line) {\n                  // determine section\n                  if (line.trim() === '') {\n                    newSectionStarts = true;\n                  } else if (newSectionStarts) {\n                    if (line.trim().toLowerCase().startsWith('acpi')) {\n                      section = 'acpi';\n                    }\n\n                    if (line.trim().toLowerCase().startsWith('pch')) {\n                      section = 'pch';\n                    }\n\n                    if (line.trim().toLowerCase().startsWith('core')) {\n                      section = 'core';\n                    }\n\n                    newSectionStarts = false;\n                  }\n\n                  let regex = /[+-]([^°]*)/g;\n                  let temps = line.match(regex);\n                  let firstPart = line.split(':')[0].toUpperCase();\n\n                  if (section === 'acpi') {\n                    // socket temp\n                    if (firstPart.indexOf('TEMP') !== -1) {\n                      result.socket.push(parseFloat(temps));\n                    }\n                  } else if (section === 'pch') {\n                    // chipset temp\n                    if (firstPart.indexOf('TEMP') !== -1) {\n                      result.chipset = parseFloat(temps);\n                    }\n                  } // cpu temp\n\n\n                  if (firstPart.indexOf('PHYSICAL') !== -1 || firstPart.indexOf('PACKAGE') !== -1) {\n                    result.main = parseFloat(temps);\n                  }\n\n                  if (firstPart.indexOf('CORE ') !== -1) {\n                    result.cores.push(parseFloat(temps));\n                  }\n\n                  if (firstPart.indexOf('TDIE') !== -1 && tdieTemp === null) {\n                    tdieTemp = parseFloat(temps);\n                  }\n                });\n\n                if (result.cores.length > 0) {\n                  if (result.main === null) {\n                    result.main = Math.round(result.cores.reduce((a, b) => a + b, 0) / result.cores.length);\n                  }\n\n                  let maxtmp = Math.max.apply(Math, result.cores);\n                  result.max = maxtmp > result.main ? maxtmp : result.main;\n                } else {\n                  if (result.main === null && tdieTemp !== null) {\n                    result.main = tdieTemp;\n                    result.max = tdieTemp;\n                  }\n                }\n\n                if (result.main !== null || result.max !== null) {\n                  if (callback) {\n                    callback(result);\n                  }\n\n                  resolve(result);\n                  return;\n                }\n              }\n\n              fs.stat('/sys/class/thermal/thermal_zone0/temp', function (err) {\n                if (err === null) {\n                  fs.readFile('/sys/class/thermal/thermal_zone0/temp', function (error, stdout) {\n                    if (!error) {\n                      let lines = stdout.toString().split('\\n');\n\n                      if (lines.length > 0) {\n                        result.main = parseFloat(lines[0]) / 1000.0;\n                        result.max = result.main;\n                      }\n                    }\n\n                    if (callback) {\n                      callback(result);\n                    }\n\n                    resolve(result);\n                  });\n                } else {\n                  exec('/opt/vc/bin/vcgencmd measure_temp', function (error, stdout) {\n                    if (!error) {\n                      let lines = stdout.toString().split('\\n');\n\n                      if (lines.length > 0 && lines[0].indexOf('=')) {\n                        result.main = parseFloat(lines[0].split('=')[1]);\n                        result.max = result.main;\n                      }\n                    }\n\n                    if (callback) {\n                      callback(result);\n                    }\n\n                    resolve(result);\n                  });\n                }\n              });\n            });\n          });\n        } catch (er) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('sysctl dev.cpu | grep temp', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            let sum = 0;\n            lines.forEach(function (line) {\n              const parts = line.split(':');\n\n              if (parts.length > 1) {\n                const temp = parseFloat(parts[1].replace(',', '.'));\n\n                if (temp > result.max) {\n                  result.max = temp;\n                }\n\n                sum = sum + temp;\n                result.cores.push(temp);\n              }\n            });\n\n            if (result.cores.length) {\n              result.main = Math.round(sum / result.cores.length * 100) / 100;\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        let osxTemp = null;\n\n        try {\n          osxTemp = require('osx-temperature-sensor');\n        } catch (er) {\n          osxTemp = null;\n        }\n\n        if (osxTemp) {\n          result = osxTemp.cpuTemperature();\n        }\n\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n\n      if (_windows) {\n        try {\n          util.powerShell('Get-WmiObject MSAcpi_ThermalZoneTemperature -Namespace \"root/wmi\" | Select CurrentTemperature').then((stdout, error) => {\n            if (!error) {\n              let sum = 0;\n              let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n              lines.forEach(function (line) {\n                let value = (parseInt(line, 10) - 2732) / 10;\n\n                if (!isNaN(value)) {\n                  sum = sum + value;\n\n                  if (value > result.max) {\n                    result.max = value;\n                  }\n\n                  result.cores.push(value);\n                }\n              });\n\n              if (result.cores.length) {\n                result.main = sum / result.cores.length;\n              }\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.cpuTemperature = cpuTemperature; // --------------------------\n// CPU Flags\n\nfunction cpuFlags(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = '';\n\n      if (_windows) {\n        try {\n          exec('reg query \"HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0\" /v FeatureSet', util.execOptsWin, function (error, stdout) {\n            if (!error) {\n              let flag_hex = stdout.split('0x').pop().trim();\n              let flag_bin_unpadded = parseInt(flag_hex, 16).toString(2);\n              let flag_bin = '0'.repeat(32 - flag_bin_unpadded.length) + flag_bin_unpadded; // empty flags are the reserved fields in the CPUID feature bit list\n              // as found on wikipedia:\n              // https://en.wikipedia.org/wiki/CPUID\n\n              let all_flags = ['fpu', 'vme', 'de', 'pse', 'tsc', 'msr', 'pae', 'mce', 'cx8', 'apic', '', 'sep', 'mtrr', 'pge', 'mca', 'cmov', 'pat', 'pse-36', 'psn', 'clfsh', '', 'ds', 'acpi', 'mmx', 'fxsr', 'sse', 'sse2', 'ss', 'htt', 'tm', 'ia64', 'pbe'];\n\n              for (let f = 0; f < all_flags.length; f++) {\n                if (flag_bin[f] === '1' && all_flags[f] !== '') {\n                  result += ' ' + all_flags[f];\n                }\n              }\n\n              result = result.trim().toLowerCase();\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n\n      if (_linux) {\n        try {\n          exec('export LC_ALL=C; lscpu; unset LC_ALL', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                if (line.split(':')[0].toUpperCase().indexOf('FLAGS') !== -1) {\n                  result = line.split(':')[1].trim().toLowerCase();\n                }\n              });\n            }\n\n            if (!result) {\n              fs.readFile('/proc/cpuinfo', function (error, stdout) {\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  result = util.getValue(lines, 'features', ':', true).toLowerCase();\n                }\n\n                if (callback) {\n                  callback(result);\n                }\n\n                resolve(result);\n              });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t 4 2>/dev/null; unset LC_ALL', function (error, stdout) {\n          let flags = [];\n\n          if (!error) {\n            let parts = stdout.toString().split('\\tFlags:');\n            const lines = parts.length > 1 ? parts[1].split('\\tVersion:')[0].split('\\n') : [];\n            lines.forEach(function (line) {\n              let flag = (line.indexOf('(') ? line.split('(')[0].toLowerCase() : '').trim().replace(/\\t/g, '');\n\n              if (flag) {\n                flags.push(flag);\n              }\n            });\n          }\n\n          result = flags.join(' ').trim().toLowerCase();\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('sysctl machdep.cpu.features', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n\n            if (lines.length > 0 && lines[0].indexOf('machdep.cpu.features:') !== -1) {\n              result = lines[0].split(':')[1].trim().toLowerCase();\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.cpuFlags = cpuFlags; // --------------------------\n// CPU Cache\n\nfunction cpuCache(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = {\n        l1d: null,\n        l1i: null,\n        l2: null,\n        l3: null\n      };\n\n      if (_linux) {\n        try {\n          exec('export LC_ALL=C; lscpu; unset LC_ALL', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                let parts = line.split(':');\n\n                if (parts[0].toUpperCase().indexOf('L1D CACHE') !== -1) {\n                  result.l1d = parseInt(parts[1].trim()) * (parts[1].indexOf('M') !== -1 ? 1024 * 1024 : parts[1].indexOf('K') !== -1 ? 1024 : 1);\n                }\n\n                if (parts[0].toUpperCase().indexOf('L1I CACHE') !== -1) {\n                  result.l1i = parseInt(parts[1].trim()) * (parts[1].indexOf('M') !== -1 ? 1024 * 1024 : parts[1].indexOf('K') !== -1 ? 1024 : 1);\n                }\n\n                if (parts[0].toUpperCase().indexOf('L2 CACHE') !== -1) {\n                  result.l2 = parseInt(parts[1].trim()) * (parts[1].indexOf('M') !== -1 ? 1024 * 1024 : parts[1].indexOf('K') !== -1 ? 1024 : 1);\n                }\n\n                if (parts[0].toUpperCase().indexOf('L3 CACHE') !== -1) {\n                  result.l3 = parseInt(parts[1].trim()) * (parts[1].indexOf('M') !== -1 ? 1024 * 1024 : parts[1].indexOf('K') !== -1 ? 1024 : 1);\n                }\n              });\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t 7 2>/dev/null; unset LC_ALL', function (error, stdout) {\n          let cache = [];\n\n          if (!error) {\n            const data = stdout.toString();\n            cache = data.split('Cache Information');\n            cache.shift();\n          }\n\n          for (let i = 0; i < cache.length; i++) {\n            const lines = cache[i].split('\\n');\n            let cacheType = util.getValue(lines, 'Socket Designation').toLowerCase().replace(' ', '-').split('-');\n            cacheType = cacheType.length ? cacheType[0] : '';\n            const sizeParts = util.getValue(lines, 'Installed Size').split(' ');\n            let size = parseInt(sizeParts[0], 10);\n            const unit = sizeParts.length > 1 ? sizeParts[1] : 'kb';\n            size = size * (unit === 'kb' ? 1024 : unit === 'mb' ? 1024 * 1024 : unit === 'gb' ? 1024 * 1024 * 1024 : 1);\n\n            if (cacheType) {\n              if (cacheType === 'l1') {\n                result.cache[cacheType + 'd'] = size / 2;\n                result.cache[cacheType + 'i'] = size / 2;\n              } else {\n                result.cache[cacheType] = size;\n              }\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('sysctl hw.l1icachesize hw.l1dcachesize hw.l2cachesize hw.l3cachesize', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            lines.forEach(function (line) {\n              let parts = line.split(':');\n\n              if (parts[0].toLowerCase().indexOf('hw.l1icachesize') !== -1) {\n                result.l1d = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n\n              if (parts[0].toLowerCase().indexOf('hw.l1dcachesize') !== -1) {\n                result.l1i = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n\n              if (parts[0].toLowerCase().indexOf('hw.l2cachesize') !== -1) {\n                result.l2 = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n\n              if (parts[0].toLowerCase().indexOf('hw.l3cachesize') !== -1) {\n                result.l3 = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n            });\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n\n      if (_windows) {\n        try {\n          util.powerShell('Get-WmiObject Win32_processor | select L2CacheSize, L3CacheSize | fl').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.split('\\r\\n');\n              result.l1d = 0;\n              result.l1i = 0;\n              result.l2 = util.getValue(lines, 'l2cachesize', ':');\n              result.l3 = util.getValue(lines, 'l3cachesize', ':');\n\n              if (result.l2) {\n                result.l2 = parseInt(result.l2, 10) * 1024;\n              }\n\n              if (result.l3) {\n                result.l3 = parseInt(result.l3, 10) * 1024;\n              }\n            }\n\n            util.powerShell('Get-WmiObject Win32_CacheMemory | select CacheType,InstalledSize,Level | fl').then((stdout, error) => {\n              if (!error) {\n                const parts = stdout.split(/\\n\\s*\\n/);\n                parts.forEach(function (part) {\n                  const lines = part.split('\\r\\n');\n                  const cacheType = util.getValue(lines, 'CacheType');\n                  const level = util.getValue(lines, 'Level');\n                  const installedSize = util.getValue(lines, 'InstalledSize'); // L1 Instructions\n\n                  if (level === '3' && cacheType === '3') {\n                    result.l1i = parseInt(installedSize, 10);\n                  } // L1 Data\n\n\n                  if (level === '3' && cacheType === '4') {\n                    result.l1d = parseInt(installedSize, 10);\n                  } // L1 all\n\n\n                  if (level === '3' && cacheType === '5' && !result.l1i && !result.l1d) {\n                    result.l1i = parseInt(installedSize, 10) / 2;\n                    result.l1d = parseInt(installedSize, 10) / 2;\n                  }\n                });\n              }\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            });\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.cpuCache = cpuCache; // --------------------------\n// CPU - current load - in %\n\nfunction getLoad() {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let loads = os.loadavg().map(function (x) {\n        return x / util.cores();\n      });\n      let avgLoad = parseFloat(Math.max.apply(Math, loads).toFixed(2));\n      let result = {};\n\n      let now = Date.now() - _current_cpu.ms;\n\n      if (now >= 200) {\n        _current_cpu.ms = Date.now();\n        const cpus = os.cpus();\n        let totalUser = 0;\n        let totalSystem = 0;\n        let totalNice = 0;\n        let totalIrq = 0;\n        let totalIdle = 0;\n        let cores = [];\n        _corecount = cpus && cpus.length ? cpus.length : 0;\n\n        for (let i = 0; i < _corecount; i++) {\n          const cpu = cpus[i].times;\n          totalUser += cpu.user;\n          totalSystem += cpu.sys;\n          totalNice += cpu.nice;\n          totalIdle += cpu.idle;\n          totalIrq += cpu.irq;\n          let tmpTick = _cpus && _cpus[i] && _cpus[i].totalTick ? _cpus[i].totalTick : 0;\n          let tmpLoad = _cpus && _cpus[i] && _cpus[i].totalLoad ? _cpus[i].totalLoad : 0;\n          let tmpUser = _cpus && _cpus[i] && _cpus[i].user ? _cpus[i].user : 0;\n          let tmpSystem = _cpus && _cpus[i] && _cpus[i].sys ? _cpus[i].sys : 0;\n          let tmpNice = _cpus && _cpus[i] && _cpus[i].nice ? _cpus[i].nice : 0;\n          let tmpIdle = _cpus && _cpus[i] && _cpus[i].idle ? _cpus[i].idle : 0;\n          let tmpIrq = _cpus && _cpus[i] && _cpus[i].irq ? _cpus[i].irq : 0;\n          _cpus[i] = cpu;\n          _cpus[i].totalTick = _cpus[i].user + _cpus[i].sys + _cpus[i].nice + _cpus[i].irq + _cpus[i].idle;\n          _cpus[i].totalLoad = _cpus[i].user + _cpus[i].sys + _cpus[i].nice + _cpus[i].irq;\n          _cpus[i].currentTick = _cpus[i].totalTick - tmpTick;\n          _cpus[i].load = _cpus[i].totalLoad - tmpLoad;\n          _cpus[i].loadUser = _cpus[i].user - tmpUser;\n          _cpus[i].loadSystem = _cpus[i].sys - tmpSystem;\n          _cpus[i].loadNice = _cpus[i].nice - tmpNice;\n          _cpus[i].loadIdle = _cpus[i].idle - tmpIdle;\n          _cpus[i].loadIrq = _cpus[i].irq - tmpIrq;\n          cores[i] = {};\n          cores[i].load = _cpus[i].load / _cpus[i].currentTick * 100;\n          cores[i].loadUser = _cpus[i].loadUser / _cpus[i].currentTick * 100;\n          cores[i].loadSystem = _cpus[i].loadSystem / _cpus[i].currentTick * 100;\n          cores[i].loadNice = _cpus[i].loadNice / _cpus[i].currentTick * 100;\n          cores[i].loadIdle = _cpus[i].loadIdle / _cpus[i].currentTick * 100;\n          cores[i].loadIrq = _cpus[i].loadIrq / _cpus[i].currentTick * 100;\n          cores[i].rawLoad = _cpus[i].load;\n          cores[i].rawLoadUser = _cpus[i].loadUser;\n          cores[i].rawLoadSystem = _cpus[i].loadSystem;\n          cores[i].rawLoadNice = _cpus[i].loadNice;\n          cores[i].rawLoadIdle = _cpus[i].loadIdle;\n          cores[i].rawLoadIrq = _cpus[i].loadIrq;\n        }\n\n        let totalTick = totalUser + totalSystem + totalNice + totalIrq + totalIdle;\n        let totalLoad = totalUser + totalSystem + totalNice + totalIrq;\n        let currentTick = totalTick - _current_cpu.tick;\n        result = {\n          avgLoad: avgLoad,\n          currentLoad: (totalLoad - _current_cpu.load) / currentTick * 100,\n          currentLoadUser: (totalUser - _current_cpu.user) / currentTick * 100,\n          currentLoadSystem: (totalSystem - _current_cpu.system) / currentTick * 100,\n          currentLoadNice: (totalNice - _current_cpu.nice) / currentTick * 100,\n          currentLoadIdle: (totalIdle - _current_cpu.idle) / currentTick * 100,\n          currentLoadIrq: (totalIrq - _current_cpu.irq) / currentTick * 100,\n          rawCurrentLoad: totalLoad - _current_cpu.load,\n          rawCurrentLoadUser: totalUser - _current_cpu.user,\n          rawCurrentLoadSystem: totalSystem - _current_cpu.system,\n          rawCurrentLoadNice: totalNice - _current_cpu.nice,\n          rawCurrentLoadIdle: totalIdle - _current_cpu.idle,\n          rawCurrentLoadIrq: totalIrq - _current_cpu.irq,\n          cpus: cores\n        };\n        _current_cpu = {\n          user: totalUser,\n          nice: totalNice,\n          system: totalSystem,\n          idle: totalIdle,\n          irq: totalIrq,\n          tick: totalTick,\n          load: totalLoad,\n          ms: _current_cpu.ms,\n          currentLoad: result.currentLoad,\n          currentLoadUser: result.currentLoadUser,\n          currentLoadSystem: result.currentLoadSystem,\n          currentLoadNice: result.currentLoadNice,\n          currentLoadIdle: result.currentLoadIdle,\n          currentLoadIrq: result.currentLoadIrq,\n          rawCurrentLoad: result.rawCurrentLoad,\n          rawCurrentLoadUser: result.rawCurrentLoadUser,\n          rawCurrentLoadSystem: result.rawCurrentLoadSystem,\n          rawCurrentLoadNice: result.rawCurrentLoadNice,\n          rawCurrentLoadIdle: result.rawCurrentLoadIdle,\n          rawCurrentLoadIrq: result.rawCurrentLoadIrq\n        };\n      } else {\n        let cores = [];\n\n        for (let i = 0; i < _corecount; i++) {\n          cores[i] = {};\n          cores[i].load = _cpus[i].load / _cpus[i].currentTick * 100;\n          cores[i].loadUser = _cpus[i].loadUser / _cpus[i].currentTick * 100;\n          cores[i].loadSystem = _cpus[i].loadSystem / _cpus[i].currentTick * 100;\n          cores[i].loadNice = _cpus[i].loadNice / _cpus[i].currentTick * 100;\n          cores[i].loadIdle = _cpus[i].loadIdle / _cpus[i].currentTick * 100;\n          cores[i].loadIrq = _cpus[i].loadIrq / _cpus[i].currentTick * 100;\n          cores[i].rawLoad = _cpus[i].load;\n          cores[i].rawLoadUser = _cpus[i].loadUser;\n          cores[i].rawLoadSystem = _cpus[i].loadSystem;\n          cores[i].rawLoadNice = _cpus[i].loadNice;\n          cores[i].rawLoadIdle = _cpus[i].loadIdle;\n          cores[i].rawLoadIrq = _cpus[i].loadIrq;\n        }\n\n        result = {\n          avgLoad: avgLoad,\n          currentLoad: _current_cpu.currentLoad,\n          currentLoadUser: _current_cpu.currentLoadUser,\n          currentLoadSystem: _current_cpu.currentLoadSystem,\n          currentLoadNice: _current_cpu.currentLoadNice,\n          currentLoadIdle: _current_cpu.currentLoadIdle,\n          currentLoadIrq: _current_cpu.currentLoadIrq,\n          rawCurrentLoad: _current_cpu.rawCurrentLoad,\n          rawCurrentLoadUser: _current_cpu.rawCurrentLoadUser,\n          rawCurrentLoadSystem: _current_cpu.rawCurrentLoadSystem,\n          rawCurrentLoadNice: _current_cpu.rawCurrentLoadNice,\n          rawCurrentLoadIdle: _current_cpu.rawCurrentLoadIdle,\n          rawCurrentLoadIrq: _current_cpu.rawCurrentLoadIrq,\n          cpus: cores\n        };\n      }\n\n      resolve(result);\n    });\n  });\n}\n\nfunction currentLoad(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      getLoad().then(result => {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.currentLoad = currentLoad; // --------------------------\n// PS - full load\n// since bootup\n\nfunction getFullLoad() {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      const cpus = os.cpus();\n      let totalUser = 0;\n      let totalSystem = 0;\n      let totalNice = 0;\n      let totalIrq = 0;\n      let totalIdle = 0;\n      let result = 0;\n\n      if (cpus && cpus.length) {\n        for (let i = 0, len = cpus.length; i < len; i++) {\n          const cpu = cpus[i].times;\n          totalUser += cpu.user;\n          totalSystem += cpu.sys;\n          totalNice += cpu.nice;\n          totalIrq += cpu.irq;\n          totalIdle += cpu.idle;\n        }\n\n        let totalTicks = totalIdle + totalIrq + totalNice + totalSystem + totalUser;\n        result = (totalTicks - totalIdle) / totalTicks * 100.0;\n      } else {\n        result = 0;\n      }\n\n      resolve(result);\n    });\n  });\n}\n\nfunction fullLoad(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      getFullLoad().then(result => {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.fullLoad = fullLoad;","'use strict'; // @ts-check\n// ==================================================================================\n// docker.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 13. Docker\n// ----------------------------------------------------------------------------------\n\nconst util = require('./util');\n\nconst DockerSocket = require('./dockerSocket');\n\nlet _platform = process.platform;\n\nconst _windows = _platform === 'win32';\n\nlet _docker_container_stats = {};\n\nlet _docker_socket;\n\nlet _docker_last_read = 0; // --------------------------\n// get containers (parameter all: get also inactive/exited containers)\n\nfunction dockerInfo(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n\n      const result = {};\n\n      _docker_socket.getInfo(data => {\n        result.id = data.ID;\n        result.containers = data.Containers;\n        result.containersRunning = data.ContainersRunning;\n        result.containersPaused = data.ContainersPaused;\n        result.containersStopped = data.ContainersStopped;\n        result.images = data.Images;\n        result.driver = data.Driver;\n        result.memoryLimit = data.MemoryLimit;\n        result.swapLimit = data.SwapLimit;\n        result.kernelMemory = data.KernelMemory;\n        result.cpuCfsPeriod = data.CpuCfsPeriod;\n        result.cpuCfsQuota = data.CpuCfsQuota;\n        result.cpuShares = data.CPUShares;\n        result.cpuSet = data.CPUSet;\n        result.ipv4Forwarding = data.IPv4Forwarding;\n        result.bridgeNfIptables = data.BridgeNfIptables;\n        result.bridgeNfIp6tables = data.BridgeNfIp6tables;\n        result.debug = data.Debug;\n        result.nfd = data.NFd;\n        result.oomKillDisable = data.OomKillDisable;\n        result.ngoroutines = data.NGoroutines;\n        result.systemTime = data.SystemTime;\n        result.loggingDriver = data.LoggingDriver;\n        result.cgroupDriver = data.CgroupDriver;\n        result.nEventsListener = data.NEventsListener;\n        result.kernelVersion = data.KernelVersion;\n        result.operatingSystem = data.OperatingSystem;\n        result.osType = data.OSType;\n        result.architecture = data.Architecture;\n        result.ncpu = data.NCPU;\n        result.memTotal = data.MemTotal;\n        result.dockerRootDir = data.DockerRootDir;\n        result.httpProxy = data.HttpProxy;\n        result.httpsProxy = data.HttpsProxy;\n        result.noProxy = data.NoProxy;\n        result.name = data.Name;\n        result.labels = data.Labels;\n        result.experimentalBuild = data.ExperimentalBuild;\n        result.serverVersion = data.ServerVersion;\n        result.clusterStore = data.ClusterStore;\n        result.clusterAdvertise = data.ClusterAdvertise;\n        result.defaultRuntime = data.DefaultRuntime;\n        result.liveRestoreEnabled = data.LiveRestoreEnabled;\n        result.isolation = data.Isolation;\n        result.initBinary = data.InitBinary;\n        result.productLicense = data.ProductLicense;\n\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.dockerInfo = dockerInfo;\n\nfunction dockerImages(all, callback) {\n  // fallback - if only callback is given\n  if (util.isFunction(all) && !callback) {\n    callback = all;\n    all = false;\n  }\n\n  if (typeof all === 'string' && all === 'true') {\n    all = true;\n  }\n\n  if (typeof all !== 'boolean' && all !== undefined) {\n    all = false;\n  }\n\n  all = all || false;\n  let result = [];\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n\n      const workload = [];\n\n      _docker_socket.listImages(all, data => {\n        let dockerImages = {};\n\n        try {\n          dockerImages = data;\n\n          if (dockerImages && Object.prototype.toString.call(dockerImages) === '[object Array]' && dockerImages.length > 0) {\n            dockerImages.forEach(function (element) {\n              if (element.Names && Object.prototype.toString.call(element.Names) === '[object Array]' && element.Names.length > 0) {\n                element.Name = element.Names[0].replace(/^\\/|\\/$/g, '');\n              }\n\n              workload.push(dockerImagesInspect(element.Id.trim(), element));\n            });\n\n            if (workload.length) {\n              Promise.all(workload).then(data => {\n                if (callback) {\n                  callback(data);\n                }\n\n                resolve(data);\n              });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          } else {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n        } catch (err) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      });\n    });\n  });\n} // --------------------------\n// container inspect (for one container)\n\n\nfunction dockerImagesInspect(imageID, payload) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      imageID = imageID || '';\n\n      if (typeof imageID !== 'string') {\n        return resolve();\n      }\n\n      const imageIDSanitized = (util.isPrototypePolluted() ? '' : util.sanitizeShellString(imageID, true)).trim();\n\n      if (imageIDSanitized) {\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.inspectImage(imageIDSanitized.trim(), data => {\n          try {\n            resolve({\n              id: payload.Id,\n              container: data.Container,\n              comment: data.Comment,\n              os: data.Os,\n              architecture: data.Architecture,\n              parent: data.Parent,\n              dockerVersion: data.DockerVersion,\n              size: data.Size,\n              sharedSize: payload.SharedSize,\n              virtualSize: data.VirtualSize,\n              author: data.Author,\n              created: data.Created ? Math.round(new Date(data.Created).getTime() / 1000) : 0,\n              containerConfig: data.ContainerConfig ? data.ContainerConfig : {},\n              graphDriver: data.GraphDriver ? data.GraphDriver : {},\n              repoDigests: data.RepoDigests ? data.RepoDigests : {},\n              repoTags: data.RepoTags ? data.RepoTags : {},\n              config: data.Config ? data.Config : {},\n              rootFS: data.RootFS ? data.RootFS : {}\n            });\n          } catch (err) {\n            resolve();\n          }\n        });\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nexports.dockerImages = dockerImages;\n\nfunction dockerContainers(all, callback) {\n  function inContainers(containers, id) {\n    let filtered = containers.filter(obj => {\n      /**\n       * @namespace\n       * @property {string}  Id\n       */\n      return obj.Id && obj.Id === id;\n    });\n    return filtered.length > 0;\n  } // fallback - if only callback is given\n\n\n  if (util.isFunction(all) && !callback) {\n    callback = all;\n    all = false;\n  }\n\n  if (typeof all === 'string' && all === 'true') {\n    all = true;\n  }\n\n  if (typeof all !== 'boolean' && all !== undefined) {\n    all = false;\n  }\n\n  all = all || false;\n  let result = [];\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n\n      const workload = [];\n\n      _docker_socket.listContainers(all, data => {\n        let docker_containers = {};\n\n        try {\n          docker_containers = data;\n\n          if (docker_containers && Object.prototype.toString.call(docker_containers) === '[object Array]' && docker_containers.length > 0) {\n            // GC in _docker_container_stats\n            for (let key in _docker_container_stats) {\n              if ({}.hasOwnProperty.call(_docker_container_stats, key)) {\n                if (!inContainers(docker_containers, key)) {\n                  delete _docker_container_stats[key];\n                }\n              }\n            }\n\n            docker_containers.forEach(function (element) {\n              if (element.Names && Object.prototype.toString.call(element.Names) === '[object Array]' && element.Names.length > 0) {\n                element.Name = element.Names[0].replace(/^\\/|\\/$/g, '');\n              }\n\n              workload.push(dockerContainerInspect(element.Id.trim(), element)); // result.push({\n              //   id: element.Id,\n              //   name: element.Name,\n              //   image: element.Image,\n              //   imageID: element.ImageID,\n              //   command: element.Command,\n              //   created: element.Created,\n              //   state: element.State,\n              //   ports: element.Ports,\n              //   mounts: element.Mounts,\n              //   // hostconfig: element.HostConfig,\n              //   // network: element.NetworkSettings\n              // });\n            });\n\n            if (workload.length) {\n              Promise.all(workload).then(data => {\n                if (callback) {\n                  callback(data);\n                }\n\n                resolve(data);\n              });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          } else {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n        } catch (err) {\n          // GC in _docker_container_stats\n          for (let key in _docker_container_stats) {\n            if ({}.hasOwnProperty.call(_docker_container_stats, key)) {\n              if (!inContainers(docker_containers, key)) {\n                delete _docker_container_stats[key];\n              }\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      });\n    });\n  });\n} // --------------------------\n// container inspect (for one container)\n\n\nfunction dockerContainerInspect(containerID, payload) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      containerID = containerID || '';\n\n      if (typeof containerID !== 'string') {\n        return resolve();\n      }\n\n      const containerIdSanitized = (util.isPrototypePolluted() ? '' : util.sanitizeShellString(containerID, true)).trim();\n\n      if (containerIdSanitized) {\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.getInspect(containerIdSanitized.trim(), data => {\n          try {\n            resolve({\n              id: payload.Id,\n              name: payload.Name,\n              image: payload.Image,\n              imageID: payload.ImageID,\n              command: payload.Command,\n              created: payload.Created,\n              started: data.State && data.State.StartedAt ? Math.round(new Date(data.State.StartedAt).getTime() / 1000) : 0,\n              finished: data.State && data.State.FinishedAt && !data.State.FinishedAt.startsWith('0001-01-01') ? Math.round(new Date(data.State.FinishedAt).getTime() / 1000) : 0,\n              createdAt: data.Created ? data.Created : '',\n              startedAt: data.State && data.State.StartedAt ? data.State.StartedAt : '',\n              finishedAt: data.State && data.State.FinishedAt && !data.State.FinishedAt.startsWith('0001-01-01') ? data.State.FinishedAt : '',\n              state: payload.State,\n              restartCount: data.RestartCount || 0,\n              platform: data.Platform || '',\n              driver: data.Driver || '',\n              ports: payload.Ports,\n              mounts: payload.Mounts // hostconfig: payload.HostConfig,\n              // network: payload.NetworkSettings\n\n            });\n          } catch (err) {\n            resolve();\n          }\n        });\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nexports.dockerContainers = dockerContainers; // --------------------------\n// helper functions for calculation of docker stats\n\nfunction docker_calcCPUPercent(cpu_stats, precpu_stats) {\n  /**\n   * @namespace\n   * @property {object}  cpu_usage\n   * @property {number}  cpu_usage.total_usage\n   * @property {number}  system_cpu_usage\n   * @property {object}  cpu_usage\n   * @property {Array}  cpu_usage.percpu_usage\n   */\n  if (!_windows) {\n    let cpuPercent = 0.0; // calculate the change for the cpu usage of the container in between readings\n\n    let cpuDelta = cpu_stats.cpu_usage.total_usage - precpu_stats.cpu_usage.total_usage; // calculate the change for the entire system between readings\n\n    let systemDelta = cpu_stats.system_cpu_usage - precpu_stats.system_cpu_usage;\n\n    if (systemDelta > 0.0 && cpuDelta > 0.0) {\n      // calculate the change for the cpu usage of the container in between readings\n      cpuPercent = cpuDelta / systemDelta * cpu_stats.cpu_usage.percpu_usage.length * 100.0;\n    }\n\n    return cpuPercent;\n  } else {\n    let nanoSecNow = util.nanoSeconds();\n    let cpuPercent = 0.0;\n\n    if (_docker_last_read > 0) {\n      let possIntervals = nanoSecNow - _docker_last_read; //  / 100 * os.cpus().length;\n\n      let intervalsUsed = cpu_stats.cpu_usage.total_usage - precpu_stats.cpu_usage.total_usage;\n\n      if (possIntervals > 0) {\n        cpuPercent = 100.0 * intervalsUsed / possIntervals;\n      }\n    }\n\n    _docker_last_read = nanoSecNow;\n    return cpuPercent;\n  }\n}\n\nfunction docker_calcNetworkIO(networks) {\n  let rx;\n  let wx;\n\n  for (let key in networks) {\n    // skip loop if the property is from prototype\n    if (!{}.hasOwnProperty.call(networks, key)) {\n      continue;\n    }\n    /**\n     * @namespace\n     * @property {number}  rx_bytes\n     * @property {number}  tx_bytes\n     */\n\n\n    let obj = networks[key];\n    rx = +obj.rx_bytes;\n    wx = +obj.tx_bytes;\n  }\n\n  return {\n    rx,\n    wx\n  };\n}\n\nfunction docker_calcBlockIO(blkio_stats) {\n  let result = {\n    r: 0,\n    w: 0\n  };\n  /**\n   * @namespace\n   * @property {Array}  io_service_bytes_recursive\n   */\n\n  if (blkio_stats && blkio_stats.io_service_bytes_recursive && Object.prototype.toString.call(blkio_stats.io_service_bytes_recursive) === '[object Array]' && blkio_stats.io_service_bytes_recursive.length > 0) {\n    blkio_stats.io_service_bytes_recursive.forEach(function (element) {\n      /**\n       * @namespace\n       * @property {string}  op\n       * @property {number}  value\n       */\n      if (element.op && element.op.toLowerCase() === 'read' && element.value) {\n        result.r += element.value;\n      }\n\n      if (element.op && element.op.toLowerCase() === 'write' && element.value) {\n        result.w += element.value;\n      }\n    });\n  }\n\n  return result;\n}\n\nfunction dockerContainerStats(containerIDs, callback) {\n  let containerArray = [];\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      // fallback - if only callback is given\n      if (util.isFunction(containerIDs) && !callback) {\n        callback = containerIDs;\n        containerArray = ['*'];\n      } else {\n        containerIDs = containerIDs || '*';\n\n        if (typeof containerIDs !== 'string') {\n          if (callback) {\n            callback([]);\n          }\n\n          return resolve([]);\n        }\n\n        let containerIDsSanitized = '';\n        containerIDsSanitized.__proto__.toLowerCase = util.stringToLower;\n        containerIDsSanitized.__proto__.replace = util.stringReplace;\n        containerIDsSanitized.__proto__.trim = util.stringTrim;\n        containerIDsSanitized = containerIDs;\n        containerIDsSanitized = containerIDsSanitized.trim();\n\n        if (containerIDsSanitized !== '*') {\n          containerIDsSanitized = '';\n          const s = (util.isPrototypePolluted() ? '' : util.sanitizeShellString(containerIDs, true)).trim();\n\n          for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n            if (!(s[i] === undefined)) {\n              s[i].__proto__.toLowerCase = util.stringToLower;\n              const sl = s[i].toLowerCase();\n\n              if (sl && sl[0] && !sl[1]) {\n                containerIDsSanitized = containerIDsSanitized + sl[0];\n              }\n            }\n          }\n        }\n\n        containerIDsSanitized = containerIDsSanitized.trim().toLowerCase().replace(/,+/g, '|');\n        containerArray = containerIDsSanitized.split('|');\n      }\n\n      const result = [];\n      const workload = [];\n\n      if (containerArray.length && containerArray[0].trim() === '*') {\n        containerArray = [];\n        dockerContainers().then(allContainers => {\n          for (let container of allContainers) {\n            containerArray.push(container.id);\n          }\n\n          if (containerArray.length) {\n            dockerContainerStats(containerArray.join(',')).then(result => {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            });\n          } else {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n        });\n      } else {\n        for (let containerID of containerArray) {\n          workload.push(dockerContainerStatsSingle(containerID.trim()));\n        }\n\n        if (workload.length) {\n          Promise.all(workload).then(data => {\n            if (callback) {\n              callback(data);\n            }\n\n            resolve(data);\n          });\n        } else {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n} // --------------------------\n// container stats (for one container)\n\n\nfunction dockerContainerStatsSingle(containerID) {\n  containerID = containerID || '';\n  let result = {\n    id: containerID,\n    memUsage: 0,\n    memLimit: 0,\n    memPercent: 0,\n    cpuPercent: 0,\n    pids: 0,\n    netIO: {\n      rx: 0,\n      wx: 0\n    },\n    blockIO: {\n      r: 0,\n      w: 0\n    },\n    restartCount: 0,\n    cpuStats: {},\n    precpuStats: {},\n    memoryStats: {},\n    networks: {}\n  };\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      if (containerID) {\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.getInspect(containerID, dataInspect => {\n          try {\n            _docker_socket.getStats(containerID, data => {\n              try {\n                let stats = data;\n\n                if (!stats.message) {\n                  result.memUsage = stats.memory_stats && stats.memory_stats.usage ? stats.memory_stats.usage : 0;\n                  result.memLimit = stats.memory_stats && stats.memory_stats.limit ? stats.memory_stats.limit : 0;\n                  result.memPercent = stats.memory_stats && stats.memory_stats.usage && stats.memory_stats.limit ? stats.memory_stats.usage / stats.memory_stats.limit * 100.0 : 0;\n                  result.cpuPercent = stats.cpu_stats && stats.precpu_stats ? docker_calcCPUPercent(stats.cpu_stats, stats.precpu_stats) : 0;\n                  result.pids = stats.pids_stats && stats.pids_stats.current ? stats.pids_stats.current : 0;\n                  result.restartCount = dataInspect.RestartCount ? dataInspect.RestartCount : 0;\n\n                  if (stats.networks) {\n                    result.netIO = docker_calcNetworkIO(stats.networks);\n                  }\n\n                  if (stats.blkio_stats) {\n                    result.blockIO = docker_calcBlockIO(stats.blkio_stats);\n                  }\n\n                  result.cpuStats = stats.cpu_stats ? stats.cpu_stats : {};\n                  result.precpuStats = stats.precpu_stats ? stats.precpu_stats : {};\n                  result.memoryStats = stats.memory_stats ? stats.memory_stats : {};\n                  result.networks = stats.networks ? stats.networks : {};\n                }\n              } catch (err) {\n                util.noop();\n              } // }\n\n\n              resolve(result);\n            });\n          } catch (err) {\n            util.noop();\n          }\n        });\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.dockerContainerStats = dockerContainerStats; // --------------------------\n// container processes (for one container)\n\nfunction dockerContainerProcesses(containerID, callback) {\n  let result = [];\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      containerID = containerID || '';\n\n      if (typeof containerID !== 'string') {\n        return resolve(result);\n      }\n\n      const containerIdSanitized = (util.isPrototypePolluted() ? '' : util.sanitizeShellString(containerID, true)).trim();\n\n      if (containerIdSanitized) {\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.getProcesses(containerIdSanitized, data => {\n          /**\n           * @namespace\n           * @property {Array}  Titles\n           * @property {Array}  Processes\n           **/\n          try {\n            if (data && data.Titles && data.Processes) {\n              let titles = data.Titles.map(function (value) {\n                return value.toUpperCase();\n              });\n              let pos_pid = titles.indexOf('PID');\n              let pos_ppid = titles.indexOf('PPID');\n              let pos_pgid = titles.indexOf('PGID');\n              let pos_vsz = titles.indexOf('VSZ');\n              let pos_time = titles.indexOf('TIME');\n              let pos_elapsed = titles.indexOf('ELAPSED');\n              let pos_ni = titles.indexOf('NI');\n              let pos_ruser = titles.indexOf('RUSER');\n              let pos_user = titles.indexOf('USER');\n              let pos_rgroup = titles.indexOf('RGROUP');\n              let pos_group = titles.indexOf('GROUP');\n              let pos_stat = titles.indexOf('STAT');\n              let pos_rss = titles.indexOf('RSS');\n              let pos_command = titles.indexOf('COMMAND');\n              data.Processes.forEach(process => {\n                result.push({\n                  pidHost: pos_pid >= 0 ? process[pos_pid] : '',\n                  ppid: pos_ppid >= 0 ? process[pos_ppid] : '',\n                  pgid: pos_pgid >= 0 ? process[pos_pgid] : '',\n                  user: pos_user >= 0 ? process[pos_user] : '',\n                  ruser: pos_ruser >= 0 ? process[pos_ruser] : '',\n                  group: pos_group >= 0 ? process[pos_group] : '',\n                  rgroup: pos_rgroup >= 0 ? process[pos_rgroup] : '',\n                  stat: pos_stat >= 0 ? process[pos_stat] : '',\n                  time: pos_time >= 0 ? process[pos_time] : '',\n                  elapsed: pos_elapsed >= 0 ? process[pos_elapsed] : '',\n                  nice: pos_ni >= 0 ? process[pos_ni] : '',\n                  rss: pos_rss >= 0 ? process[pos_rss] : '',\n                  vsz: pos_vsz >= 0 ? process[pos_vsz] : '',\n                  command: pos_command >= 0 ? process[pos_command] : ''\n                });\n              });\n            }\n          } catch (err) {\n            util.noop();\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.dockerContainerProcesses = dockerContainerProcesses;\n\nfunction dockerVolumes(callback) {\n  let result = [];\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n\n      _docker_socket.listVolumes(data => {\n        let dockerVolumes = {};\n\n        try {\n          dockerVolumes = data;\n\n          if (dockerVolumes && dockerVolumes.Volumes && Object.prototype.toString.call(dockerVolumes.Volumes) === '[object Array]' && dockerVolumes.Volumes.length > 0) {\n            dockerVolumes.Volumes.forEach(function (element) {\n              result.push({\n                name: element.Name,\n                driver: element.Driver,\n                labels: element.Labels,\n                mountpoint: element.Mountpoint,\n                options: element.Options,\n                scope: element.Scope,\n                created: element.CreatedAt ? Math.round(new Date(element.CreatedAt).getTime() / 1000) : 0\n              });\n            });\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          } else {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n        } catch (err) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      });\n    });\n  });\n}\n\nexports.dockerVolumes = dockerVolumes;\n\nfunction dockerAll(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      dockerContainers(true).then(result => {\n        if (result && Object.prototype.toString.call(result) === '[object Array]' && result.length > 0) {\n          let l = result.length;\n          result.forEach(function (element) {\n            dockerContainerStats(element.id).then(res => {\n              // include stats in array\n              element.memUsage = res[0].memUsage;\n              element.memLimit = res[0].memLimit;\n              element.memPercent = res[0].memPercent;\n              element.cpuPercent = res[0].cpuPercent;\n              element.pids = res[0].pids;\n              element.netIO = res[0].netIO;\n              element.blockIO = res[0].blockIO;\n              element.cpuStats = res[0].cpuStats;\n              element.precpuStats = res[0].precpuStats;\n              element.memoryStats = res[0].memoryStats;\n              element.networks = res[0].networks;\n              dockerContainerProcesses(element.id).then(processes => {\n                element.processes = processes;\n                l -= 1;\n\n                if (l === 0) {\n                  if (callback) {\n                    callback(result);\n                  }\n\n                  resolve(result);\n                }\n              }); // all done??\n            });\n          });\n        } else {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      });\n    });\n  });\n}\n\nexports.dockerAll = dockerAll;","'use strict'; // @ts-check\n// ==================================================================================\n// dockerSockets.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 13. DockerSockets\n// ----------------------------------------------------------------------------------\n\nconst net = require('net');\n\nconst isWin = require('os').type() === 'Windows_NT';\nconst socketPath = isWin ? '//./pipe/docker_engine' : '/var/run/docker.sock';\n\nclass DockerSocket {\n  getInfo(callback) {\n    try {\n      let socket = net.createConnection({\n        path: socketPath\n      });\n      let alldata = '';\n      let data;\n      socket.on('connect', () => {\n        socket.write('GET http:/info HTTP/1.0\\r\\n\\r\\n');\n      });\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }\n\n  listImages(all, callback) {\n    try {\n      let socket = net.createConnection({\n        path: socketPath\n      });\n      let alldata = '';\n      let data;\n      socket.on('connect', () => {\n        socket.write('GET http:/images/json' + (all ? '?all=1' : '') + ' HTTP/1.0\\r\\n\\r\\n');\n      });\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }\n\n  inspectImage(id, callback) {\n    id = id || '';\n\n    if (id) {\n      try {\n        let socket = net.createConnection({\n          path: socketPath\n        });\n        let alldata = '';\n        let data;\n        socket.on('connect', () => {\n          socket.write('GET http:/images/' + id + '/json?stream=0 HTTP/1.0\\r\\n\\r\\n');\n        });\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  listContainers(all, callback) {\n    try {\n      let socket = net.createConnection({\n        path: socketPath\n      });\n      let alldata = '';\n      let data;\n      socket.on('connect', () => {\n        socket.write('GET http:/containers/json' + (all ? '?all=1' : '') + ' HTTP/1.0\\r\\n\\r\\n');\n      });\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }\n\n  getStats(id, callback) {\n    id = id || '';\n\n    if (id) {\n      try {\n        let socket = net.createConnection({\n          path: socketPath\n        });\n        let alldata = '';\n        let data;\n        socket.on('connect', () => {\n          socket.write('GET http:/containers/' + id + '/stats?stream=0 HTTP/1.0\\r\\n\\r\\n');\n        });\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  getInspect(id, callback) {\n    id = id || '';\n\n    if (id) {\n      try {\n        let socket = net.createConnection({\n          path: socketPath\n        });\n        let alldata = '';\n        let data;\n        socket.on('connect', () => {\n          socket.write('GET http:/containers/' + id + '/json?stream=0 HTTP/1.0\\r\\n\\r\\n');\n        });\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  getProcesses(id, callback) {\n    id = id || '';\n\n    if (id) {\n      try {\n        let socket = net.createConnection({\n          path: socketPath\n        });\n        let alldata = '';\n        let data;\n        socket.on('connect', () => {\n          socket.write('GET http:/containers/' + id + '/top?ps_args=-opid,ppid,pgid,vsz,time,etime,nice,ruser,user,rgroup,group,stat,rss,args HTTP/1.0\\r\\n\\r\\n');\n        });\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  listVolumes(callback) {\n    try {\n      let socket = net.createConnection({\n        path: socketPath\n      });\n      let alldata = '';\n      let data;\n      socket.on('connect', () => {\n        socket.write('GET http:/volumes HTTP/1.0\\r\\n\\r\\n');\n      });\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }\n\n}\n\nmodule.exports = DockerSocket;","'use strict'; // @ts-check\n// ==================================================================================\n// filesystem.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 8. File System\n// ----------------------------------------------------------------------------------\n\nconst util = require('./util');\n\nconst fs = require('fs');\n\nconst exec = require('child_process').exec;\n\nconst execSync = require('child_process').execSync;\n\nconst execPromiseSave = util.promisifySave(require('child_process').exec);\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos';\n\nlet _fs_speed = {};\nlet _disk_io = {}; // --------------------------\n// FS - mounted file systems\n\nfunction fsSize(callback) {\n  let macOsDisks = [];\n\n  function getmacOsFsType(fs) {\n    if (!fs.startsWith('/')) {\n      return 'NFS';\n    }\n\n    const parts = fs.split('/');\n    const fsShort = parts[parts.length - 1];\n    const macOsDisksSingle = macOsDisks.filter(item => item.indexOf(fsShort) >= 0);\n\n    if (macOsDisksSingle.length === 1 && macOsDisksSingle[0].indexOf('APFS') >= 0) {\n      return 'APFS';\n    }\n\n    return 'HFS';\n  }\n\n  function parseDf(lines) {\n    let data = [];\n    lines.forEach(function (line) {\n      if (line !== '') {\n        line = line.replace(/ +/g, ' ').split(' ');\n\n        if (line && (line[0].startsWith('/') || line[6] && line[6] === '/' || line[0].indexOf('/') > 0 || line[0].indexOf(':') === 1)) {\n          const fs = line[0];\n          const fsType = _linux || _freebsd || _openbsd || _netbsd ? line[1] : getmacOsFsType(line[0]);\n          const size = parseInt(_linux || _freebsd || _openbsd || _netbsd ? line[2] : line[1]) * 1024;\n          const used = parseInt(_linux || _freebsd || _openbsd || _netbsd ? line[3] : line[2]) * 1024;\n          const available = parseInt(_linux || _freebsd || _openbsd || _netbsd ? line[4] : line[3]) * 1024;\n          const use = parseFloat((100.0 * (used / (used + available))).toFixed(2));\n          line.splice(0, _linux || _freebsd || _openbsd || _netbsd ? 6 : 5);\n          const mount = line.join(' '); // const mount = line[line.length - 1];\n\n          if (!data.find(el => el.fs === fs && el.type === fsType)) {\n            data.push({\n              fs,\n              type: fsType,\n              size,\n              used,\n              available,\n              use,\n              mount\n            });\n          }\n        }\n      }\n    });\n    return data;\n  }\n\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let data = [];\n\n      if (_linux || _freebsd || _openbsd || _netbsd || _darwin) {\n        let cmd = '';\n\n        if (_darwin) {\n          cmd = 'df -kP';\n\n          try {\n            macOsDisks = execSync('diskutil list').toString().split('\\n').filter(line => {\n              return !line.startsWith('/') && line.indexOf(':') > 0;\n            });\n          } catch (e) {\n            macOsDisks = [];\n          }\n        }\n\n        if (_linux) {\n          cmd = 'df -lkPTx squashfs | grep  -E \"^/|^.\\\\:\"';\n        }\n\n        if (_freebsd || _openbsd || _netbsd) {\n          cmd = 'df -lkPT';\n        }\n\n        exec(cmd, {\n          maxBuffer: 1024 * 1024\n        }, function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            data = parseDf(lines);\n\n            if (callback) {\n              callback(data);\n            }\n\n            resolve(data);\n          } else {\n            exec('df -kPT', {\n              maxBuffer: 1024 * 1024\n            }, function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                data = parseDf(lines);\n              }\n\n              if (callback) {\n                callback(data);\n              }\n\n              resolve(data);\n            });\n          }\n        });\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(data);\n        }\n\n        resolve(data);\n      }\n\n      if (_windows) {\n        try {\n          // util.wmic('logicaldisk get Caption,FileSystem,FreeSpace,Size').then((stdout) => {\n          util.powerShell('Get-WmiObject Win32_logicaldisk | select Caption,FileSystem,FreeSpace,Size | fl').then((stdout, error) => {\n            if (!error) {\n              let devices = stdout.toString().split(/\\n\\s*\\n/);\n              devices.forEach(function (device) {\n                let lines = device.split('\\r\\n');\n                const size = util.toInt(util.getValue(lines, 'size', ':'));\n                const free = util.toInt(util.getValue(lines, 'freespace', ':'));\n                const caption = util.getValue(lines, 'caption', ':');\n\n                if (size) {\n                  data.push({\n                    fs: caption,\n                    type: util.getValue(lines, 'filesystem', ':'),\n                    size,\n                    used: size - free,\n                    available: free,\n                    use: parseFloat((100.0 * (size - free) / size).toFixed(2)),\n                    mount: caption\n                  });\n                }\n              });\n            }\n\n            if (callback) {\n              callback(data);\n            }\n\n            resolve(data);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(data);\n          }\n\n          resolve(data);\n        }\n      }\n    });\n  });\n}\n\nexports.fsSize = fsSize; // --------------------------\n// FS - open files count\n\nfunction fsOpenFiles(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      const result = {\n        max: null,\n        allocated: null,\n        available: null\n      };\n\n      if (_freebsd || _openbsd || _netbsd || _darwin) {\n        let cmd = 'sysctl -i kern.maxfiles kern.num_files kern.open_files';\n        exec(cmd, {\n          maxBuffer: 1024 * 1024\n        }, function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            result.max = parseInt(util.getValue(lines, 'kern.maxfiles', ':'), 10);\n            result.allocated = parseInt(util.getValue(lines, 'kern.num_files', ':'), 10) || parseInt(util.getValue(lines, 'kern.open_files', ':'), 10);\n            result.available = result.max - result.allocated;\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_linux) {\n        fs.readFile('/proc/sys/fs/file-nr', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n\n            if (lines[0]) {\n              const parts = lines[0].replace(/\\s+/g, ' ').split(' ');\n\n              if (parts.length === 3) {\n                result.allocated = parseInt(parts[0], 10);\n                result.available = parseInt(parts[1], 10);\n                result.max = parseInt(parts[2], 10);\n\n                if (!result.available) {\n                  result.available = result.max - result.allocated;\n                }\n              }\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          } else {\n            fs.readFile('/proc/sys/fs/file-max', function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n\n                if (lines[0]) {\n                  result.max = parseInt(lines[0], 10);\n                }\n              }\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            });\n          }\n        });\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(null);\n        }\n\n        resolve(null);\n      }\n\n      if (_windows) {\n        if (callback) {\n          callback(null);\n        }\n\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.fsOpenFiles = fsOpenFiles; // --------------------------\n// disks\n\nfunction parseBytes(s) {\n  return parseInt(s.substr(s.indexOf(' (') + 2, s.indexOf(' Bytes)') - 10));\n}\n\nfunction parseDevices(lines) {\n  let devices = [];\n  let i = 0;\n  lines.forEach(line => {\n    if (line.length > 0) {\n      if (line[0] === '*') {\n        i++;\n      } else {\n        let parts = line.split(':');\n\n        if (parts.length > 1) {\n          if (!devices[i]) {\n            devices[i] = {\n              name: '',\n              identifier: '',\n              type: 'disk',\n              fsType: '',\n              mount: '',\n              size: 0,\n              physical: 'HDD',\n              uuid: '',\n              label: '',\n              model: '',\n              serial: '',\n              removable: false,\n              protocol: ''\n            };\n          }\n\n          parts[0] = parts[0].trim().toUpperCase().replace(/ +/g, '');\n          parts[1] = parts[1].trim();\n\n          if ('DEVICEIDENTIFIER' === parts[0]) {\n            devices[i].identifier = parts[1];\n          }\n\n          if ('DEVICENODE' === parts[0]) {\n            devices[i].name = parts[1];\n          }\n\n          if ('VOLUMENAME' === parts[0]) {\n            if (parts[1].indexOf('Not applicable') === -1) {\n              devices[i].label = parts[1];\n            }\n          }\n\n          if ('PROTOCOL' === parts[0]) {\n            devices[i].protocol = parts[1];\n          }\n\n          if ('DISKSIZE' === parts[0]) {\n            devices[i].size = parseBytes(parts[1]);\n          }\n\n          if ('FILESYSTEMPERSONALITY' === parts[0]) {\n            devices[i].fsType = parts[1];\n          }\n\n          if ('MOUNTPOINT' === parts[0]) {\n            devices[i].mount = parts[1];\n          }\n\n          if ('VOLUMEUUID' === parts[0]) {\n            devices[i].uuid = parts[1];\n          }\n\n          if ('READ-ONLYMEDIA' === parts[0] && parts[1] === 'Yes') {\n            devices[i].physical = 'CD/DVD';\n          }\n\n          if ('SOLIDSTATE' === parts[0] && parts[1] === 'Yes') {\n            devices[i].physical = 'SSD';\n          }\n\n          if ('VIRTUAL' === parts[0]) {\n            devices[i].type = 'virtual';\n          }\n\n          if ('REMOVABLEMEDIA' === parts[0]) {\n            devices[i].removable = parts[1] === 'Removable';\n          }\n\n          if ('PARTITIONTYPE' === parts[0]) {\n            devices[i].type = 'part';\n          }\n\n          if ('DEVICE/MEDIANAME' === parts[0]) {\n            devices[i].model = parts[1];\n          }\n        }\n      }\n    }\n  });\n  return devices;\n}\n\nfunction parseBlk(lines) {\n  let data = [];\n  lines.filter(line => line !== '').forEach(line => {\n    try {\n      line = decodeURIComponent(line.replace(/\\\\x/g, '%'));\n      line = line.replace(/\\\\/g, '\\\\\\\\');\n      let disk = JSON.parse(line);\n      data.push({\n        'name': disk.name,\n        'type': disk.type,\n        'fsType': disk.fsType,\n        'mount': disk.mountpoint,\n        'size': parseInt(disk.size),\n        'physical': disk.type === 'disk' ? disk.rota === '0' ? 'SSD' : 'HDD' : disk.type === 'rom' ? 'CD/DVD' : '',\n        'uuid': disk.uuid,\n        'label': disk.label,\n        'model': disk.model,\n        'serial': disk.serial,\n        'removable': disk.rm === '1',\n        'protocol': disk.tran,\n        'group': disk.group\n      });\n    } catch (e) {\n      util.noop();\n    }\n  });\n  data = util.unique(data);\n  data = util.sortByKey(data, ['type', 'name']);\n  return data;\n}\n\nfunction blkStdoutToObject(stdout) {\n  return stdout.toString().replace(/NAME=/g, '{\"name\":').replace(/FSTYPE=/g, ',\"fsType\":').replace(/TYPE=/g, ',\"type\":').replace(/SIZE=/g, ',\"size\":').replace(/MOUNTPOINT=/g, ',\"mountpoint\":').replace(/UUID=/g, ',\"uuid\":').replace(/ROTA=/g, ',\"rota\":').replace(/RO=/g, ',\"ro\":').replace(/RM=/g, ',\"rm\":').replace(/TRAN=/g, ',\"tran\":').replace(/SERIAL=/g, ',\"serial\":').replace(/LABEL=/g, ',\"label\":').replace(/MODEL=/g, ',\"model\":').replace(/OWNER=/g, ',\"owner\":').replace(/GROUP=/g, ',\"group\":').replace(/\\n/g, '}\\n');\n}\n\nfunction blockDevices(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let data = [];\n\n      if (_linux) {\n        // see https://wiki.ubuntuusers.de/lsblk/\n        // exec(\"lsblk -bo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,TRAN,SERIAL,LABEL,MODEL,OWNER,GROUP,MODE,ALIGNMENT,MIN-IO,OPT-IO,PHY-SEC,LOG-SEC,SCHED,RQ-SIZE,RA,WSAME\", function (error, stdout) {\n        exec('lsblk -bPo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,RM,TRAN,SERIAL,LABEL,MODEL,OWNER 2>/dev/null', {\n          maxBuffer: 1024 * 1024\n        }, function (error, stdout) {\n          if (!error) {\n            let lines = blkStdoutToObject(stdout).split('\\n');\n            data = parseBlk(lines);\n\n            if (callback) {\n              callback(data);\n            }\n\n            resolve(data);\n          } else {\n            exec('lsblk -bPo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,RM,LABEL,MODEL,OWNER 2>/dev/null', {\n              maxBuffer: 1024 * 1024\n            }, function (error, stdout) {\n              if (!error) {\n                let lines = blkStdoutToObject(stdout).split('\\n');\n                data = parseBlk(lines);\n              }\n\n              if (callback) {\n                callback(data);\n              }\n\n              resolve(data);\n            });\n          }\n        });\n      }\n\n      if (_darwin) {\n        exec('diskutil info -all', {\n          maxBuffer: 1024 * 1024\n        }, function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n'); // parse lines into temp array of devices\n\n            data = parseDevices(lines);\n          }\n\n          if (callback) {\n            callback(data);\n          }\n\n          resolve(data);\n        });\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(data);\n        }\n\n        resolve(data);\n      }\n\n      if (_windows) {\n        let drivetypes = ['Unknown', 'NoRoot', 'Removable', 'Local', 'Network', 'CD/DVD', 'RAM'];\n\n        try {\n          // util.wmic('logicaldisk get Caption,Description,DeviceID,DriveType,FileSystem,FreeSpace,Name,Size,VolumeName,VolumeSerialNumber /value').then((stdout, error) => {\n          // util.powerShell('Get-WmiObject Win32_logicaldisk | select Caption,DriveType,Name,FileSystem,Size,VolumeSerialNumber,VolumeName | fl').then((stdout, error) => {\n          util.powerShell('Get-CimInstance -ClassName Win32_LogicalDisk | select Caption,DriveType,Name,FileSystem,Size,VolumeSerialNumber,VolumeName | fl').then((stdout, error) => {\n            if (!error) {\n              let devices = stdout.toString().split(/\\n\\s*\\n/);\n              devices.forEach(function (device) {\n                let lines = device.split('\\r\\n');\n                let drivetype = util.getValue(lines, 'drivetype', ':');\n\n                if (drivetype) {\n                  data.push({\n                    name: util.getValue(lines, 'name', ':'),\n                    identifier: util.getValue(lines, 'caption', ':'),\n                    type: 'disk',\n                    fsType: util.getValue(lines, 'filesystem', ':').toLowerCase(),\n                    mount: util.getValue(lines, 'caption', ':'),\n                    size: util.getValue(lines, 'size', ':'),\n                    physical: drivetype >= 0 && drivetype <= 6 ? drivetypes[drivetype] : drivetypes[0],\n                    uuid: util.getValue(lines, 'volumeserialnumber', ':'),\n                    label: util.getValue(lines, 'volumename', ':'),\n                    model: '',\n                    serial: util.getValue(lines, 'volumeserialnumber', ':'),\n                    removable: drivetype === '2',\n                    protocol: ''\n                  });\n                }\n              });\n            }\n\n            if (callback) {\n              callback(data);\n            }\n\n            resolve(data);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(data);\n          }\n\n          resolve(data);\n        }\n      }\n\n      if (_freebsd || _openbsd || _netbsd) {\n        // will follow\n        if (callback) {\n          callback(null);\n        }\n\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.blockDevices = blockDevices; // --------------------------\n// FS - speed\n\nfunction calcFsSpeed(rx, wx) {\n  let result = {\n    rx: 0,\n    wx: 0,\n    tx: 0,\n    rx_sec: null,\n    wx_sec: null,\n    tx_sec: null,\n    ms: 0\n  };\n\n  if (_fs_speed && _fs_speed.ms) {\n    result.rx = rx;\n    result.wx = wx;\n    result.tx = result.rx + result.wx;\n    result.ms = Date.now() - _fs_speed.ms;\n    result.rx_sec = (result.rx - _fs_speed.bytes_read) / (result.ms / 1000);\n    result.wx_sec = (result.wx - _fs_speed.bytes_write) / (result.ms / 1000);\n    result.tx_sec = result.rx_sec + result.wx_sec;\n    _fs_speed.rx_sec = result.rx_sec;\n    _fs_speed.wx_sec = result.wx_sec;\n    _fs_speed.tx_sec = result.tx_sec;\n    _fs_speed.bytes_read = result.rx;\n    _fs_speed.bytes_write = result.wx;\n    _fs_speed.bytes_overall = result.rx + result.wx;\n    _fs_speed.ms = Date.now();\n    _fs_speed.last_ms = result.ms;\n  } else {\n    result.rx = rx;\n    result.wx = wx;\n    result.tx = result.rx + result.wx;\n    _fs_speed.rx_sec = null;\n    _fs_speed.wx_sec = null;\n    _fs_speed.tx_sec = null;\n    _fs_speed.bytes_read = result.rx;\n    _fs_speed.bytes_write = result.wx;\n    _fs_speed.bytes_overall = result.rx + result.wx;\n    _fs_speed.ms = Date.now();\n    _fs_speed.last_ms = 0;\n  }\n\n  return result;\n}\n\nfunction fsStats(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      if (_windows || _freebsd || _openbsd || _netbsd || _sunos) {\n        return resolve(null);\n      }\n\n      let result = {\n        rx: 0,\n        wx: 0,\n        tx: 0,\n        rx_sec: null,\n        wx_sec: null,\n        tx_sec: null,\n        ms: 0\n      };\n      let rx = 0;\n      let wx = 0;\n\n      if (_fs_speed && !_fs_speed.ms || _fs_speed && _fs_speed.ms && Date.now() - _fs_speed.ms >= 500) {\n        if (_linux) {\n          // exec(\"df -k | grep /dev/\", function(error, stdout) {\n          exec('lsblk -r 2>/dev/null | grep /', {\n            maxBuffer: 1024 * 1024\n          }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              let fs_filter = [];\n              lines.forEach(function (line) {\n                if (line !== '') {\n                  line = line.trim().split(' ');\n\n                  if (fs_filter.indexOf(line[0]) === -1) {\n                    fs_filter.push(line[0]);\n                  }\n                }\n              });\n              let output = fs_filter.join('|');\n              exec('cat /proc/diskstats | egrep \"' + output + '\"', {\n                maxBuffer: 1024 * 1024\n              }, function (error, stdout) {\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  lines.forEach(function (line) {\n                    line = line.trim();\n\n                    if (line !== '') {\n                      line = line.replace(/ +/g, ' ').split(' ');\n                      rx += parseInt(line[5]) * 512;\n                      wx += parseInt(line[9]) * 512;\n                    }\n                  });\n                  result = calcFsSpeed(rx, wx);\n                }\n\n                if (callback) {\n                  callback(result);\n                }\n\n                resolve(result);\n              });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          });\n        }\n\n        if (_darwin) {\n          exec('ioreg -c IOBlockStorageDriver -k Statistics -r -w0 | sed -n \"/IOBlockStorageDriver/,/Statistics/p\" | grep \"Statistics\" | tr -cd \"01234567890,\\n\"', {\n            maxBuffer: 1024 * 1024\n          }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                line = line.trim();\n\n                if (line !== '') {\n                  line = line.split(',');\n                  rx += parseInt(line[2]);\n                  wx += parseInt(line[9]);\n                }\n              });\n              result = calcFsSpeed(rx, wx);\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        }\n      } else {\n        result.ms = _fs_speed.last_ms;\n        result.rx = _fs_speed.bytes_read;\n        result.wx = _fs_speed.bytes_write;\n        result.tx = _fs_speed.bytes_read + _fs_speed.bytes_write;\n        result.rx_sec = _fs_speed.rx_sec;\n        result.wx_sec = _fs_speed.wx_sec;\n        result.tx_sec = _fs_speed.tx_sec;\n\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.fsStats = fsStats;\n\nfunction calcDiskIO(rIO, wIO, rWaitTime, wWaitTime, tWaitTime) {\n  let result = {\n    rIO: 0,\n    wIO: 0,\n    tIO: 0,\n    rIO_sec: null,\n    wIO_sec: null,\n    tIO_sec: null,\n    rWaitTime: 0,\n    wWaitTime: 0,\n    tWaitTime: 0,\n    rWaitPercent: null,\n    wWaitPercent: null,\n    tWaitPercent: null,\n    ms: 0\n  };\n\n  if (_disk_io && _disk_io.ms) {\n    result.rIO = rIO;\n    result.wIO = wIO;\n    result.tIO = rIO + wIO;\n    result.ms = Date.now() - _disk_io.ms;\n    result.rIO_sec = (result.rIO - _disk_io.rIO) / (result.ms / 1000);\n    result.wIO_sec = (result.wIO - _disk_io.wIO) / (result.ms / 1000);\n    result.tIO_sec = result.rIO_sec + result.wIO_sec;\n    result.rWaitTime = rWaitTime;\n    result.wWaitTime = wWaitTime;\n    result.tWaitTime = tWaitTime;\n    result.rWaitPercent = (result.rWaitTime - _disk_io.rWaitTime) * 100 / result.ms;\n    result.wWaitPercent = (result.wWaitTime - _disk_io.wWaitTime) * 100 / result.ms;\n    result.tWaitPercent = (result.tWaitTime - _disk_io.tWaitTime) * 100 / result.ms;\n    _disk_io.rIO = rIO;\n    _disk_io.wIO = wIO;\n    _disk_io.rIO_sec = result.rIO_sec;\n    _disk_io.wIO_sec = result.wIO_sec;\n    _disk_io.tIO_sec = result.tIO_sec;\n    _disk_io.rWaitTime = rWaitTime;\n    _disk_io.wWaitTime = wWaitTime;\n    _disk_io.tWaitTime = tWaitTime;\n    _disk_io.rWaitPercent = result.rWaitPercent;\n    _disk_io.wWaitPercent = result.wWaitPercent;\n    _disk_io.tWaitPercent = result.tWaitPercent;\n    _disk_io.last_ms = result.ms;\n    _disk_io.ms = Date.now();\n  } else {\n    result.rIO = rIO;\n    result.wIO = wIO;\n    result.tIO = rIO + wIO;\n    result.rWaitTime = rWaitTime;\n    result.wWaitTime = wWaitTime;\n    result.tWaitTime = tWaitTime;\n    _disk_io.rIO = rIO;\n    _disk_io.wIO = wIO;\n    _disk_io.rIO_sec = null;\n    _disk_io.wIO_sec = null;\n    _disk_io.tIO_sec = null;\n    _disk_io.rWaitTime = rWaitTime;\n    _disk_io.wWaitTime = wWaitTime;\n    _disk_io.tWaitTime = tWaitTime;\n    _disk_io.rWaitPercent = null;\n    _disk_io.wWaitPercent = null;\n    _disk_io.tWaitPercent = null;\n    _disk_io.last_ms = 0;\n    _disk_io.ms = Date.now();\n  }\n\n  return result;\n}\n\nfunction disksIO(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      if (_windows) {\n        return resolve(null);\n      }\n\n      if (_sunos) {\n        return resolve(null);\n      }\n\n      let result = {\n        rIO: 0,\n        wIO: 0,\n        tIO: 0,\n        rIO_sec: null,\n        wIO_sec: null,\n        tIO_sec: null,\n        rWaitTime: 0,\n        wWaitTime: 0,\n        tWaitTime: 0,\n        rWaitPercent: null,\n        wWaitPercent: null,\n        tWaitPercent: null,\n        ms: 0\n      };\n      let rIO = 0;\n      let wIO = 0;\n      let rWaitTime = 0;\n      let wWaitTime = 0;\n      let tWaitTime = 0;\n\n      if (_disk_io && !_disk_io.ms || _disk_io && _disk_io.ms && Date.now() - _disk_io.ms >= 500) {\n        if (_linux || _freebsd || _openbsd || _netbsd) {\n          // prints Block layer statistics for all mounted volumes\n          // var cmd = \"for mount in `lsblk | grep / | sed -r 's/│ └─//' | cut -d ' ' -f 1`; do cat /sys/block/$mount/stat | sed -r 's/ +/;/g' | sed -r 's/^;//'; done\";\n          // var cmd = \"for mount in `lsblk | grep / | sed 's/[│└─├]//g' | awk '{$1=$1};1' | cut -d ' ' -f 1 | sort -u`; do cat /sys/block/$mount/stat | sed -r 's/ +/;/g' | sed -r 's/^;//'; done\";\n          let cmd = 'for mount in `lsblk 2>/dev/null | grep \" disk \" | sed \"s/[│└─├]//g\" | awk \\'{$1=$1};1\\' | cut -d \" \" -f 1 | sort -u`; do cat /sys/block/$mount/stat | sed -r \"s/ +/;/g\" | sed -r \"s/^;//\"; done';\n          exec(cmd, {\n            maxBuffer: 1024 * 1024\n          }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.split('\\n');\n              lines.forEach(function (line) {\n                // ignore empty lines\n                if (!line) {\n                  return;\n                } // sum r/wIO of all disks to compute all disks IO\n\n\n                let stats = line.split(';');\n                rIO += parseInt(stats[0]);\n                wIO += parseInt(stats[4]);\n                rWaitTime += parseInt(stats[3]);\n                wWaitTime += parseInt(stats[7]);\n                tWaitTime += parseInt(stats[10]);\n              });\n              result = calcDiskIO(rIO, wIO, rWaitTime, wWaitTime, tWaitTime);\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          });\n        }\n\n        if (_darwin) {\n          exec('ioreg -c IOBlockStorageDriver -k Statistics -r -w0 | sed -n \"/IOBlockStorageDriver/,/Statistics/p\" | grep \"Statistics\" | tr -cd \"01234567890,\\n\"', {\n            maxBuffer: 1024 * 1024\n          }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                line = line.trim();\n\n                if (line !== '') {\n                  line = line.split(',');\n                  rIO += parseInt(line[10]);\n                  wIO += parseInt(line[0]);\n                }\n              });\n              result = calcDiskIO(rIO, wIO, rWaitTime, wWaitTime, tWaitTime);\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        }\n      } else {\n        result.rIO = _disk_io.rIO;\n        result.wIO = _disk_io.wIO;\n        result.tIO = _disk_io.rIO + _disk_io.wIO;\n        result.ms = _disk_io.last_ms;\n        result.rIO_sec = _disk_io.rIO_sec;\n        result.wIO_sec = _disk_io.wIO_sec;\n        result.tIO_sec = _disk_io.tIO_sec;\n        result.rWaitTime = _disk_io.rWaitTime;\n        result.wWaitTime = _disk_io.wWaitTime;\n        result.tWaitTime = _disk_io.tWaitTime;\n        result.rWaitPercent = _disk_io.rWaitPercent;\n        result.wWaitPercent = _disk_io.wWaitPercent;\n        result.tWaitPercent = _disk_io.tWaitPercent;\n\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.disksIO = disksIO;\n\nfunction diskLayout(callback) {\n  function getVendorFromModel(model) {\n    const diskManufacturers = [{\n      pattern: 'WESTERN.*',\n      manufacturer: 'Western Digital'\n    }, {\n      pattern: '^WDC.*',\n      manufacturer: 'Western Digital'\n    }, {\n      pattern: 'WD.*',\n      manufacturer: 'Western Digital'\n    }, {\n      pattern: 'TOSHIBA.*',\n      manufacturer: 'Toshiba'\n    }, {\n      pattern: 'HITACHI.*',\n      manufacturer: 'Hitachi'\n    }, {\n      pattern: '^IC.*',\n      manufacturer: 'Hitachi'\n    }, {\n      pattern: '^HTS.*',\n      manufacturer: 'Hitachi'\n    }, {\n      pattern: 'SANDISK.*',\n      manufacturer: 'SanDisk'\n    }, {\n      pattern: 'KINGSTON.*',\n      manufacturer: 'Kingston Technology'\n    }, {\n      pattern: '^SONY.*',\n      manufacturer: 'Sony'\n    }, {\n      pattern: 'TRANSCEND.*',\n      manufacturer: 'Transcend'\n    }, {\n      pattern: 'SAMSUNG.*',\n      manufacturer: 'Samsung'\n    }, {\n      pattern: '^ST(?!I\\\\ ).*',\n      manufacturer: 'Seagate'\n    }, {\n      pattern: '^STI\\\\ .*',\n      manufacturer: 'SimpleTech'\n    }, {\n      pattern: '^D...-.*',\n      manufacturer: 'IBM'\n    }, {\n      pattern: '^IBM.*',\n      manufacturer: 'IBM'\n    }, {\n      pattern: '^FUJITSU.*',\n      manufacturer: 'Fujitsu'\n    }, {\n      pattern: '^MP.*',\n      manufacturer: 'Fujitsu'\n    }, {\n      pattern: '^MK.*',\n      manufacturer: 'Toshiba'\n    }, {\n      pattern: 'MAXTO.*',\n      manufacturer: 'Maxtor'\n    }, {\n      pattern: 'PIONEER.*',\n      manufacturer: 'Pioneer'\n    }, {\n      pattern: 'PHILIPS.*',\n      manufacturer: 'Philips'\n    }, {\n      pattern: 'QUANTUM.*',\n      manufacturer: 'Quantum Technology'\n    }, {\n      pattern: 'FIREBALL.*',\n      manufacturer: 'Quantum Technology'\n    }, {\n      pattern: '^VBOX.*',\n      manufacturer: 'VirtualBox'\n    }, {\n      pattern: 'CORSAIR.*',\n      manufacturer: 'Corsair Components'\n    }, {\n      pattern: 'CRUCIAL.*',\n      manufacturer: 'Crucial'\n    }, {\n      pattern: 'ECM.*',\n      manufacturer: 'ECM'\n    }, {\n      pattern: 'INTEL.*',\n      manufacturer: 'INTEL'\n    }, {\n      pattern: 'EVO.*',\n      manufacturer: 'Samsung'\n    }, {\n      pattern: 'APPLE.*',\n      manufacturer: 'Apple'\n    }];\n    let result = '';\n\n    if (model) {\n      model = model.toUpperCase();\n      diskManufacturers.forEach(manufacturer => {\n        const re = RegExp(manufacturer.pattern);\n\n        if (re.test(model)) {\n          result = manufacturer.manufacturer;\n        }\n      });\n    }\n\n    return result;\n  }\n\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      const commitResult = res => {\n        for (let i = 0; i < res.length; i++) {\n          delete res[i].BSDName;\n        }\n\n        if (callback) {\n          callback(res);\n        }\n\n        resolve(res);\n      };\n\n      let result = [];\n      let cmd = '';\n\n      if (_linux) {\n        let cmdFullSmart = '';\n        exec('export LC_ALL=C; lsblk -ablJO 2>/dev/null; unset LC_ALL', {\n          maxBuffer: 1024 * 1024\n        }, function (error, stdout) {\n          if (!error) {\n            try {\n              const out = stdout.toString().trim();\n              let devices = [];\n\n              try {\n                const outJSON = JSON.parse(out);\n\n                if (outJSON && {}.hasOwnProperty.call(outJSON, 'blockdevices')) {\n                  devices = outJSON.blockdevices.filter(item => {\n                    return item.type === 'disk' && item.size > 0 && (item.model !== null || item.mountpoint === null && item.label === null && item.fsType === null && item.parttype === null);\n                  });\n                }\n              } catch (e) {\n                // fallback to older version of lsblk\n                const out2 = execSync('export LC_ALL=C; lsblk -bPo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,RM,LABEL,MODEL,OWNER,GROUP 2>/dev/null; unset LC_ALL').toString();\n                let lines = blkStdoutToObject(out2).split('\\n');\n                const data = parseBlk(lines);\n                devices = data.filter(item => {\n                  return item.type === 'disk' && item.size > 0 && (item.model !== null && item.model !== '' || item.mount === '' && item.label === '' && item.fsType === '');\n                });\n              }\n\n              devices.forEach(device => {\n                let mediumType = '';\n                const BSDName = '/dev/' + device.name;\n                const logical = device.name;\n\n                try {\n                  mediumType = execSync('cat /sys/block/' + logical + '/queue/rotational 2>/dev/null').toString().split('\\n')[0];\n                } catch (e) {\n                  util.noop();\n                }\n\n                let interfaceType = device.tran ? device.tran.toUpperCase().trim() : '';\n\n                if (interfaceType === 'NVME') {\n                  mediumType = '2';\n                  interfaceType = 'PCIe';\n                }\n\n                result.push({\n                  device: BSDName,\n                  type: mediumType === '0' ? 'SSD' : mediumType === '1' ? 'HD' : mediumType === '2' ? 'NVMe' : device.model && device.model.indexOf('SSD') > -1 ? 'SSD' : device.model && device.model.indexOf('NVM') > -1 ? 'NVMe' : 'HD',\n                  name: device.model || '',\n                  vendor: getVendorFromModel(device.model) || (device.vendor ? device.vendor.trim() : ''),\n                  size: device.size || 0,\n                  bytesPerSector: null,\n                  totalCylinders: null,\n                  totalHeads: null,\n                  totalSectors: null,\n                  totalTracks: null,\n                  tracksPerCylinder: null,\n                  sectorsPerTrack: null,\n                  firmwareRevision: device.rev ? device.rev.trim() : '',\n                  serialNum: device.serial ? device.serial.trim() : '',\n                  interfaceType: interfaceType,\n                  smartStatus: 'unknown',\n                  temperature: null,\n                  BSDName: BSDName\n                });\n                cmd += `printf \"\\n${BSDName}|\"; smartctl -H ${BSDName} | grep overall;`;\n                cmdFullSmart += `${cmdFullSmart ? 'printf \",\";' : ''}smartctl -a -j ${BSDName};`;\n              });\n            } catch (e) {\n              util.noop();\n            }\n          } // check S.M.A.R.T. status\n\n\n          if (cmdFullSmart) {\n            exec(cmdFullSmart, {\n              maxBuffer: 1024 * 1024\n            }, function (error, stdout) {\n              try {\n                const data = JSON.parse(`[${stdout}]`);\n                data.forEach(disk => {\n                  const diskBSDName = disk.smartctl.argv[disk.smartctl.argv.length - 1];\n\n                  for (let i = 0; i < result.length; i++) {\n                    if (result[i].BSDName === diskBSDName) {\n                      result[i].smartStatus = disk.smart_status.passed ? 'Ok' : disk.smart_status.passed === false ? 'Predicted Failure' : 'unknown';\n\n                      if (disk.temperature && disk.temperature.current) {\n                        result[i].temperature = disk.temperature.current;\n                      }\n\n                      result[i].smartData = disk;\n                    }\n                  }\n                });\n                commitResult(result);\n              } catch (e) {\n                if (cmd) {\n                  cmd = cmd + 'printf \"\\n\"';\n                  exec(cmd, {\n                    maxBuffer: 1024 * 1024\n                  }, function (error, stdout) {\n                    let lines = stdout.toString().split('\\n');\n                    lines.forEach(line => {\n                      if (line) {\n                        let parts = line.split('|');\n\n                        if (parts.length === 2) {\n                          let BSDName = parts[0];\n                          parts[1] = parts[1].trim();\n                          let parts2 = parts[1].split(':');\n\n                          if (parts2.length === 2) {\n                            parts2[1] = parts2[1].trim();\n                            let status = parts2[1].toLowerCase();\n\n                            for (let i = 0; i < result.length; i++) {\n                              if (result[i].BSDName === BSDName) {\n                                result[i].smartStatus = status === 'passed' ? 'Ok' : status === 'failed!' ? 'Predicted Failure' : 'unknown';\n                              }\n                            }\n                          }\n                        }\n                      }\n                    });\n                    commitResult(result);\n                  });\n                } else {\n                  commitResult(result);\n                }\n              }\n            });\n          } else {\n            commitResult(result);\n          }\n        });\n      }\n\n      if (_freebsd || _openbsd || _netbsd) {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n\n      if (_darwin) {\n        exec('system_profiler SPSerialATADataType SPNVMeDataType SPUSBDataType', {\n          maxBuffer: 1024 * 1024\n        }, function (error, stdout) {\n          if (!error) {\n            // split by type:\n            let lines = stdout.toString().split('\\n');\n            let linesSATA = [];\n            let linesNVMe = [];\n            let linesUSB = [];\n            let dataType = 'SATA';\n            lines.forEach(line => {\n              if (line === 'NVMExpress:') {\n                dataType = 'NVMe';\n              } else if (line === 'USB:') {\n                dataType = 'USB';\n              } else if (line === 'SATA/SATA Express:') {\n                dataType = 'SATA';\n              } else if (dataType === 'SATA') {\n                linesSATA.push(line);\n              } else if (dataType === 'NVMe') {\n                linesNVMe.push(line);\n              } else if (dataType === 'USB') {\n                linesUSB.push(line);\n              }\n            });\n\n            try {\n              // Serial ATA Drives\n              let devices = linesSATA.join('\\n').split(' Physical Interconnect: ');\n              devices.shift();\n              devices.forEach(function (device) {\n                device = 'InterfaceType: ' + device;\n                let lines = device.split('\\n');\n                const mediumType = util.getValue(lines, 'Medium Type', ':', true).trim();\n                const sizeStr = util.getValue(lines, 'capacity', ':', true).trim();\n                const BSDName = util.getValue(lines, 'BSD Name', ':', true).trim();\n\n                if (sizeStr) {\n                  let sizeValue = 0;\n\n                  if (sizeStr.indexOf('(') >= 0) {\n                    sizeValue = parseInt(sizeStr.match(/\\(([^)]+)\\)/)[1].replace(/\\./g, '').replace(/,/g, '').replace(/\\s/g, ''));\n                  }\n\n                  if (!sizeValue) {\n                    sizeValue = parseInt(sizeStr);\n                  }\n\n                  if (sizeValue) {\n                    const smartStatusString = util.getValue(lines, 'S.M.A.R.T. status', ':', true).trim().toLowerCase();\n                    result.push({\n                      device: BSDName,\n                      type: mediumType.startsWith('Solid') ? 'SSD' : 'HD',\n                      name: util.getValue(lines, 'Model', ':', true).trim(),\n                      vendor: getVendorFromModel(util.getValue(lines, 'Model', ':', true).trim()) || util.getValue(lines, 'Manufacturer', ':', true),\n                      size: sizeValue,\n                      bytesPerSector: null,\n                      totalCylinders: null,\n                      totalHeads: null,\n                      totalSectors: null,\n                      totalTracks: null,\n                      tracksPerCylinder: null,\n                      sectorsPerTrack: null,\n                      firmwareRevision: util.getValue(lines, 'Revision', ':', true).trim(),\n                      serialNum: util.getValue(lines, 'Serial Number', ':', true).trim(),\n                      interfaceType: util.getValue(lines, 'InterfaceType', ':', true).trim(),\n                      smartStatus: smartStatusString === 'verified' ? 'OK' : smartStatusString || 'unknown',\n                      temperature: null,\n                      BSDName: BSDName\n                    });\n                    cmd = cmd + 'printf \"\\n' + BSDName + '|\"; diskutil info /dev/' + BSDName + ' | grep SMART;';\n                  }\n                }\n              });\n            } catch (e) {\n              util.noop();\n            } // NVME Drives\n\n\n            try {\n              let devices = linesNVMe.join('\\n').split('\\n\\n          Capacity:');\n              devices.shift();\n              devices.forEach(function (device) {\n                device = '!Capacity: ' + device;\n                let lines = device.split('\\n');\n                const linkWidth = util.getValue(lines, 'link width', ':', true).trim();\n                const sizeStr = util.getValue(lines, '!capacity', ':', true).trim();\n                const BSDName = util.getValue(lines, 'BSD Name', ':', true).trim();\n\n                if (sizeStr) {\n                  let sizeValue = 0;\n\n                  if (sizeStr.indexOf('(') >= 0) {\n                    sizeValue = parseInt(sizeStr.match(/\\(([^)]+)\\)/)[1].replace(/\\./g, '').replace(/,/g, '').replace(/\\s/g, ''));\n                  }\n\n                  if (!sizeValue) {\n                    sizeValue = parseInt(sizeStr);\n                  }\n\n                  if (sizeValue) {\n                    const smartStatusString = util.getValue(lines, 'S.M.A.R.T. status', ':', true).trim().toLowerCase();\n                    result.push({\n                      device: BSDName,\n                      type: 'NVMe',\n                      name: util.getValue(lines, 'Model', ':', true).trim(),\n                      vendor: getVendorFromModel(util.getValue(lines, 'Model', ':', true).trim()),\n                      size: sizeValue,\n                      bytesPerSector: null,\n                      totalCylinders: null,\n                      totalHeads: null,\n                      totalSectors: null,\n                      totalTracks: null,\n                      tracksPerCylinder: null,\n                      sectorsPerTrack: null,\n                      firmwareRevision: util.getValue(lines, 'Revision', ':', true).trim(),\n                      serialNum: util.getValue(lines, 'Serial Number', ':', true).trim(),\n                      interfaceType: ('PCIe ' + linkWidth).trim(),\n                      smartStatus: smartStatusString === 'verified' ? 'OK' : smartStatusString || 'unknown',\n                      temperature: null,\n                      BSDName: BSDName\n                    });\n                    cmd = cmd + 'printf \"\\n' + BSDName + '|\"; diskutil info /dev/' + BSDName + ' | grep SMART;';\n                  }\n                }\n              });\n            } catch (e) {\n              util.noop();\n            } // USB Drives\n\n\n            try {\n              let devices = linesUSB.join('\\n').replaceAll('Media:\\n ', 'Model:').split('\\n\\n          Product ID:');\n              devices.shift();\n              devices.forEach(function (device) {\n                let lines = device.split('\\n');\n                const sizeStr = util.getValue(lines, 'Capacity', ':', true).trim();\n                const BSDName = util.getValue(lines, 'BSD Name', ':', true).trim();\n\n                if (sizeStr) {\n                  let sizeValue = 0;\n\n                  if (sizeStr.indexOf('(') >= 0) {\n                    sizeValue = parseInt(sizeStr.match(/\\(([^)]+)\\)/)[1].replace(/\\./g, '').replace(/,/g, '').replace(/\\s/g, ''));\n                  }\n\n                  if (!sizeValue) {\n                    sizeValue = parseInt(sizeStr);\n                  }\n\n                  if (sizeValue) {\n                    const smartStatusString = util.getValue(lines, 'S.M.A.R.T. status', ':', true).trim().toLowerCase();\n                    result.push({\n                      device: BSDName,\n                      type: 'USB',\n                      name: util.getValue(lines, 'Model', ':', true).trim().replaceAll(':', ''),\n                      vendor: getVendorFromModel(util.getValue(lines, 'Model', ':', true).trim()),\n                      size: sizeValue,\n                      bytesPerSector: null,\n                      totalCylinders: null,\n                      totalHeads: null,\n                      totalSectors: null,\n                      totalTracks: null,\n                      tracksPerCylinder: null,\n                      sectorsPerTrack: null,\n                      firmwareRevision: util.getValue(lines, 'Revision', ':', true).trim(),\n                      serialNum: util.getValue(lines, 'Serial Number', ':', true).trim(),\n                      interfaceType: 'USB',\n                      smartStatus: smartStatusString === 'verified' ? 'OK' : smartStatusString || 'unknown',\n                      temperature: null,\n                      BSDName: BSDName\n                    });\n                    cmd = cmd + 'printf \"\\n' + BSDName + '|\"; diskutil info /dev/' + BSDName + ' | grep SMART;';\n                  }\n                }\n              });\n            } catch (e) {\n              util.noop();\n            }\n\n            if (cmd) {\n              cmd = cmd + 'printf \"\\n\"';\n              exec(cmd, {\n                maxBuffer: 1024 * 1024\n              }, function (error, stdout) {\n                let lines = stdout.toString().split('\\n');\n                lines.forEach(line => {\n                  if (line) {\n                    let parts = line.split('|');\n\n                    if (parts.length === 2) {\n                      let BSDName = parts[0];\n                      parts[1] = parts[1].trim();\n                      let parts2 = parts[1].split(':');\n\n                      if (parts2.length === 2) {\n                        parts2[1] = parts2[1].trim();\n                        let status = parts2[1].toLowerCase();\n\n                        for (let i = 0; i < result.length; i++) {\n                          if (result[i].BSDName === BSDName) {\n                            result[i].smartStatus = status === 'not supported' ? 'not supported' : status === 'verified' ? 'Ok' : status === 'failing' ? 'Predicted Failure' : 'unknown';\n                          }\n                        }\n                      }\n                    }\n                  }\n                });\n\n                for (let i = 0; i < result.length; i++) {\n                  delete result[i].BSDName;\n                }\n\n                if (callback) {\n                  callback(result);\n                }\n\n                resolve(result);\n              });\n            } else {\n              for (let i = 0; i < result.length; i++) {\n                delete result[i].BSDName;\n              }\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          }\n        });\n      }\n\n      if (_windows) {\n        try {\n          const workload = [];\n          workload.push(util.powerShell('Get-WmiObject Win32_DiskDrive | select Caption,Size,Status,PNPDeviceId,BytesPerSector,TotalCylinders,TotalHeads,TotalSectors,TotalTracks,TracksPerCylinder,SectorsPerTrack,FirmwareRevision,SerialNumber,InterfaceType | fl'));\n          workload.push(util.powerShell('Get-PhysicalDisk | select BusType,MediaType,FriendlyName,Model,SerialNumber,Size | fl'));\n\n          if (util.smartMonToolsInstalled()) {\n            try {\n              const smartDev = JSON.parse(execSync('smartctl --scan -j'));\n\n              if (smartDev && smartDev.devices && smartDev.devices.length > 0) {\n                smartDev.devices.forEach(dev => {\n                  workload.push(execPromiseSave(`smartctl -j -a ${dev.name}`, util.execOptsWin));\n                });\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n\n          util.promiseAll(workload).then(data => {\n            let devices = data.results[0].toString().split(/\\n\\s*\\n/);\n            devices.forEach(function (device) {\n              let lines = device.split('\\r\\n');\n              const size = util.getValue(lines, 'Size', ':').trim();\n              const status = util.getValue(lines, 'Status', ':').trim().toLowerCase();\n\n              if (size) {\n                result.push({\n                  device: util.getValue(lines, 'PNPDeviceId', ':'),\n                  type: device.indexOf('SSD') > -1 ? 'SSD' : 'HD',\n                  // just a starting point ... better: MSFT_PhysicalDisk - Media Type ... see below\n                  name: util.getValue(lines, 'Caption', ':'),\n                  vendor: getVendorFromModel(util.getValue(lines, 'Caption', ':', true).trim()),\n                  size: parseInt(size),\n                  bytesPerSector: parseInt(util.getValue(lines, 'BytesPerSector', ':')),\n                  totalCylinders: parseInt(util.getValue(lines, 'TotalCylinders', ':')),\n                  totalHeads: parseInt(util.getValue(lines, 'TotalHeads', ':')),\n                  totalSectors: parseInt(util.getValue(lines, 'TotalSectors', ':')),\n                  totalTracks: parseInt(util.getValue(lines, 'TotalTracks', ':')),\n                  tracksPerCylinder: parseInt(util.getValue(lines, 'TracksPerCylinder', ':')),\n                  sectorsPerTrack: parseInt(util.getValue(lines, 'SectorsPerTrack', ':')),\n                  firmwareRevision: util.getValue(lines, 'FirmwareRevision', ':').trim(),\n                  serialNum: util.getValue(lines, 'SerialNumber', ':').trim(),\n                  interfaceType: util.getValue(lines, 'InterfaceType', ':').trim(),\n                  smartStatus: status === 'ok' ? 'Ok' : status === 'degraded' ? 'Degraded' : status === 'pred fail' ? 'Predicted Failure' : 'Unknown',\n                  temperature: null\n                });\n              }\n            });\n            devices = data.results[1].split(/\\n\\s*\\n/);\n            devices.forEach(function (device) {\n              let lines = device.split('\\r\\n');\n              const serialNum = util.getValue(lines, 'SerialNumber', ':').trim();\n              const name = util.getValue(lines, 'FriendlyName', ':').trim().replace('Msft ', 'Microsoft');\n              const size = util.getValue(lines, 'Size', ':').trim();\n              const model = util.getValue(lines, 'Model', ':').trim();\n              const interfaceType = util.getValue(lines, 'BusType', ':').trim();\n              let mediaType = util.getValue(lines, 'MediaType', ':').trim();\n\n              if (mediaType === '3' || mediaType === 'HDD') {\n                mediaType = 'HD';\n              }\n\n              if (mediaType === '4') {\n                mediaType = 'SSD';\n              }\n\n              if (mediaType === '5') {\n                mediaType = 'SCM';\n              }\n\n              if (mediaType === 'Unspecified' && (model.toLowerCase().indexOf('virtual') > -1 || model.toLowerCase().indexOf('vbox') > -1)) {\n                mediaType = 'Virtual';\n              }\n\n              if (size) {\n                let i = util.findObjectByKey(result, 'serialNum', serialNum);\n\n                if (i === -1 || serialNum === '') {\n                  i = util.findObjectByKey(result, 'name', name);\n                }\n\n                if (i != -1) {\n                  result[i].type = mediaType;\n                  result[i].interfaceType = interfaceType;\n                }\n              }\n            }); // S.M.A.R.T\n\n            data.results.shift();\n            data.results.shift();\n\n            if (data.results.length) {\n              data.results.forEach(smartStr => {\n                try {\n                  const smartData = JSON.parse(smartStr);\n\n                  if (smartData.serial_number) {\n                    const serialNum = smartData.serial_number;\n                    let i = util.findObjectByKey(result, 'serialNum', serialNum);\n\n                    if (i != -1) {\n                      result[i].smartStatus = smartData.smart_status && smartData.smart_status.passed ? 'Ok' : smartData.smart_status && smartData.smart_status.passed === false ? 'Predicted Failure' : 'unknown';\n\n                      if (smartData.temperature && smartData.temperature.current) {\n                        result[i].temperature = smartData.temperature.current;\n                      }\n\n                      result[i].smartData = smartData;\n                    }\n                  }\n                } catch (e) {\n                  util.noop();\n                }\n              });\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.diskLayout = diskLayout;","'use strict'; // @ts-check\n// ==================================================================================\n// graphics.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 7. Graphics (controller, display)\n// ----------------------------------------------------------------------------------\n\nconst fs = require('fs');\n\nconst exec = require('child_process').exec;\n\nconst execSync = require('child_process').execSync;\n\nconst util = require('./util');\n\nlet _platform = process.platform;\nlet _nvidiaSmiPath = '';\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos';\n\nlet _resolutionX = 0;\nlet _resolutionY = 0;\nlet _pixelDepth = 0;\nlet _refreshRate = 0;\nconst videoTypes = {\n  '-2': 'UNINITIALIZED',\n  '-1': 'OTHER',\n  '0': 'HD15',\n  '1': 'SVIDEO',\n  '2': 'Composite video',\n  '3': 'Component video',\n  '4': 'DVI',\n  '5': 'HDMI',\n  '6': 'LVDS',\n  '8': 'D_JPN',\n  '9': 'SDI',\n  '10': 'DP',\n  '11': 'DP embedded',\n  '12': 'UDI',\n  '13': 'UDI embedded',\n  '14': 'SDTVDONGLE',\n  '15': 'MIRACAST',\n  '2147483648': 'INTERNAL'\n};\n\nfunction getVendorFromModel(model) {\n  const manufacturers = [{\n    pattern: '^LG.+',\n    manufacturer: 'LG'\n  }, {\n    pattern: '^BENQ.+',\n    manufacturer: 'BenQ'\n  }, {\n    pattern: '^ASUS.+',\n    manufacturer: 'Asus'\n  }, {\n    pattern: '^DELL.+',\n    manufacturer: 'Dell'\n  }, {\n    pattern: '^SAMSUNG.+',\n    manufacturer: 'Samsung'\n  }, {\n    pattern: '^VIEWSON.+',\n    manufacturer: 'ViewSonic'\n  }, {\n    pattern: '^SONY.+',\n    manufacturer: 'Sony'\n  }, {\n    pattern: '^ACER.+',\n    manufacturer: 'Acer'\n  }, {\n    pattern: '^AOC.+',\n    manufacturer: 'AOC Monitors'\n  }, {\n    pattern: '^HP.+',\n    manufacturer: 'HP'\n  }, {\n    pattern: '^EIZO.?',\n    manufacturer: 'Eizo'\n  }, {\n    pattern: '^PHILIPS.?',\n    manufacturer: 'Philips'\n  }, {\n    pattern: '^IIYAMA.?',\n    manufacturer: 'Iiyama'\n  }, {\n    pattern: '^SHARP.?',\n    manufacturer: 'Sharp'\n  }, {\n    pattern: '^NEC.?',\n    manufacturer: 'NEC'\n  }, {\n    pattern: '^LENOVO.?',\n    manufacturer: 'Lenovo'\n  }, {\n    pattern: 'COMPAQ.?',\n    manufacturer: 'Compaq'\n  }, {\n    pattern: 'APPLE.?',\n    manufacturer: 'Apple'\n  }, {\n    pattern: 'INTEL.?',\n    manufacturer: 'Intel'\n  }, {\n    pattern: 'AMD.?',\n    manufacturer: 'AMD'\n  }, {\n    pattern: 'NVIDIA.?',\n    manufacturer: 'NVDIA'\n  }];\n  let result = '';\n\n  if (model) {\n    model = model.toUpperCase();\n    manufacturers.forEach(manufacturer => {\n      const re = RegExp(manufacturer.pattern);\n\n      if (re.test(model)) {\n        result = manufacturer.manufacturer;\n      }\n    });\n  }\n\n  return result;\n}\n\nfunction getVendorFromId(id) {\n  const vendors = {\n    '610': 'Apple',\n    '1e6d': 'LG',\n    '10ac': 'DELL',\n    '4dd9': 'Sony',\n    '38a3': 'NEC'\n  };\n  return vendors[id] || '';\n}\n\nfunction vendorToId(str) {\n  let result = '';\n  str = (str || '').toLowerCase();\n\n  if (str.indexOf('apple') >= 0) {\n    result = '0x05ac';\n  } else if (str.indexOf('nvidia') >= 0) {\n    result = '0x10de';\n  } else if (str.indexOf('intel') >= 0) {\n    result = '0x8086';\n  } else if (str.indexOf('ati') >= 0 || str.indexOf('amd') >= 0) {\n    result = '0x1002';\n  }\n\n  return result;\n}\n\nfunction getMetalVersion(id) {\n  const families = {\n    'spdisplays_mtlgpufamilymac1': 'mac1',\n    'spdisplays_mtlgpufamilymac2': 'mac2',\n    'spdisplays_mtlgpufamilyapple1': 'apple1',\n    'spdisplays_mtlgpufamilyapple2': 'apple2',\n    'spdisplays_mtlgpufamilyapple3': 'apple3',\n    'spdisplays_mtlgpufamilyapple4': 'apple4',\n    'spdisplays_mtlgpufamilyapple5': 'apple5',\n    'spdisplays_mtlgpufamilyapple6': 'apple6',\n    'spdisplays_mtlgpufamilyapple7': 'apple7',\n    'spdisplays_metalfeaturesetfamily11': 'family1_v1',\n    'spdisplays_metalfeaturesetfamily12': 'family1_v2',\n    'spdisplays_metalfeaturesetfamily13': 'family1_v3',\n    'spdisplays_metalfeaturesetfamily14': 'family1_v4',\n    'spdisplays_metalfeaturesetfamily21': 'family2_v1'\n  };\n  return families[id] || '';\n}\n\nfunction graphics(callback) {\n  function parseLinesDarwin(graphicsArr) {\n    const res = {\n      controllers: [],\n      displays: []\n    };\n\n    try {\n      graphicsArr.forEach(function (item) {\n        // controllers\n        const bus = (item.sppci_bus || '').indexOf('builtin') > -1 ? 'Built-In' : (item.sppci_bus || '').indexOf('pcie') > -1 ? 'PCIe' : '';\n        const vram = (parseInt(item.spdisplays_vram || '', 10) || 0) * ((item.spdisplays_vram || '').indexOf('GB') > -1 ? 1024 : 1);\n        const vramDyn = (parseInt(item.spdisplays_vram_shared || '', 10) || 0) * ((item.spdisplays_vram_shared || '').indexOf('GB') > -1 ? 1024 : 1);\n        let metalVersion = getMetalVersion(item.spdisplays_metal || item.spdisplays_metalfamily || '');\n        res.controllers.push({\n          vendor: getVendorFromModel(item.spdisplays_vendor || '') || item.spdisplays_vendor || '',\n          model: item.sppci_model || '',\n          bus,\n          vramDynamic: bus === 'Built-In',\n          vram: vram || vramDyn || null,\n          deviceId: item['spdisplays_device-id'] || '',\n          vendorId: item['spdisplays_vendor-id'] || vendorToId((item['spdisplays_vendor'] || '') + (item.sppci_model || '')),\n          external: item.sppci_device_type === 'spdisplays_egpu',\n          cores: item['sppci_cores'] || null,\n          metalVersion\n        }); // displays\n\n        if (item.spdisplays_ndrvs && item.spdisplays_ndrvs.length) {\n          item.spdisplays_ndrvs.forEach(function (displayItem) {\n            const connectionType = displayItem['spdisplays_connection_type'] || '';\n            const currentResolutionParts = (displayItem['_spdisplays_resolution'] || '').split('@');\n            const currentResolution = currentResolutionParts[0].split('x');\n            const pixelParts = (displayItem['_spdisplays_pixels'] || '').split('x');\n            const pixelDepthString = displayItem['spdisplays_depth'] || '';\n            const serial = displayItem['_spdisplays_display-serial-number'] || displayItem['_spdisplays_display-serial-number2'] || null;\n            res.displays.push({\n              vendor: getVendorFromId(displayItem['_spdisplays_display-vendor-id'] || '') || getVendorFromModel(displayItem['_name'] || ''),\n              vendorId: displayItem['_spdisplays_display-vendor-id'] || '',\n              model: displayItem['_name'] || '',\n              productionYear: displayItem['_spdisplays_display-year'] || null,\n              serial: serial !== '0' ? serial : null,\n              displayId: displayItem['_spdisplays_displayID'] || null,\n              main: displayItem['spdisplays_main'] ? displayItem['spdisplays_main'] === 'spdisplays_yes' : false,\n              builtin: (displayItem['spdisplays_display_type'] || '').indexOf('built-in') > -1,\n              connection: connectionType.indexOf('_internal') > -1 ? 'Internal' : connectionType.indexOf('_displayport') > -1 ? 'Display Port' : connectionType.indexOf('_hdmi') > -1 ? 'HDMI' : null,\n              sizeX: null,\n              sizeY: null,\n              pixelDepth: pixelDepthString === 'CGSThirtyBitColor' ? 30 : pixelDepthString === 'CGSThirtytwoBitColor' ? 32 : pixelDepthString === 'CGSTwentyfourBitColor' ? 24 : null,\n              resolutionX: pixelParts.length > 1 ? parseInt(pixelParts[0], 10) : null,\n              resolutionY: pixelParts.length > 1 ? parseInt(pixelParts[1], 10) : null,\n              currentResX: currentResolution.length > 1 ? parseInt(currentResolution[0], 10) : null,\n              currentResY: currentResolution.length > 1 ? parseInt(currentResolution[1], 10) : null,\n              positionX: 0,\n              positionY: 0,\n              currentRefreshRate: currentResolutionParts.length > 1 ? parseInt(currentResolutionParts[1], 10) : null\n            });\n          });\n        }\n      });\n      return res;\n    } catch (e) {\n      return res;\n    }\n  }\n\n  function parseLinesLinuxControllers(lines) {\n    let controllers = [];\n    let currentController = {\n      vendor: '',\n      model: '',\n      bus: '',\n      busAddress: '',\n      vram: null,\n      vramDynamic: false,\n      pciID: ''\n    };\n    let isGraphicsController = false; // PCI bus IDs\n\n    let pciIDs = [];\n\n    try {\n      pciIDs = execSync('export LC_ALL=C; dmidecode -t 9 2>/dev/null; unset LC_ALL | grep \"Bus Address: \"').toString().split('\\n');\n\n      for (let i = 0; i < pciIDs.length; i++) {\n        pciIDs[i] = pciIDs[i].replace('Bus Address:', '').replace('0000:', '').trim();\n      }\n\n      pciIDs = pciIDs.filter(function (el) {\n        return el != null && el;\n      });\n    } catch (e) {\n      util.noop();\n    }\n\n    for (let i = 0; i < lines.length; i++) {\n      if ('' !== lines[i].trim()) {\n        if (' ' !== lines[i][0] && '\\t' !== lines[i][0]) {\n          // first line of new entry\n          let isExternal = pciIDs.indexOf(lines[i].split(' ')[0]) >= 0;\n          let vgapos = lines[i].toLowerCase().indexOf(' vga ');\n\n          let _3dcontrollerpos = lines[i].toLowerCase().indexOf('3d controller');\n\n          if (vgapos !== -1 || _3dcontrollerpos !== -1) {\n            // VGA\n            if (_3dcontrollerpos !== -1 && vgapos === -1) {\n              vgapos = _3dcontrollerpos;\n            }\n\n            if (currentController.vendor || currentController.model || currentController.bus || currentController.vram !== null || currentController.vramDynamic) {\n              // already a controller found\n              controllers.push(currentController);\n              currentController = {\n                vendor: '',\n                model: '',\n                bus: '',\n                busAddress: '',\n                vram: null,\n                vramDynamic: false\n              };\n            }\n\n            const pciIDCandidate = lines[i].split(' ')[0];\n\n            if (/[\\da-fA-F]{2}:[\\da-fA-F]{2}\\.[\\da-fA-F]/.test(pciIDCandidate)) {\n              currentController.busAddress = pciIDCandidate;\n            }\n\n            isGraphicsController = true;\n            let endpos = lines[i].search(/\\[[0-9a-f]{4}:[0-9a-f]{4}]|$/);\n            let parts = lines[i].substr(vgapos, endpos - vgapos).split(':');\n            currentController.busAddress = lines[i].substr(0, vgapos).trim();\n\n            if (parts.length > 1) {\n              parts[1] = parts[1].trim();\n\n              if (parts[1].toLowerCase().indexOf('corporation') >= 0) {\n                currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf('corporation') + 11).trim();\n                currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf('corporation') + 11, 200).trim().split('(')[0];\n                currentController.bus = pciIDs.length > 0 && isExternal ? 'PCIe' : 'Onboard';\n                currentController.vram = null;\n                currentController.vramDynamic = false;\n              } else if (parts[1].toLowerCase().indexOf(' inc.') >= 0) {\n                if ((parts[1].match(new RegExp(']', 'g')) || []).length > 1) {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(']') + 1).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(']') + 1, 200).trim().split('(')[0].trim();\n                } else {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(' inc.') + 5).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(' inc.') + 5, 200).trim().split('(')[0].trim();\n                }\n\n                currentController.bus = pciIDs.length > 0 && isExternal ? 'PCIe' : 'Onboard';\n                currentController.vram = null;\n                currentController.vramDynamic = false;\n              } else if (parts[1].toLowerCase().indexOf(' ltd.') >= 0) {\n                if ((parts[1].match(new RegExp(']', 'g')) || []).length > 1) {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(']') + 1).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(']') + 1, 200).trim().split('(')[0].trim();\n                } else {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(' ltd.') + 5).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(' ltd.') + 5, 200).trim().split('(')[0].trim();\n                }\n              }\n            }\n          } else {\n            isGraphicsController = false;\n          }\n        }\n\n        if (isGraphicsController) {\n          // within VGA details\n          let parts = lines[i].split(':');\n\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('devicename') !== -1 && parts[1].toLowerCase().indexOf('onboard') !== -1) {\n            currentController.bus = 'Onboard';\n          }\n\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('region') !== -1 && parts[1].toLowerCase().indexOf('memory') !== -1) {\n            let memparts = parts[1].split('=');\n\n            if (memparts.length > 1) {\n              currentController.vram = parseInt(memparts[1]);\n            }\n          }\n        }\n      }\n    }\n\n    if (currentController.vendor || currentController.model || currentController.bus || currentController.busAddress || currentController.vram !== null || currentController.vramDynamic) {\n      // already a controller found\n      controllers.push(currentController);\n    }\n\n    return controllers;\n  }\n\n  function parseLinesLinuxClinfo(controllers, lines) {\n    const fieldPattern = /\\[([^\\]]+)\\]\\s+(\\w+)\\s+(.*)/;\n    const devices = lines.reduce((devices, line) => {\n      const field = fieldPattern.exec(line.trim());\n\n      if (field) {\n        if (!devices[field[1]]) {\n          devices[field[1]] = {};\n        }\n\n        devices[field[1]][field[2]] = field[3];\n      }\n\n      return devices;\n    }, {});\n\n    for (let deviceId in devices) {\n      const device = devices[deviceId];\n\n      if (device['CL_DEVICE_TYPE'] === 'CL_DEVICE_TYPE_GPU') {\n        let busAddress;\n\n        if (device['CL_DEVICE_TOPOLOGY_AMD']) {\n          const bdf = device['CL_DEVICE_TOPOLOGY_AMD'].match(/[a-zA-Z0-9]+:\\d+\\.\\d+/);\n\n          if (bdf) {\n            busAddress = bdf[0];\n          }\n        } else if (device['CL_DEVICE_PCI_BUS_ID_NV'] && device['CL_DEVICE_PCI_SLOT_ID_NV']) {\n          const bus = parseInt(device['CL_DEVICE_PCI_BUS_ID_NV']);\n          const slot = parseInt(device['CL_DEVICE_PCI_SLOT_ID_NV']);\n\n          if (!isNaN(bus) && !isNaN(slot)) {\n            const b = bus & 0xff;\n            const d = slot >> 3 & 0xff;\n            const f = slot & 0x07;\n            busAddress = `${b.toString().padStart(2, '0')}:${d.toString().padStart(2, '0')}.${f}`;\n          }\n        }\n\n        if (busAddress) {\n          let controller = controllers.find(controller => controller.busAddress === busAddress);\n\n          if (!controller) {\n            controller = {\n              vendor: '',\n              model: '',\n              bus: '',\n              busAddress,\n              vram: null,\n              vramDynamic: false\n            };\n            controllers.push(controller);\n          }\n\n          controller.vendor = device['CL_DEVICE_VENDOR'];\n\n          if (device['CL_DEVICE_BOARD_NAME_AMD']) {\n            controller.model = device['CL_DEVICE_BOARD_NAME_AMD'];\n          } else {\n            controller.model = device['CL_DEVICE_NAME'];\n          }\n\n          const memory = parseInt(device['CL_DEVICE_GLOBAL_MEM_SIZE']);\n\n          if (!isNaN(memory)) {\n            controller.vram = Math.round(memory / 1024 / 1024);\n          }\n        }\n      }\n    }\n\n    return controllers;\n  }\n\n  function getNvidiaSmi() {\n    if (_nvidiaSmiPath) {\n      return _nvidiaSmiPath;\n    }\n\n    if (_windows) {\n      try {\n        const basePath = util.WINDIR + '\\\\System32\\\\DriverStore\\\\FileRepository'; // find all directories that have an nvidia-smi.exe file\n\n        const candidateDirs = fs.readdirSync(basePath).filter(dir => {\n          return fs.readdirSync([basePath, dir].join('/')).includes('nvidia-smi.exe');\n        }); // use the directory with the most recently created nvidia-smi.exe file\n\n        const targetDir = candidateDirs.reduce((prevDir, currentDir) => {\n          const previousNvidiaSmi = fs.statSync([basePath, prevDir, 'nvidia-smi.exe'].join('/'));\n          const currentNvidiaSmi = fs.statSync([basePath, currentDir, 'nvidia-smi.exe'].join('/'));\n          return previousNvidiaSmi.ctimeMs > currentNvidiaSmi.ctimeMs ? prevDir : currentDir;\n        });\n\n        if (targetDir) {\n          _nvidiaSmiPath = [basePath, targetDir, 'nvidia-smi.exe'].join('/');\n        }\n      } catch (e) {\n        util.noop();\n      }\n    } else if (_linux) {\n      _nvidiaSmiPath = 'nvidia-smi';\n    }\n\n    return _nvidiaSmiPath;\n  }\n\n  function nvidiaSmi(options) {\n    const nvidiaSmiExe = getNvidiaSmi();\n    options = options || util.execOptsWin;\n\n    if (nvidiaSmiExe) {\n      const nvidiaSmiOpts = '--query-gpu=driver_version,pci.sub_device_id,name,pci.bus_id,fan.speed,memory.total,memory.used,memory.free,utilization.gpu,utilization.memory,temperature.gpu,temperature.memory,power.draw,power.limit,clocks.gr,clocks.mem --format=csv,noheader,nounits';\n      const cmd = nvidiaSmiExe + ' ' + nvidiaSmiOpts + (_linux ? '  2>/dev/null' : '');\n\n      try {\n        const res = execSync(cmd, options).toString();\n        return res;\n      } catch (e) {\n        util.noop();\n      }\n    }\n\n    return '';\n  }\n\n  function nvidiaDevices() {\n    function safeParseNumber(value) {\n      if ([null, undefined].includes(value)) {\n        return value;\n      }\n\n      return parseFloat(value);\n    }\n\n    const stdout = nvidiaSmi();\n\n    if (!stdout) {\n      return [];\n    }\n\n    const gpus = stdout.split('\\n').filter(Boolean);\n    const results = gpus.map(gpu => {\n      const splittedData = gpu.split(', ').map(value => value.includes('N/A') ? undefined : value);\n\n      if (splittedData.length === 16) {\n        return {\n          driverVersion: splittedData[0],\n          subDeviceId: splittedData[1],\n          name: splittedData[2],\n          pciBus: splittedData[3],\n          fanSpeed: safeParseNumber(splittedData[4]),\n          memoryTotal: safeParseNumber(splittedData[5]),\n          memoryUsed: safeParseNumber(splittedData[6]),\n          memoryFree: safeParseNumber(splittedData[7]),\n          utilizationGpu: safeParseNumber(splittedData[8]),\n          utilizationMemory: safeParseNumber(splittedData[9]),\n          temperatureGpu: safeParseNumber(splittedData[10]),\n          temperatureMemory: safeParseNumber(splittedData[11]),\n          powerDraw: safeParseNumber(splittedData[12]),\n          powerLimit: safeParseNumber(splittedData[13]),\n          clockCore: safeParseNumber(splittedData[14]),\n          clockMemory: safeParseNumber(splittedData[15])\n        };\n      }\n    });\n    return results;\n  }\n\n  function mergeControllerNvidia(controller, nvidia) {\n    if (nvidia.driverVersion) {\n      controller.driverVersion = nvidia.driverVersion;\n    }\n\n    if (nvidia.subDeviceId) {\n      controller.subDeviceId = nvidia.subDeviceId;\n    }\n\n    if (nvidia.name) {\n      controller.name = nvidia.name;\n    }\n\n    if (nvidia.pciBus) {\n      controller.pciBus = nvidia.pciBus;\n    }\n\n    if (nvidia.fanSpeed) {\n      controller.fanSpeed = nvidia.fanSpeed;\n    }\n\n    if (nvidia.memoryTotal) {\n      controller.memoryTotal = nvidia.memoryTotal;\n      controller.vram = nvidia.memoryTotal;\n      controller.vramDynamic = false;\n    }\n\n    if (nvidia.memoryUsed) {\n      controller.memoryUsed = nvidia.memoryUsed;\n    }\n\n    if (nvidia.memoryFree) {\n      controller.memoryFree = nvidia.memoryFree;\n    }\n\n    if (nvidia.utilizationGpu) {\n      controller.utilizationGpu = nvidia.utilizationGpu;\n    }\n\n    if (nvidia.utilizationMemory) {\n      controller.utilizationMemory = nvidia.utilizationMemory;\n    }\n\n    if (nvidia.temperatureGpu) {\n      controller.temperatureGpu = nvidia.temperatureGpu;\n    }\n\n    if (nvidia.temperatureMemory) {\n      controller.temperatureMemory = nvidia.temperatureMemory;\n    }\n\n    if (nvidia.powerDraw) {\n      controller.powerDraw = nvidia.powerDraw;\n    }\n\n    if (nvidia.powerLimit) {\n      controller.powerLimit = nvidia.powerLimit;\n    }\n\n    if (nvidia.clockCore) {\n      controller.clockCore = nvidia.clockCore;\n    }\n\n    if (nvidia.clockMemory) {\n      controller.clockMemory = nvidia.clockMemory;\n    }\n\n    return controller;\n  }\n\n  function parseLinesLinuxEdid(edid) {\n    // parsen EDID\n    // --> model\n    // --> resolutionx\n    // --> resolutiony\n    // --> builtin = false\n    // --> pixeldepth (?)\n    // --> sizex\n    // --> sizey\n    let result = {\n      vendor: '',\n      model: '',\n      deviceName: '',\n      main: false,\n      builtin: false,\n      connection: '',\n      sizeX: null,\n      sizeY: null,\n      pixelDepth: null,\n      resolutionX: null,\n      resolutionY: null,\n      currentResX: null,\n      currentResY: null,\n      positionX: 0,\n      positionY: 0,\n      currentRefreshRate: null\n    }; // find first \"Detailed Timing Description\"\n\n    let start = 108;\n\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n\n    result.resolutionX = parseInt('0x0' + edid.substr(start + 8, 1) + edid.substr(start + 4, 2));\n    result.resolutionY = parseInt('0x0' + edid.substr(start + 14, 1) + edid.substr(start + 10, 2));\n    result.sizeX = parseInt('0x0' + edid.substr(start + 28, 1) + edid.substr(start + 24, 2));\n    result.sizeY = parseInt('0x0' + edid.substr(start + 29, 1) + edid.substr(start + 26, 2)); // monitor name\n\n    start = edid.indexOf('000000fc00'); // find first \"Monitor Description Data\"\n\n    if (start >= 0) {\n      let model_raw = edid.substr(start + 10, 26);\n\n      if (model_raw.indexOf('0a') !== -1) {\n        model_raw = model_raw.substr(0, model_raw.indexOf('0a'));\n      }\n\n      try {\n        if (model_raw.length > 2) {\n          result.model = model_raw.match(/.{1,2}/g).map(function (v) {\n            return String.fromCharCode(parseInt(v, 16));\n          }).join('');\n        }\n      } catch (e) {\n        util.noop();\n      }\n    } else {\n      result.model = '';\n    }\n\n    return result;\n  }\n\n  function parseLinesLinuxDisplays(lines, depth) {\n    let displays = [];\n    let currentDisplay = {\n      vendor: '',\n      model: '',\n      deviceName: '',\n      main: false,\n      builtin: false,\n      connection: '',\n      sizeX: null,\n      sizeY: null,\n      pixelDepth: null,\n      resolutionX: null,\n      resolutionY: null,\n      currentResX: null,\n      currentResY: null,\n      positionX: 0,\n      positionY: 0,\n      currentRefreshRate: null\n    };\n    let is_edid = false;\n    let is_current = false;\n    let edid_raw = '';\n    let start = 0;\n\n    for (let i = 1; i < lines.length; i++) {\n      // start with second line\n      if ('' !== lines[i].trim()) {\n        if (' ' !== lines[i][0] && '\\t' !== lines[i][0] && lines[i].toLowerCase().indexOf(' connected ') !== -1) {\n          // first line of new entry\n          if (currentDisplay.model || currentDisplay.main || currentDisplay.builtin || currentDisplay.connection || currentDisplay.sizeX !== null || currentDisplay.pixelDepth !== null || currentDisplay.resolutionX !== null) {\n            // push last display to array\n            displays.push(currentDisplay);\n            currentDisplay = {\n              vendor: '',\n              model: '',\n              main: false,\n              builtin: false,\n              connection: '',\n              sizeX: null,\n              sizeY: null,\n              pixelDepth: null,\n              resolutionX: null,\n              resolutionY: null,\n              currentResX: null,\n              currentResY: null,\n              positionX: 0,\n              positionY: 0,\n              currentRefreshRate: null\n            };\n          }\n\n          let parts = lines[i].split(' ');\n          currentDisplay.connection = parts[0];\n          currentDisplay.main = lines[i].toLowerCase().indexOf(' primary ') >= 0;\n          currentDisplay.builtin = parts[0].toLowerCase().indexOf('edp') >= 0;\n        } // try to read EDID information\n\n\n        if (is_edid) {\n          if (lines[i].search(/\\S|$/) > start) {\n            edid_raw += lines[i].toLowerCase().trim();\n          } else {\n            // parsen EDID\n            let edid_decoded = parseLinesLinuxEdid(edid_raw);\n            currentDisplay.vendor = edid_decoded.vendor;\n            currentDisplay.model = edid_decoded.model;\n            currentDisplay.resolutionX = edid_decoded.resolutionX;\n            currentDisplay.resolutionY = edid_decoded.resolutionY;\n            currentDisplay.sizeX = edid_decoded.sizeX;\n            currentDisplay.sizeY = edid_decoded.sizeY;\n            currentDisplay.pixelDepth = depth;\n            is_edid = false;\n          }\n        }\n\n        if (lines[i].toLowerCase().indexOf('edid:') >= 0) {\n          is_edid = true;\n          start = lines[i].search(/\\S|$/);\n        }\n\n        if (lines[i].toLowerCase().indexOf('*current') >= 0) {\n          const parts1 = lines[i].split('(');\n\n          if (parts1 && parts1.length > 1 && parts1[0].indexOf('x') >= 0) {\n            const resParts = parts1[0].trim().split('x');\n            currentDisplay.currentResX = util.toInt(resParts[0]);\n            currentDisplay.currentResY = util.toInt(resParts[1]);\n          }\n\n          is_current = true;\n        }\n\n        if (is_current && lines[i].toLowerCase().indexOf('clock') >= 0 && lines[i].toLowerCase().indexOf('hz') >= 0 && lines[i].toLowerCase().indexOf('v: height') >= 0) {\n          const parts1 = lines[i].split('clock');\n\n          if (parts1 && parts1.length > 1 && parts1[1].toLowerCase().indexOf('hz') >= 0) {\n            currentDisplay.currentRefreshRate = util.toInt(parts1[1]);\n          }\n\n          is_current = false;\n        }\n      }\n    } // pushen displays\n\n\n    if (currentDisplay.model || currentDisplay.main || currentDisplay.builtin || currentDisplay.connection || currentDisplay.sizeX !== null || currentDisplay.pixelDepth !== null || currentDisplay.resolutionX !== null) {\n      // still information there\n      displays.push(currentDisplay);\n    }\n\n    return displays;\n  } // function starts here\n\n\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = {\n        controllers: [],\n        displays: []\n      };\n\n      if (_darwin) {\n        let cmd = 'system_profiler -xml -detailLevel full SPDisplaysDataType';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            try {\n              let output = stdout.toString();\n              result = parseLinesDarwin(util.plistParser(output)[0]._items);\n            } catch (e) {\n              util.noop();\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_linux) {\n        // Raspberry: https://elinux.org/RPI_vcgencmd_usage\n        if (util.isRaspberry() && util.isRaspbian()) {\n          let cmd = 'fbset -s | grep \\'mode \"\\'; vcgencmd get_mem gpu; tvservice -s; tvservice -n;';\n          exec(cmd, function (error, stdout) {\n            let lines = stdout.toString().split('\\n');\n\n            if (lines.length > 3 && lines[0].indexOf('mode \"') >= -1 && lines[2].indexOf('0x12000a') > -1) {\n              const parts = lines[0].replace('mode', '').replace(/\"/g, '').trim().split('x');\n\n              if (parts.length === 2) {\n                result.displays.push({\n                  vendor: '',\n                  model: util.getValue(lines, 'device_name', '='),\n                  main: true,\n                  builtin: false,\n                  connection: 'HDMI',\n                  sizeX: null,\n                  sizeY: null,\n                  pixelDepth: null,\n                  resolutionX: parseInt(parts[0], 10),\n                  resolutionY: parseInt(parts[1], 10),\n                  currentResX: null,\n                  currentResY: null,\n                  positionX: 0,\n                  positionY: 0,\n                  currentRefreshRate: null\n                });\n              }\n            }\n\n            if (lines.length > 1 && stdout.toString().indexOf('gpu=') >= -1) {\n              result.controllers.push({\n                vendor: 'Broadcom',\n                model: 'VideoCore IV',\n                bus: '',\n                vram: util.getValue(lines, 'gpu', '=').replace('M', ''),\n                vramDynamic: true\n              });\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        } else {\n          let cmd = 'lspci -vvv  2>/dev/null';\n          exec(cmd, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              result.controllers = parseLinesLinuxControllers(lines);\n              const nvidiaData = nvidiaDevices(); // needs to be rewritten ... using no spread operators\n\n              result.controllers = result.controllers.map(controller => {\n                // match by busAddress\n                return mergeControllerNvidia(controller, nvidiaData.find(contr => contr.pciBus.toLowerCase().endsWith(controller.busAddress.toLowerCase())) || {});\n              });\n            }\n\n            let cmd = 'clinfo --raw';\n            exec(cmd, function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                result.controllers = parseLinesLinuxClinfo(result.controllers, lines);\n              }\n\n              let cmd = 'xdpyinfo 2>/dev/null | grep \\'depth of root window\\' | awk \\'{ print $5 }\\'';\n              exec(cmd, function (error, stdout) {\n                let depth = 0;\n\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  depth = parseInt(lines[0]) || 0;\n                }\n\n                let cmd = 'xrandr --verbose 2>/dev/null';\n                exec(cmd, function (error, stdout) {\n                  if (!error) {\n                    let lines = stdout.toString().split('\\n');\n                    result.displays = parseLinesLinuxDisplays(lines, depth);\n                  }\n\n                  if (callback) {\n                    callback(result);\n                  }\n\n                  resolve(result);\n                });\n              });\n            });\n          });\n        }\n      }\n\n      if (_freebsd || _openbsd || _netbsd) {\n        if (callback) {\n          callback(null);\n        }\n\n        resolve(null);\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(null);\n        }\n\n        resolve(null);\n      }\n\n      if (_windows) {\n        // https://blogs.technet.microsoft.com/heyscriptingguy/2013/10/03/use-powershell-to-discover-multi-monitor-information/\n        // https://devblogs.microsoft.com/scripting/use-powershell-to-discover-multi-monitor-information/\n        try {\n          const workload = [];\n          workload.push(util.powerShell('Get-WmiObject win32_VideoController | fl *'));\n          workload.push(util.powerShell('gp \"HKLM:\\\\SYSTEM\\\\ControlSet001\\\\Control\\\\Class\\\\{4d36e968-e325-11ce-bfc1-08002be10318}\\\\*\" -ErrorAction SilentlyContinue | where MatchingDeviceId $null -NE | select MatchingDeviceId,HardwareInformation.qwMemorySize | fl'));\n          workload.push(util.powerShell('Get-WmiObject win32_desktopmonitor | fl *'));\n          workload.push(util.powerShell('Get-CimInstance -Namespace root\\\\wmi -ClassName WmiMonitorBasicDisplayParams | fl'));\n          workload.push(util.powerShell('Add-Type -AssemblyName System.Windows.Forms; [System.Windows.Forms.Screen]::AllScreens'));\n          workload.push(util.powerShell('Get-CimInstance -Namespace root\\\\wmi -ClassName WmiMonitorConnectionParams | fl'));\n          workload.push(util.powerShell('gwmi WmiMonitorID -Namespace root\\\\wmi | ForEach-Object {(($_.ManufacturerName -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + (($_.ProductCodeID -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + (($_.UserFriendlyName -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + (($_.SerialNumberID -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + $_.InstanceName}'));\n          const nvidiaData = nvidiaDevices();\n          Promise.all(workload).then(data => {\n            // controller + vram\n            let csections = data[0].replace(/\\r/g, '').split(/\\n\\s*\\n/);\n            let vsections = data[1].replace(/\\r/g, '').split(/\\n\\s*\\n/);\n            result.controllers = parseLinesWindowsControllers(csections, vsections);\n            result.controllers = result.controllers.map(controller => {\n              // match by subDeviceId\n              if (controller.vendor.toLowerCase() === 'nvidia') {\n                return mergeControllerNvidia(controller, nvidiaData.find(device => {\n                  let windowsSubDeviceId = (controller.subDeviceId || '').toLowerCase();\n                  const nvidiaSubDeviceIdParts = device.subDeviceId.split('x');\n                  let nvidiaSubDeviceId = nvidiaSubDeviceIdParts.length > 1 ? nvidiaSubDeviceIdParts[1].toLowerCase() : nvidiaSubDeviceIdParts[0].toLowerCase();\n                  const lengthDifference = Math.abs(windowsSubDeviceId.length - nvidiaSubDeviceId.length);\n\n                  if (windowsSubDeviceId.length > nvidiaSubDeviceId.length) {\n                    for (let i = 0; i < lengthDifference; i++) {\n                      nvidiaSubDeviceId = '0' + nvidiaSubDeviceId;\n                    }\n                  } else if (windowsSubDeviceId.length < nvidiaSubDeviceId.length) {\n                    for (let i = 0; i < lengthDifference; i++) {\n                      windowsSubDeviceId = '0' + windowsSubDeviceId;\n                    }\n                  }\n\n                  return windowsSubDeviceId === nvidiaSubDeviceId;\n                }) || {});\n              } else {\n                return controller;\n              }\n            }); // displays\n\n            let dsections = data[2].replace(/\\r/g, '').split(/\\n\\s*\\n/); // result.displays = parseLinesWindowsDisplays(dsections);\n\n            if (dsections[0].trim() === '') {\n              dsections.shift();\n            }\n\n            if (dsections.length && dsections[dsections.length - 1].trim() === '') {\n              dsections.pop();\n            } // monitor (powershell)\n\n\n            let msections = data[3].replace(/\\r/g, '').split('Active ');\n            msections.shift(); // forms.screens (powershell)\n\n            let ssections = data[4].replace(/\\r/g, '').split('BitsPerPixel ');\n            ssections.shift(); // connection params (powershell) - video type\n\n            let tsections = data[5].replace(/\\r/g, '').split(/\\n\\s*\\n/);\n            tsections.shift(); // monitor ID (powershell) - model / vendor\n\n            const res = data[6].replace(/\\r/g, '').split(/\\n/);\n            let isections = [];\n            res.forEach(element => {\n              const parts = element.split('|');\n\n              if (parts.length === 5) {\n                isections.push({\n                  vendor: parts[0],\n                  code: parts[1],\n                  model: parts[2],\n                  serial: parts[3],\n                  instanceId: parts[4]\n                });\n              }\n            });\n            result.displays = parseLinesWindowsDisplaysPowershell(ssections, msections, dsections, tsections, isections);\n\n            if (result.displays.length === 1) {\n              if (_resolutionX) {\n                result.displays[0].resolutionX = _resolutionX;\n\n                if (!result.displays[0].currentResX) {\n                  result.displays[0].currentResX = _resolutionX;\n                }\n              }\n\n              if (_resolutionY) {\n                result.displays[0].resolutionY = _resolutionY;\n\n                if (result.displays[0].currentResY === 0) {\n                  result.displays[0].currentResY = _resolutionY;\n                }\n              }\n\n              if (_pixelDepth) {\n                result.displays[0].pixelDepth = _pixelDepth;\n              }\n\n              if (_refreshRate && !result.displays[0].currentRefreshRate) {\n                result.displays[0].currentRefreshRate = _refreshRate;\n              }\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }).catch(() => {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n\n  function parseLinesWindowsControllers(sections, vections) {\n    const memorySizes = {};\n\n    for (const i in vections) {\n      if ({}.hasOwnProperty.call(vections, i)) {\n        if (vections[i].trim() !== '') {\n          const lines = vections[i].trim().split('\\n');\n          const matchingDeviceId = util.getValue(lines, 'MatchingDeviceId').match(/PCI\\\\(VEN_[0-9A-F]{4})&(DEV_[0-9A-F]{4})(?:&(SUBSYS_[0-9A-F]{8}))?(?:&(REV_[0-9A-F]{2}))?/i);\n\n          if (matchingDeviceId) {\n            const quadWordmemorySize = parseInt(util.getValue(lines, 'HardwareInformation.qwMemorySize'));\n\n            if (!isNaN(quadWordmemorySize)) {\n              let deviceId = matchingDeviceId[1].toUpperCase() + '&' + matchingDeviceId[2].toUpperCase();\n\n              if (matchingDeviceId[3]) {\n                deviceId += '&' + matchingDeviceId[3].toUpperCase();\n              }\n\n              if (matchingDeviceId[4]) {\n                deviceId += '&' + matchingDeviceId[4].toUpperCase();\n              }\n\n              memorySizes[deviceId] = quadWordmemorySize;\n            }\n          }\n        }\n      }\n    }\n\n    let controllers = [];\n\n    for (let i in sections) {\n      if ({}.hasOwnProperty.call(sections, i)) {\n        if (sections[i].trim() !== '') {\n          let lines = sections[i].trim().split('\\n');\n          let pnpDeviceId = util.getValue(lines, 'PNPDeviceID', ':').match(/PCI\\\\(VEN_[0-9A-F]{4})&(DEV_[0-9A-F]{4})(?:&(SUBSYS_[0-9A-F]{8}))?(?:&(REV_[0-9A-F]{2}))?/i);\n          let subDeviceId = null;\n          let memorySize = null;\n\n          if (pnpDeviceId) {\n            subDeviceId = pnpDeviceId[3] || '';\n\n            if (subDeviceId) {\n              subDeviceId = subDeviceId.split('_')[1];\n            } // Match PCI device identifier (there's an order of increasing generality):\n            // https://docs.microsoft.com/en-us/windows-hardware/drivers/install/identifiers-for-pci-devices\n            // PCI\\VEN_v(4)&DEV_d(4)&SUBSYS_s(4)n(4)&REV_r(2)\n\n\n            if (memorySize == null && pnpDeviceId[3] && pnpDeviceId[4]) {\n              const deviceId = pnpDeviceId[1].toUpperCase() + '&' + pnpDeviceId[2].toUpperCase() + '&' + pnpDeviceId[3].toUpperCase() + '&' + pnpDeviceId[4].toUpperCase();\n\n              if ({}.hasOwnProperty.call(memorySizes, deviceId)) {\n                memorySize = memorySizes[deviceId];\n              }\n            } // PCI\\VEN_v(4)&DEV_d(4)&SUBSYS_s(4)n(4)\n\n\n            if (memorySize == null && pnpDeviceId[3]) {\n              const deviceId = pnpDeviceId[1].toUpperCase() + '&' + pnpDeviceId[2].toUpperCase() + '&' + pnpDeviceId[3].toUpperCase();\n\n              if ({}.hasOwnProperty.call(memorySizes, deviceId)) {\n                memorySize = memorySizes[deviceId];\n              }\n            } // PCI\\VEN_v(4)&DEV_d(4)&REV_r(2)\n\n\n            if (memorySize == null && pnpDeviceId[4]) {\n              const deviceId = pnpDeviceId[1].toUpperCase() + '&' + pnpDeviceId[2].toUpperCase() + '&' + pnpDeviceId[4].toUpperCase();\n\n              if ({}.hasOwnProperty.call(memorySizes, deviceId)) {\n                memorySize = memorySizes[deviceId];\n              }\n            } // PCI\\VEN_v(4)&DEV_d(4)\n\n\n            if (memorySize == null) {\n              const deviceId = pnpDeviceId[1].toUpperCase() + '&' + pnpDeviceId[2].toUpperCase();\n\n              if ({}.hasOwnProperty.call(memorySizes, deviceId)) {\n                memorySize = memorySizes[deviceId];\n              }\n            }\n          }\n\n          controllers.push({\n            vendor: util.getValue(lines, 'AdapterCompatibility', ':'),\n            model: util.getValue(lines, 'name', ':'),\n            bus: util.getValue(lines, 'PNPDeviceID', ':').startsWith('PCI') ? 'PCI' : '',\n            vram: (memorySize == null ? util.toInt(util.getValue(lines, 'AdapterRAM', ':')) : memorySize) / 1024 / 1024,\n            vramDynamic: util.getValue(lines, 'VideoMemoryType', ':') === '2',\n            subDeviceId\n          });\n          _resolutionX = util.toInt(util.getValue(lines, 'CurrentHorizontalResolution', ':')) || _resolutionX;\n          _resolutionY = util.toInt(util.getValue(lines, 'CurrentVerticalResolution', ':')) || _resolutionY;\n          _refreshRate = util.toInt(util.getValue(lines, 'CurrentRefreshRate', ':')) || _refreshRate;\n          _pixelDepth = util.toInt(util.getValue(lines, 'CurrentBitsPerPixel', ':')) || _pixelDepth;\n        }\n      }\n    }\n\n    return controllers;\n  }\n\n  function parseLinesWindowsDisplaysPowershell(ssections, msections, dsections, tsections, isections) {\n    let displays = [];\n    let vendor = '';\n    let model = '';\n    let deviceID = '';\n    let resolutionX = 0;\n    let resolutionY = 0;\n\n    if (dsections && dsections.length) {\n      let linesDisplay = dsections[0].split('\\n');\n      vendor = util.getValue(linesDisplay, 'MonitorManufacturer', ':');\n      model = util.getValue(linesDisplay, 'Name', ':');\n      deviceID = util.getValue(linesDisplay, 'PNPDeviceID', ':').replace(/&amp;/g, '&').toLowerCase();\n      resolutionX = util.toInt(util.getValue(linesDisplay, 'ScreenWidth', ':'));\n      resolutionY = util.toInt(util.getValue(linesDisplay, 'ScreenHeight', ':'));\n    }\n\n    for (let i = 0; i < ssections.length; i++) {\n      if (ssections[i].trim() !== '') {\n        ssections[i] = 'BitsPerPixel ' + ssections[i];\n        msections[i] = 'Active ' + msections[i]; // tsections can be empty OR undefined on earlier versions of powershell (<=2.0)\n        // Tag connection type as UNKNOWN by default if this information is missing\n\n        if (tsections.length === 0 || tsections[i] === undefined) {\n          tsections[i] = 'Unknown';\n        }\n\n        let linesScreen = ssections[i].split('\\n');\n        let linesMonitor = msections[i].split('\\n');\n        let linesConnection = tsections[i].split('\\n');\n        const bitsPerPixel = util.getValue(linesScreen, 'BitsPerPixel');\n        const bounds = util.getValue(linesScreen, 'Bounds').replace('{', '').replace('}', '').replace(/=/g, ':').split(',');\n        const primary = util.getValue(linesScreen, 'Primary');\n        const sizeX = util.getValue(linesMonitor, 'MaxHorizontalImageSize');\n        const sizeY = util.getValue(linesMonitor, 'MaxVerticalImageSize');\n        const instanceName = util.getValue(linesMonitor, 'InstanceName').toLowerCase();\n        const videoOutputTechnology = util.getValue(linesConnection, 'VideoOutputTechnology');\n        const deviceName = util.getValue(linesScreen, 'DeviceName');\n        let displayVendor = '';\n        let displayModel = '';\n        isections.forEach(element => {\n          if (element.instanceId.toLowerCase().startsWith(instanceName) && vendor.startsWith('(') && model.startsWith('PnP')) {\n            displayVendor = element.vendor;\n            displayModel = element.model;\n          }\n        });\n        displays.push({\n          vendor: instanceName.startsWith(deviceID) && displayVendor === '' ? vendor : displayVendor,\n          model: instanceName.startsWith(deviceID) && displayModel === '' ? model : displayModel,\n          deviceName,\n          main: primary.toLowerCase() === 'true',\n          builtin: videoOutputTechnology === '2147483648',\n          connection: videoOutputTechnology && videoTypes[videoOutputTechnology] ? videoTypes[videoOutputTechnology] : '',\n          resolutionX: util.toInt(util.getValue(bounds, 'Width', ':')),\n          resolutionY: util.toInt(util.getValue(bounds, 'Height', ':')),\n          sizeX: sizeX ? parseInt(sizeX, 10) : null,\n          sizeY: sizeY ? parseInt(sizeY, 10) : null,\n          pixelDepth: bitsPerPixel,\n          currentResX: util.toInt(util.getValue(bounds, 'Width', ':')),\n          currentResY: util.toInt(util.getValue(bounds, 'Height', ':')),\n          positionX: util.toInt(util.getValue(bounds, 'X', ':')),\n          positionY: util.toInt(util.getValue(bounds, 'Y', ':'))\n        });\n      }\n    }\n\n    if (ssections.length === 0) {\n      displays.push({\n        vendor,\n        model,\n        main: true,\n        sizeX: null,\n        sizeY: null,\n        resolutionX,\n        resolutionY,\n        pixelDepth: null,\n        currentResX: resolutionX,\n        currentResY: resolutionY,\n        positionX: 0,\n        positionY: 0\n      });\n    }\n\n    return displays;\n  }\n}\n\nexports.graphics = graphics;","'use strict'; // @ts-check\n// ==================================================================================\n// index.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// Contributors:  Guillaume Legrain (https://github.com/glegrain)\n//                Riccardo Novaglia (https://github.com/richy24)\n//                Quentin Busuttil (https://github.com/Buzut)\n//                Lapsio (https://github.com/lapsio)\n//                csy (https://github.com/csy1983)\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// ----------------------------------------------------------------------------------\n// Dependencies\n// ----------------------------------------------------------------------------------\n\nconst lib_version = require('../package.json').version;\n\nconst util = require('./util');\n\nconst system = require('./system');\n\nconst osInfo = require('./osinfo');\n\nconst cpu = require('./cpu');\n\nconst memory = require('./memory');\n\nconst battery = require('./battery');\n\nconst graphics = require('./graphics');\n\nconst filesystem = require('./filesystem');\n\nconst network = require('./network');\n\nconst wifi = require('./wifi');\n\nconst processes = require('./processes');\n\nconst users = require('./users');\n\nconst internet = require('./internet');\n\nconst docker = require('./docker');\n\nconst vbox = require('./virtualbox');\n\nconst printer = require('./printer');\n\nconst usb = require('./usb');\n\nconst audio = require('./audio');\n\nconst bluetooth = require('./bluetooth');\n\nlet _platform = process.platform;\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos'; // ----------------------------------------------------------------------------------\n// init\n// ----------------------------------------------------------------------------------\n\n\nif (_windows) {\n  util.getCodepage();\n} // ----------------------------------------------------------------------------------\n// General\n// ----------------------------------------------------------------------------------\n\n\nfunction version() {\n  return lib_version;\n} // ----------------------------------------------------------------------------------\n// Get static and dynamic data (all)\n// ----------------------------------------------------------------------------------\n// --------------------------\n// get static data - they should not change until restarted\n\n\nfunction getStaticData(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let data = {};\n      data.version = version();\n      Promise.all([system.system(), system.bios(), system.baseboard(), system.chassis(), osInfo.osInfo(), osInfo.uuid(), osInfo.versions(), cpu.cpu(), cpu.cpuFlags(), graphics.graphics(), network.networkInterfaces(), memory.memLayout(), filesystem.diskLayout()]).then(res => {\n        data.system = res[0];\n        data.bios = res[1];\n        data.baseboard = res[2];\n        data.chassis = res[3];\n        data.os = res[4];\n        data.uuid = res[5];\n        data.versions = res[6];\n        data.cpu = res[7];\n        data.cpu.flags = res[8];\n        data.graphics = res[9];\n        data.net = res[10];\n        data.memLayout = res[11];\n        data.diskLayout = res[12];\n\n        if (callback) {\n          callback(data);\n        }\n\n        resolve(data);\n      });\n    });\n  });\n} // --------------------------\n// get all dynamic data - e.g. for monitoring agents\n// may take some seconds to get all data\n// --------------------------\n// 2 additional parameters needed\n// - srv: \t\tcomma separated list of services to monitor e.g. \"mysql, apache, postgresql\"\n// - iface:\tdefine network interface for which you like to monitor network speed e.g. \"eth0\"\n\n\nfunction getDynamicData(srv, iface, callback) {\n  if (util.isFunction(iface)) {\n    callback = iface;\n    iface = '';\n  }\n\n  if (util.isFunction(srv)) {\n    callback = srv;\n    srv = '';\n  }\n\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      iface = iface || network.getDefaultNetworkInterface();\n      srv = srv || ''; // use closure to track ƒ completion\n\n      let functionProcessed = function () {\n        let totalFunctions = 15;\n\n        if (_windows) {\n          totalFunctions = 13;\n        }\n\n        if (_freebsd || _openbsd || _netbsd) {\n          totalFunctions = 11;\n        }\n\n        if (_sunos) {\n          totalFunctions = 6;\n        }\n\n        return function () {\n          if (--totalFunctions === 0) {\n            if (callback) {\n              callback(data);\n            }\n\n            resolve(data);\n          }\n        };\n      }(); // var totalFunctions = 14;\n      // function functionProcessed() {\n      //   if (--totalFunctions === 0) {\n      //     if (callback) { callback(data) }\n      //     resolve(data);\n      //   }\n      // }\n\n\n      let data = {}; // get time\n\n      data.time = osInfo.time();\n      /**\n       * @namespace\n       * @property {Object}  versions\n       * @property {string}  versions.node\n       * @property {string}  versions.v8\n       */\n\n      data.node = process.versions.node;\n      data.v8 = process.versions.v8;\n      cpu.cpuCurrentSpeed().then(res => {\n        data.cpuCurrentSpeed = res;\n        functionProcessed();\n      });\n      users.users().then(res => {\n        data.users = res;\n        functionProcessed();\n      });\n      processes.processes().then(res => {\n        data.processes = res;\n        functionProcessed();\n      });\n      cpu.currentLoad().then(res => {\n        data.currentLoad = res;\n        functionProcessed();\n      });\n\n      if (!_sunos) {\n        cpu.cpuTemperature().then(res => {\n          data.temp = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        network.networkStats(iface).then(res => {\n          data.networkStats = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_sunos) {\n        network.networkConnections().then(res => {\n          data.networkConnections = res;\n          functionProcessed();\n        });\n      }\n\n      memory.mem().then(res => {\n        data.mem = res;\n        functionProcessed();\n      });\n\n      if (!_sunos) {\n        battery().then(res => {\n          data.battery = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_sunos) {\n        processes.services(srv).then(res => {\n          data.services = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_sunos) {\n        filesystem.fsSize().then(res => {\n          data.fsSize = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_windows && !_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        filesystem.fsStats().then(res => {\n          data.fsStats = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_windows && !_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        filesystem.disksIO().then(res => {\n          data.disksIO = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        wifi.wifiNetworks().then(res => {\n          data.wifiNetworks = res;\n          functionProcessed();\n        });\n      }\n\n      internet.inetLatency().then(res => {\n        data.inetLatency = res;\n        functionProcessed();\n      });\n    });\n  });\n} // --------------------------\n// get all data at once\n// --------------------------\n// 2 additional parameters needed\n// - srv: \t\tcomma separated list of services to monitor e.g. \"mysql, apache, postgresql\"\n// - iface:\tdefine network interface for which you like to monitor network speed e.g. \"eth0\"\n\n\nfunction getAllData(srv, iface, callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let data = {};\n\n      if (iface && util.isFunction(iface) && !callback) {\n        callback = iface;\n        iface = '';\n      }\n\n      if (srv && util.isFunction(srv) && !iface && !callback) {\n        callback = srv;\n        srv = '';\n        iface = '';\n      }\n\n      getStaticData().then(res => {\n        data = res;\n        getDynamicData(srv, iface).then(res => {\n          for (let key in res) {\n            if ({}.hasOwnProperty.call(res, key)) {\n              data[key] = res[key];\n            }\n          }\n\n          if (callback) {\n            callback(data);\n          }\n\n          resolve(data);\n        });\n      });\n    });\n  });\n}\n\nfunction get(valueObject, callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      const allPromises = Object.keys(valueObject).filter(func => ({}).hasOwnProperty.call(exports, func)).map(func => {\n        const params = valueObject[func].substring(valueObject[func].lastIndexOf('(') + 1, valueObject[func].lastIndexOf(')'));\n        let funcWithoutParams = func.indexOf(')') >= 0 ? func.split(')')[1].trim() : func;\n        funcWithoutParams = func.indexOf('|') >= 0 ? func.split('|')[0].trim() : funcWithoutParams;\n\n        if (params) {\n          return exports[funcWithoutParams](params);\n        } else {\n          return exports[funcWithoutParams]('');\n        }\n      });\n      Promise.all(allPromises).then(data => {\n        const result = {};\n        let i = 0;\n\n        for (let key in valueObject) {\n          if ({}.hasOwnProperty.call(valueObject, key) && {}.hasOwnProperty.call(exports, key) && data.length > i) {\n            if (valueObject[key] === '*' || valueObject[key] === 'all') {\n              result[key] = data[i];\n            } else {\n              let keys = valueObject[key]; // let params = '';\n\n              let filter = '';\n              let filterParts = []; // remove params\n\n              if (keys.indexOf(')') >= 0) {\n                keys = keys.split(')')[1].trim();\n              } // extract filter and remove it from keys\n\n\n              if (keys.indexOf('|') >= 0) {\n                filter = keys.split('|')[1].trim();\n                filterParts = filter.split(':');\n                keys = keys.split('|')[0].trim();\n              }\n\n              keys = keys.replace(/,/g, ' ').replace(/ +/g, ' ').split(' ');\n\n              if (data[i]) {\n                if (Array.isArray(data[i])) {\n                  // result is in an array, go through all elements of array and pick only the right ones\n                  const partialArray = [];\n                  data[i].forEach(element => {\n                    let partialRes = {};\n\n                    if (keys.length === 1 && (keys[0] === '*' || keys[0] === 'all')) {\n                      partialRes = element;\n                    } else {\n                      keys.forEach(k => {\n                        if ({}.hasOwnProperty.call(element, k)) {\n                          partialRes[k] = element[k];\n                        }\n                      });\n                    } // if there is a filter, then just take those elements\n\n\n                    if (filter && filterParts.length === 2) {\n                      if ({}.hasOwnProperty.call(partialRes, filterParts[0].trim())) {\n                        const val = partialRes[filterParts[0].trim()];\n\n                        if (typeof val == 'number') {\n                          if (val === parseFloat(filterParts[1].trim())) {\n                            partialArray.push(partialRes);\n                          }\n                        } else if (typeof val == 'string') {\n                          if (val.toLowerCase() === filterParts[1].trim().toLowerCase()) {\n                            partialArray.push(partialRes);\n                          }\n                        }\n                      }\n                    } else {\n                      partialArray.push(partialRes);\n                    }\n                  });\n                  result[key] = partialArray;\n                } else {\n                  const partialRes = {};\n                  keys.forEach(k => {\n                    if ({}.hasOwnProperty.call(data[i], k)) {\n                      partialRes[k] = data[i][k];\n                    }\n                  });\n                  result[key] = partialRes;\n                }\n              } else {\n                result[key] = {};\n              }\n            }\n\n            i++;\n          }\n        }\n\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      });\n    });\n  });\n}\n\nfunction observe(valueObject, interval, callback) {\n  let _data = null;\n  const result = setInterval(() => {\n    get(valueObject).then(data => {\n      if (JSON.stringify(_data) !== JSON.stringify(data)) {\n        _data = Object.assign({}, data);\n        callback(data);\n      }\n    });\n  }, interval);\n  return result;\n} // ----------------------------------------------------------------------------------\n// export all libs\n// ----------------------------------------------------------------------------------\n\n\nexports.version = version;\nexports.system = system.system;\nexports.bios = system.bios;\nexports.baseboard = system.baseboard;\nexports.chassis = system.chassis;\nexports.time = osInfo.time;\nexports.osInfo = osInfo.osInfo;\nexports.versions = osInfo.versions;\nexports.shell = osInfo.shell;\nexports.uuid = osInfo.uuid;\nexports.cpu = cpu.cpu;\nexports.cpuFlags = cpu.cpuFlags;\nexports.cpuCache = cpu.cpuCache;\nexports.cpuCurrentSpeed = cpu.cpuCurrentSpeed;\nexports.cpuTemperature = cpu.cpuTemperature;\nexports.currentLoad = cpu.currentLoad;\nexports.fullLoad = cpu.fullLoad;\nexports.mem = memory.mem;\nexports.memLayout = memory.memLayout;\nexports.battery = battery;\nexports.graphics = graphics.graphics;\nexports.fsSize = filesystem.fsSize;\nexports.fsOpenFiles = filesystem.fsOpenFiles;\nexports.blockDevices = filesystem.blockDevices;\nexports.fsStats = filesystem.fsStats;\nexports.disksIO = filesystem.disksIO;\nexports.diskLayout = filesystem.diskLayout;\nexports.networkInterfaceDefault = network.networkInterfaceDefault;\nexports.networkGatewayDefault = network.networkGatewayDefault;\nexports.networkInterfaces = network.networkInterfaces;\nexports.networkStats = network.networkStats;\nexports.networkConnections = network.networkConnections;\nexports.wifiNetworks = wifi.wifiNetworks;\nexports.wifiInterfaces = wifi.wifiInterfaces;\nexports.wifiConnections = wifi.wifiConnections;\nexports.services = processes.services;\nexports.processes = processes.processes;\nexports.processLoad = processes.processLoad;\nexports.users = users.users;\nexports.inetChecksite = internet.inetChecksite;\nexports.inetLatency = internet.inetLatency;\nexports.dockerInfo = docker.dockerInfo;\nexports.dockerImages = docker.dockerImages;\nexports.dockerContainers = docker.dockerContainers;\nexports.dockerContainerStats = docker.dockerContainerStats;\nexports.dockerContainerProcesses = docker.dockerContainerProcesses;\nexports.dockerVolumes = docker.dockerVolumes;\nexports.dockerAll = docker.dockerAll;\nexports.vboxInfo = vbox.vboxInfo;\nexports.printer = printer.printer;\nexports.usb = usb.usb;\nexports.audio = audio.audio;\nexports.bluetoothDevices = bluetooth.bluetoothDevices;\nexports.getStaticData = getStaticData;\nexports.getDynamicData = getDynamicData;\nexports.getAllData = getAllData;\nexports.get = get;\nexports.observe = observe;\nexports.powerShellStart = util.powerShellStart;\nexports.powerShellRelease = util.powerShellRelease;","'use strict'; // @ts-check\n// ==================================================================================\n// internet.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 12. Internet\n// ----------------------------------------------------------------------------------\n// const exec = require('child_process').exec;\n\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos'; // --------------------------\n// check if external site is available\n\n\nfunction inetChecksite(url, callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = {\n        url: url,\n        ok: false,\n        status: 404,\n        ms: null\n      };\n\n      if (typeof url !== 'string') {\n        if (callback) {\n          callback(result);\n        }\n\n        return resolve(result);\n      }\n\n      let urlSanitized = '';\n      const s = util.sanitizeShellString(url, true);\n\n      for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n        if (!(s[i] === undefined)) {\n          s[i].__proto__.toLowerCase = util.stringToLower;\n          const sl = s[i].toLowerCase();\n\n          if (sl && sl[0] && !sl[1] && sl[0].length === 1) {\n            urlSanitized = urlSanitized + sl[0];\n          }\n        }\n      }\n\n      result.url = urlSanitized;\n\n      try {\n        if (urlSanitized && !util.isPrototypePolluted()) {\n          urlSanitized.__proto__.startsWith = util.stringStartWith;\n\n          if (urlSanitized.startsWith('file:') || urlSanitized.startsWith('gopher:') || urlSanitized.startsWith('telnet:') || urlSanitized.startsWith('mailto:') || urlSanitized.startsWith('news:') || urlSanitized.startsWith('nntp:')) {\n            if (callback) {\n              callback(result);\n            }\n\n            return resolve(result);\n          }\n\n          let t = Date.now();\n\n          if (_linux || _freebsd || _openbsd || _netbsd || _darwin || _sunos) {\n            let args = ['-I', '--connect-timeout', '5', '-m', '5'];\n            args.push(urlSanitized);\n            let cmd = 'curl';\n            util.execSafe(cmd, args).then(stdout => {\n              const lines = stdout.split('\\n');\n              let statusCode = lines[0] && lines[0].indexOf(' ') >= 0 ? parseInt(lines[0].split(' ')[1], 10) : 404;\n              result.status = statusCode || 404;\n              result.ok = statusCode === 200 || statusCode === 301 || statusCode === 302 || statusCode === 304;\n              result.ms = result.ok ? Date.now() - t : null;\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            });\n          }\n\n          if (_windows) {\n            // if this is stable, this can be used for all OS types\n            const http = urlSanitized.startsWith('https:') ? require('https') : require('http');\n\n            try {\n              http.get(urlSanitized, res => {\n                const statusCode = res.statusCode;\n                result.status = statusCode || 404;\n                result.ok = statusCode === 200 || statusCode === 301 || statusCode === 302 || statusCode === 304;\n\n                if (statusCode !== 200) {\n                  res.resume();\n                  result.ms = result.ok ? Date.now() - t : null;\n\n                  if (callback) {\n                    callback(result);\n                  }\n\n                  resolve(result);\n                } else {\n                  res.on('data', () => {});\n                  res.on('end', () => {\n                    result.ms = result.ok ? Date.now() - t : null;\n\n                    if (callback) {\n                      callback(result);\n                    }\n\n                    resolve(result);\n                  });\n                }\n              }).on('error', () => {\n                if (callback) {\n                  callback(result);\n                }\n\n                resolve(result);\n              });\n            } catch (err) {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          }\n        } else {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      } catch (err) {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.inetChecksite = inetChecksite; // --------------------------\n// check inet latency\n\nfunction inetLatency(host, callback) {\n  // fallback - if only callback is given\n  if (util.isFunction(host) && !callback) {\n    callback = host;\n    host = '';\n  }\n\n  host = host || '8.8.8.8';\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      if (typeof host !== 'string') {\n        if (callback) {\n          callback(null);\n        }\n\n        return resolve(null);\n      }\n\n      let hostSanitized = '';\n      const s = (util.isPrototypePolluted() ? '8.8.8.8' : util.sanitizeShellString(host, true)).trim();\n\n      for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n        if (!(s[i] === undefined)) {\n          s[i].__proto__.toLowerCase = util.stringToLower;\n          const sl = s[i].toLowerCase();\n\n          if (sl && sl[0] && !sl[1]) {\n            hostSanitized = hostSanitized + sl[0];\n          }\n        }\n      }\n\n      hostSanitized.__proto__.startsWith = util.stringStartWith;\n\n      if (hostSanitized.startsWith('file:') || hostSanitized.startsWith('gopher:') || hostSanitized.startsWith('telnet:') || hostSanitized.startsWith('mailto:') || hostSanitized.startsWith('news:') || hostSanitized.startsWith('nntp:')) {\n        if (callback) {\n          callback(null);\n        }\n\n        return resolve(null);\n      }\n\n      let params;\n      let filt;\n\n      if (_linux || _freebsd || _openbsd || _netbsd || _darwin) {\n        if (_linux) {\n          params = ['-c', '2', '-w', '3', hostSanitized];\n          filt = 'rtt';\n        }\n\n        if (_freebsd || _openbsd || _netbsd) {\n          params = ['-c', '2', '-t', '3', hostSanitized];\n          filt = 'round-trip';\n        }\n\n        if (_darwin) {\n          params = ['-c2', '-t3', hostSanitized];\n          filt = 'avg';\n        }\n\n        util.execSafe('ping', params).then(stdout => {\n          let result = null;\n\n          if (stdout) {\n            const lines = stdout.split('\\n').filter(line => line.indexOf(filt) >= 0).join('\\n');\n            const line = lines.split('=');\n\n            if (line.length > 1) {\n              const parts = line[1].split('/');\n\n              if (parts.length > 1) {\n                result = parseFloat(parts[1]);\n              }\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        const params = ['-s', '-a', hostSanitized, '56', '2'];\n        const filt = 'avg';\n        util.execSafe('ping', params, {\n          timeout: 3000\n        }).then(stdout => {\n          let result = null;\n\n          if (stdout) {\n            const lines = stdout.split('\\n').filter(line => line.indexOf(filt) >= 0).join('\\n');\n            const line = lines.split('=');\n\n            if (line.length > 1) {\n              const parts = line[1].split('/');\n\n              if (parts.length > 1) {\n                result = parseFloat(parts[1].replace(',', '.'));\n              }\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_windows) {\n        let result = null;\n\n        try {\n          const params = [hostSanitized, '-n', '1'];\n          util.execSafe('ping', params, util.execOptsWin).then(stdout => {\n            if (stdout) {\n              let lines = stdout.split('\\r\\n');\n              lines.shift();\n              lines.forEach(function (line) {\n                if ((line.toLowerCase().match(/ms/g) || []).length === 3) {\n                  let l = line.replace(/ +/g, ' ').split(' ');\n\n                  if (l.length > 6) {\n                    result = parseFloat(l[l.length - 1]);\n                  }\n                }\n              });\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.inetLatency = inetLatency;","'use strict'; // @ts-check\n// ==================================================================================\n// memory.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 5. Memory\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\n\nconst exec = require('child_process').exec;\n\nconst execSync = require('child_process').execSync;\n\nconst util = require('./util');\n\nconst fs = require('fs');\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos';\n\nconst OSX_RAM_manufacturers = {\n  '0x014F': 'Transcend Information',\n  '0x2C00': 'Micron Technology Inc.',\n  '0x802C': 'Micron Technology Inc.',\n  '0x80AD': 'Hynix Semiconductor Inc.',\n  '0x80CE': 'Samsung Electronics Inc.',\n  '0xAD00': 'Hynix Semiconductor Inc.',\n  '0xCE00': 'Samsung Electronics Inc.',\n  '0x02FE': 'Elpida',\n  '0x5105': 'Qimonda AG i. In.',\n  '0x8551': 'Qimonda AG i. In.',\n  '0x859B': 'Crucial',\n  '0x04CD': 'G-Skill'\n};\nconst LINUX_RAM_manufacturers = {\n  '017A': 'Apacer',\n  '0198': 'HyperX',\n  '029E': 'Corsair',\n  '04CB': 'A-DATA',\n  '04CD': 'G-Skill',\n  '059B': 'Crucial',\n  '00CE': 'Samsung',\n  '1315': 'Crutial',\n  '014F': 'Transcend Information',\n  '2C00': 'Micron Technology Inc.',\n  '802C': 'Micron Technology Inc.',\n  '80AD': 'Hynix Semiconductor Inc.',\n  '80CE': 'Samsung Electronics Inc.',\n  'AD00': 'Hynix Semiconductor Inc.',\n  'CE00': 'Samsung Electronics Inc.',\n  '02FE': 'Elpida',\n  '5105': 'Qimonda AG i. In.',\n  '8551': 'Qimonda AG i. In.',\n  '859B': 'Crucial'\n}; // _______________________________________________________________________________________\n// |                         R A M                              |          H D           |\n// |______________________|_________________________|           |                        |\n// |        active             buffers/cache        |           |                        |\n// |________________________________________________|___________|_________|______________|\n// |                     used                            free   |   used       free      |\n// |____________________________________________________________|________________________|\n// |                        total                               |          swap          |\n// |____________________________________________________________|________________________|\n// free (older versions)\n// ----------------------------------\n// # free\n//              total       used        free     shared    buffers     cached\n// Mem:         16038 (1)   15653 (2)   384 (3)  0 (4)     236 (5)     14788 (6)\n// -/+ buffers/cache:       628 (7)     15409 (8)\n// Swap:        16371         83      16288\n//\n// |------------------------------------------------------------|\n// |                           R A M                            |\n// |______________________|_____________________________________|\n// | active (2-(5+6) = 7) |  available (3+5+6 = 8)              |\n// |______________________|_________________________|___________|\n// |        active        |  buffers/cache (5+6)    |           |\n// |________________________________________________|___________|\n// |                   used (2)                     | free (3)  |\n// |____________________________________________________________|\n// |                          total (1)                         |\n// |____________________________________________________________|\n//\n// free (since free von procps-ng 3.3.10)\n// ----------------------------------\n// # free\n//              total       used        free     shared    buffers/cache   available\n// Mem:         16038 (1)   628 (2)     386 (3)  0 (4)     15024 (5)     14788 (6)\n// Swap:        16371         83      16288\n//\n// |------------------------------------------------------------|\n// |                           R A M                            |\n// |______________________|_____________________________________|\n// |                      |      available (6) estimated        |\n// |______________________|_________________________|___________|\n// |     active (2)       |   buffers/cache (5)     | free (3)  |\n// |________________________________________________|___________|\n// |                          total (1)                         |\n// |____________________________________________________________|\n//\n// Reference: http://www.software-architect.net/blog/article/date/2015/06/12/-826c6e5052.html\n// /procs/meminfo - sample (all in kB)\n//\n// MemTotal: 32806380 kB\n// MemFree: 17977744 kB\n// MemAvailable: 19768972 kB\n// Buffers: 517028 kB\n// Cached: 2161876 kB\n// SwapCached: 456 kB\n// Active: 12081176 kB\n// Inactive: 2164616 kB\n// Active(anon): 10832884 kB\n// Inactive(anon): 1477272 kB\n// Active(file): 1248292 kB\n// Inactive(file): 687344 kB\n// Unevictable: 0 kB\n// Mlocked: 0 kB\n// SwapTotal: 16768892 kB\n// SwapFree: 16768304 kB\n// Dirty: 268 kB\n// Writeback: 0 kB\n// AnonPages: 11568832 kB\n// Mapped: 719992 kB\n// Shmem: 743272 kB\n// Slab: 335716 kB\n// SReclaimable: 256364 kB\n// SUnreclaim: 79352 kB\n\nfunction mem(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = {\n        total: os.totalmem(),\n        free: os.freemem(),\n        used: os.totalmem() - os.freemem(),\n        active: os.totalmem() - os.freemem(),\n        // temporarily (fallback)\n        available: os.freemem(),\n        // temporarily (fallback)\n        buffers: 0,\n        cached: 0,\n        slab: 0,\n        buffcache: 0,\n        swaptotal: 0,\n        swapused: 0,\n        swapfree: 0\n      };\n\n      if (_linux) {\n        fs.readFile('/proc/meminfo', function (error, stdout) {\n          if (!error) {\n            const lines = stdout.toString().split('\\n');\n            result.total = parseInt(util.getValue(lines, 'memtotal'), 10);\n            result.total = result.total ? result.total * 1024 : os.totalmem();\n            result.free = parseInt(util.getValue(lines, 'memfree'), 10);\n            result.free = result.free ? result.free * 1024 : os.freemem();\n            result.used = result.total - result.free;\n            result.buffers = parseInt(util.getValue(lines, 'buffers'), 10);\n            result.buffers = result.buffers ? result.buffers * 1024 : 0;\n            result.cached = parseInt(util.getValue(lines, 'cached'), 10);\n            result.cached = result.cached ? result.cached * 1024 : 0;\n            result.slab = parseInt(util.getValue(lines, 'slab'), 10);\n            result.slab = result.slab ? result.slab * 1024 : 0;\n            result.buffcache = result.buffers + result.cached + result.slab;\n            let available = parseInt(util.getValue(lines, 'memavailable'), 10);\n            result.available = available ? available * 1024 : result.free + result.buffcache;\n            result.active = result.total - result.available;\n            result.swaptotal = parseInt(util.getValue(lines, 'swaptotal'), 10);\n            result.swaptotal = result.swaptotal ? result.swaptotal * 1024 : 0;\n            result.swapfree = parseInt(util.getValue(lines, 'swapfree'), 10);\n            result.swapfree = result.swapfree ? result.swapfree * 1024 : 0;\n            result.swapused = result.swaptotal - result.swapfree;\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('/sbin/sysctl hw.realmem hw.physmem vm.stats.vm.v_page_count vm.stats.vm.v_wire_count vm.stats.vm.v_active_count vm.stats.vm.v_inactive_count vm.stats.vm.v_cache_count vm.stats.vm.v_free_count vm.stats.vm.v_page_size', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            const pagesize = parseInt(util.getValue(lines, 'vm.stats.vm.v_page_size'), 10);\n            const inactive = parseInt(util.getValue(lines, 'vm.stats.vm.v_inactive_count'), 10) * pagesize;\n            const cache = parseInt(util.getValue(lines, 'vm.stats.vm.v_cache_count'), 10) * pagesize;\n            result.total = parseInt(util.getValue(lines, 'hw.realmem'), 10);\n\n            if (isNaN(result.total)) {\n              result.total = parseInt(util.getValue(lines, 'hw.physmem'), 10);\n            }\n\n            result.free = parseInt(util.getValue(lines, 'vm.stats.vm.v_free_count'), 10) * pagesize;\n            result.buffcache = inactive + cache;\n            result.available = result.buffcache + result.free;\n            result.active = result.total - result.free - result.buffcache;\n            result.swaptotal = 0;\n            result.swapfree = 0;\n            result.swapused = 0;\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n\n      if (_darwin) {\n        let pageSize = 4096;\n\n        try {\n          let sysPpageSize = util.toInt(execSync('sysctl -n vm.pagesize').toString());\n          pageSize = sysPpageSize || pageSize;\n        } catch (e) {\n          util.noop();\n        }\n\n        exec('vm_stat 2>/dev/null | grep \"Pages active\"', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            result.active = parseInt(lines[0].split(':')[1], 10) * pageSize;\n            result.buffcache = result.used - result.active;\n            result.available = result.free + result.buffcache;\n          }\n\n          exec('sysctl -n vm.swapusage 2>/dev/null', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n\n              if (lines.length > 0) {\n                let line = lines[0].replace(/,/g, '.').replace(/M/g, '');\n                line = line.trim().split('  ');\n\n                for (let i = 0; i < line.length; i++) {\n                  if (line[i].toLowerCase().indexOf('total') !== -1) {\n                    result.swaptotal = parseFloat(line[i].split('=')[1].trim()) * 1024 * 1024;\n                  }\n\n                  if (line[i].toLowerCase().indexOf('used') !== -1) {\n                    result.swapused = parseFloat(line[i].split('=')[1].trim()) * 1024 * 1024;\n                  }\n\n                  if (line[i].toLowerCase().indexOf('free') !== -1) {\n                    result.swapfree = parseFloat(line[i].split('=')[1].trim()) * 1024 * 1024;\n                  }\n                }\n              }\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        });\n      }\n\n      if (_windows) {\n        let swaptotal = 0;\n        let swapused = 0;\n\n        try {\n          util.powerShell('Get-CimInstance Win32_PageFileUsage | Select AllocatedBaseSize, CurrentUsage').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n              lines.forEach(function (line) {\n                if (line !== '') {\n                  line = line.trim().split(/\\s\\s+/);\n                  swaptotal = swaptotal + (parseInt(line[0], 10) || 0);\n                  swapused = swapused + (parseInt(line[1], 10) || 0);\n                }\n              });\n            }\n\n            result.swaptotal = swaptotal * 1024 * 1024;\n            result.swapused = swapused * 1024 * 1024;\n            result.swapfree = result.swaptotal - result.swapused;\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.mem = mem;\n\nfunction memLayout(callback) {\n  function getManufacturerDarwin(manId) {\n    if ({}.hasOwnProperty.call(OSX_RAM_manufacturers, manId)) {\n      return OSX_RAM_manufacturers[manId];\n    }\n\n    return manId;\n  }\n\n  function getManufacturerLinux(manId) {\n    const manIdSearch = manId.replace('0x', '').toUpperCase();\n\n    if (manIdSearch.length === 4 && {}.hasOwnProperty.call(LINUX_RAM_manufacturers, manIdSearch)) {\n      return LINUX_RAM_manufacturers[manIdSearch];\n    }\n\n    return manId;\n  }\n\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = [];\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t memory 2>/dev/null | grep -iE \"Size:|Type|Speed|Manufacturer|Form Factor|Locator|Memory Device|Serial Number|Voltage|Part Number\"; unset LC_ALL', function (error, stdout) {\n          if (!error) {\n            let devices = stdout.toString().split('Memory Device');\n            devices.shift();\n            devices.forEach(function (device) {\n              let lines = device.split('\\n');\n              const sizeString = util.getValue(lines, 'Size');\n              const size = sizeString.indexOf('GB') >= 0 ? parseInt(sizeString, 10) * 1024 * 1024 * 1024 : parseInt(sizeString, 10) * 1024 * 1024;\n\n              if (parseInt(util.getValue(lines, 'Size'), 10) > 0) {\n                const totalWidth = util.toInt(util.getValue(lines, 'Total Width'));\n                const dataWidth = util.toInt(util.getValue(lines, 'Data Width'));\n                result.push({\n                  size,\n                  bank: util.getValue(lines, 'Bank Locator'),\n                  type: util.getValue(lines, 'Type:'),\n                  ecc: dataWidth && totalWidth ? totalWidth > dataWidth : false,\n                  clockSpeed: util.getValue(lines, 'Configured Clock Speed:') ? parseInt(util.getValue(lines, 'Configured Clock Speed:'), 10) : util.getValue(lines, 'Speed:') ? parseInt(util.getValue(lines, 'Speed:'), 10) : null,\n                  formFactor: util.getValue(lines, 'Form Factor:'),\n                  manufacturer: getManufacturerLinux(util.getValue(lines, 'Manufacturer:')),\n                  partNum: util.getValue(lines, 'Part Number:'),\n                  serialNum: util.getValue(lines, 'Serial Number:'),\n                  voltageConfigured: parseFloat(util.getValue(lines, 'Configured Voltage:')) || null,\n                  voltageMin: parseFloat(util.getValue(lines, 'Minimum Voltage:')) || null,\n                  voltageMax: parseFloat(util.getValue(lines, 'Maximum Voltage:')) || null\n                });\n              } else {\n                result.push({\n                  size: 0,\n                  bank: util.getValue(lines, 'Bank Locator'),\n                  type: 'Empty',\n                  ecc: null,\n                  clockSpeed: 0,\n                  formFactor: util.getValue(lines, 'Form Factor:'),\n                  partNum: '',\n                  serialNum: '',\n                  voltageConfigured: null,\n                  voltageMin: null,\n                  voltageMax: null\n                });\n              }\n            });\n          }\n\n          if (!result.length) {\n            result.push({\n              size: os.totalmem(),\n              bank: '',\n              type: '',\n              ecc: null,\n              clockSpeed: 0,\n              formFactor: '',\n              partNum: '',\n              serialNum: '',\n              voltageConfigured: null,\n              voltageMin: null,\n              voltageMax: null\n            }); // Try Raspberry PI\n\n            try {\n              let stdout = execSync('cat /proc/cpuinfo 2>/dev/null');\n              let lines = stdout.toString().split('\\n');\n              let model = util.getValue(lines, 'hardware', ':', true).toUpperCase();\n              let version = util.getValue(lines, 'revision', ':', true).toLowerCase();\n\n              if (model === 'BCM2835' || model === 'BCM2708' || model === 'BCM2709' || model === 'BCM2835' || model === 'BCM2837') {\n                const clockSpeed = {\n                  '0': 400,\n                  '1': 450,\n                  '2': 450,\n                  '3': 3200\n                };\n                result[0].type = 'LPDDR2';\n                result[0].type = version && version[2] && version[2] === '3' ? 'LPDDR4' : result[0].type;\n                result[0].ecc = false;\n                result[0].clockSpeed = version && version[2] && clockSpeed[version[2]] || 400;\n                result[0].clockSpeed = version && version[4] && version[4] === 'd' ? 500 : result[0].clockSpeed;\n                result[0].formFactor = 'SoC';\n                stdout = execSync('vcgencmd get_config sdram_freq 2>/dev/null');\n                lines = stdout.toString().split('\\n');\n                let freq = parseInt(util.getValue(lines, 'sdram_freq', '=', true), 10) || 0;\n\n                if (freq) {\n                  result[0].clockSpeed = freq;\n                }\n\n                stdout = execSync('vcgencmd measure_volts sdram_p 2>/dev/null');\n                lines = stdout.toString().split('\\n');\n                let voltage = parseFloat(util.getValue(lines, 'volt', '=', true)) || 0;\n\n                if (voltage) {\n                  result[0].voltageConfigured = voltage;\n                  result[0].voltageMin = voltage;\n                  result[0].voltageMax = voltage;\n                }\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('system_profiler SPMemoryDataType', function (error, stdout) {\n          if (!error) {\n            const allLines = stdout.toString().split('\\n');\n            const eccStatus = util.getValue(allLines, 'ecc', ':', true).toLowerCase();\n            let devices = stdout.toString().split('        BANK ');\n            let hasBank = true;\n\n            if (devices.length === 1) {\n              devices = stdout.toString().split('        DIMM');\n              hasBank = false;\n            }\n\n            devices.shift();\n            devices.forEach(function (device) {\n              let lines = device.split('\\n');\n              const bank = (hasBank ? 'BANK ' : 'DIMM') + lines[0].trim().split('/')[0];\n              const size = parseInt(util.getValue(lines, '          Size'));\n\n              if (size) {\n                result.push({\n                  size: size * 1024 * 1024 * 1024,\n                  bank: bank,\n                  type: util.getValue(lines, '          Type:'),\n                  ecc: eccStatus ? eccStatus === 'enabled' : null,\n                  clockSpeed: parseInt(util.getValue(lines, '          Speed:'), 10),\n                  formFactor: '',\n                  manufacturer: getManufacturerDarwin(util.getValue(lines, '          Manufacturer:')),\n                  partNum: util.getValue(lines, '          Part Number:'),\n                  serialNum: util.getValue(lines, '          Serial Number:'),\n                  voltageConfigured: null,\n                  voltageMin: null,\n                  voltageMax: null\n                });\n              } else {\n                result.push({\n                  size: 0,\n                  bank: bank,\n                  type: 'Empty',\n                  ecc: null,\n                  clockSpeed: 0,\n                  formFactor: '',\n                  manufacturer: '',\n                  partNum: '',\n                  serialNum: '',\n                  voltageConfigured: null,\n                  voltageMin: null,\n                  voltageMax: null\n                });\n              }\n            });\n          }\n\n          if (!result.length) {\n            const lines = stdout.toString().split('\\n');\n            const size = parseInt(util.getValue(lines, '      Memory:'));\n            const type = util.getValue(lines, '      Type:');\n\n            if (size && type) {\n              result.push({\n                size: size * 1024 * 1024 * 1024,\n                bank: '0',\n                type,\n                ecc: false,\n                clockSpeed: 0,\n                formFactor: '',\n                manufacturer: 'Apple',\n                partNum: '',\n                serialNum: '',\n                voltageConfigured: null,\n                voltageMin: null,\n                voltageMax: null\n              });\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n\n      if (_windows) {\n        const memoryTypes = 'Unknown|Other|DRAM|Synchronous DRAM|Cache DRAM|EDO|EDRAM|VRAM|SRAM|RAM|ROM|FLASH|EEPROM|FEPROM|EPROM|CDRAM|3DRAM|SDRAM|SGRAM|RDRAM|DDR|DDR2|DDR2 FB-DIMM|Reserved|DDR3|FBD2|DDR4|LPDDR|LPDDR2|LPDDR3|LPDDR4'.split('|');\n        const FormFactors = 'Unknown|Other|SIP|DIP|ZIP|SOJ|Proprietary|SIMM|DIMM|TSOP|PGA|RIMM|SODIMM|SRIMM|SMD|SSMP|QFP|TQFP|SOIC|LCC|PLCC|BGA|FPBGA|LGA'.split('|');\n\n        try {\n          util.powerShell('Get-WmiObject Win32_PhysicalMemory | select DataWidth,TotalWidth,Capacity,BankLabel,MemoryType,SMBIOSMemoryType,ConfiguredClockSpeed,FormFactor,Manufacturer,PartNumber,SerialNumber,ConfiguredVoltage,MinVoltage,MaxVoltage | fl').then((stdout, error) => {\n            if (!error) {\n              let devices = stdout.toString().split(/\\n\\s*\\n/);\n              devices.shift();\n              devices.forEach(function (device) {\n                let lines = device.split('\\r\\n');\n                const dataWidth = util.toInt(util.getValue(lines, 'DataWidth', ':'));\n                const totalWidth = util.toInt(util.getValue(lines, 'TotalWidth', ':'));\n                const size = parseInt(util.getValue(lines, 'Capacity', ':'), 10) || 0;\n\n                if (size) {\n                  result.push({\n                    size,\n                    bank: util.getValue(lines, 'BankLabel', ':'),\n                    // BankLabel\n                    type: memoryTypes[parseInt(util.getValue(lines, 'MemoryType', ':'), 10) || parseInt(util.getValue(lines, 'SMBIOSMemoryType', ':'), 10)],\n                    ecc: dataWidth && totalWidth ? totalWidth > dataWidth : false,\n                    clockSpeed: parseInt(util.getValue(lines, 'ConfiguredClockSpeed', ':'), 10) || parseInt(util.getValue(lines, 'Speed', ':'), 10) || 0,\n                    formFactor: FormFactors[parseInt(util.getValue(lines, 'FormFactor', ':'), 10) || 0],\n                    manufacturer: util.getValue(lines, 'Manufacturer', ':'),\n                    partNum: util.getValue(lines, 'PartNumber', ':'),\n                    serialNum: util.getValue(lines, 'SerialNumber', ':'),\n                    voltageConfigured: (parseInt(util.getValue(lines, 'ConfiguredVoltage', ':'), 10) || 0) / 1000.0,\n                    voltageMin: (parseInt(util.getValue(lines, 'MinVoltage', ':'), 10) || 0) / 1000.0,\n                    voltageMax: (parseInt(util.getValue(lines, 'MaxVoltage', ':'), 10) || 0) / 1000.0\n                  });\n                }\n              });\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.memLayout = memLayout;","'use strict'; // @ts-check\n// ==================================================================================\n// network.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 9. Network\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\n\nconst exec = require('child_process').exec;\n\nconst execSync = require('child_process').execSync;\n\nconst fs = require('fs');\n\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos';\n\nlet _network = {};\nlet _default_iface = '';\nlet _ifaces = {};\nlet _dhcpNics = [];\nlet _networkInterfaces = [];\nlet _mac = {};\nlet pathToIp;\n\nfunction getDefaultNetworkInterface() {\n  let ifacename = '';\n  let ifacenameFirst = '';\n\n  try {\n    let ifaces = os.networkInterfaces();\n    let scopeid = 9999; // fallback - \"first\" external interface (sorted by scopeid)\n\n    for (let dev in ifaces) {\n      if ({}.hasOwnProperty.call(ifaces, dev)) {\n        ifaces[dev].forEach(function (details) {\n          if (details && details.internal === false) {\n            ifacenameFirst = ifacenameFirst || dev; // fallback if no scopeid\n\n            if (details.scopeid && details.scopeid < scopeid) {\n              ifacename = dev;\n              scopeid = details.scopeid;\n            }\n          }\n        });\n      }\n    }\n\n    ifacename = ifacename || ifacenameFirst || '';\n\n    if (_windows) {\n      // https://www.inetdaemon.com/tutorials/internet/ip/routing/default_route.shtml\n      let defaultIp = '';\n      const cmd = 'netstat -r';\n      const result = execSync(cmd, util.execOptsWin);\n      const lines = result.toString().split(os.EOL);\n      lines.forEach(line => {\n        line = line.replace(/\\s+/g, ' ').trim();\n\n        if (line.indexOf('0.0.0.0 0.0.0.0') > -1 && !/[a-zA-Z]/.test(line)) {\n          const parts = line.split(' ');\n\n          if (parts.length >= 5) {\n            defaultIp = parts[parts.length - 2];\n          }\n        }\n      });\n\n      if (defaultIp) {\n        for (let dev in ifaces) {\n          if ({}.hasOwnProperty.call(ifaces, dev)) {\n            ifaces[dev].forEach(function (details) {\n              if (details && details.address && details.address === defaultIp) {\n                ifacename = dev;\n              }\n            });\n          }\n        }\n      }\n    }\n\n    if (_linux) {\n      let cmd = 'ip route 2> /dev/null | grep default';\n      let result = execSync(cmd);\n      let parts = result.toString().split('\\n')[0].split(/\\s+/);\n\n      if (parts[0] === 'none' && parts[5]) {\n        ifacename = parts[5];\n      } else if (parts[4]) {\n        ifacename = parts[4];\n      }\n\n      if (ifacename.indexOf(':') > -1) {\n        ifacename = ifacename.split(':')[1].trim();\n      }\n    }\n\n    if (_darwin || _freebsd || _openbsd || _netbsd || _sunos) {\n      let cmd = '';\n\n      if (_linux) {\n        cmd = 'ip route 2> /dev/null | grep default | awk \\'{print $5}\\'';\n      }\n\n      if (_darwin) {\n        cmd = 'route -n get default 2>/dev/null | grep interface: | awk \\'{print $2}\\'';\n      }\n\n      if (_freebsd || _openbsd || _netbsd || _sunos) {\n        cmd = 'route get 0.0.0.0 | grep interface:';\n      } // console.log('SYNC - default darwin 3');\n\n\n      let result = execSync(cmd);\n      ifacename = result.toString().split('\\n')[0];\n\n      if (ifacename.indexOf(':') > -1) {\n        ifacename = ifacename.split(':')[1].trim();\n      }\n    }\n  } catch (e) {\n    util.noop();\n  }\n\n  if (ifacename) {\n    _default_iface = ifacename;\n  }\n\n  return _default_iface;\n}\n\nexports.getDefaultNetworkInterface = getDefaultNetworkInterface;\n\nfunction getMacAddresses() {\n  let iface = '';\n  let mac = '';\n  let result = {};\n\n  if (_linux || _freebsd || _openbsd || _netbsd) {\n    if (typeof pathToIp === 'undefined') {\n      try {\n        const lines = execSync('which ip').toString().split('\\n');\n\n        if (lines.length && lines[0].indexOf(':') === -1 && lines[0].indexOf('/') === 0) {\n          pathToIp = lines[0];\n        } else {\n          pathToIp = '';\n        }\n      } catch (e) {\n        pathToIp = '';\n      }\n    }\n\n    try {\n      const cmd = 'export LC_ALL=C; ' + (pathToIp ? pathToIp + ' link show up' : '/sbin/ifconfig') + '; unset LC_ALL';\n      let res = execSync(cmd);\n      const lines = res.toString().split('\\n');\n\n      for (let i = 0; i < lines.length; i++) {\n        if (lines[i] && lines[i][0] !== ' ') {\n          if (pathToIp) {\n            let nextline = lines[i + 1].trim().split(' ');\n\n            if (nextline[0] === 'link/ether') {\n              iface = lines[i].split(' ')[1];\n              iface = iface.slice(0, iface.length - 1);\n              mac = nextline[1];\n            }\n          } else {\n            iface = lines[i].split(' ')[0];\n            mac = lines[i].split('HWaddr ')[1];\n          }\n\n          if (iface && mac) {\n            result[iface] = mac.trim();\n            iface = '';\n            mac = '';\n          }\n        }\n      }\n    } catch (e) {\n      util.noop();\n    }\n  }\n\n  if (_darwin) {\n    try {\n      const cmd = '/sbin/ifconfig'; // console.log('SYNC - macAde darwin 6');\n\n      let res = execSync(cmd);\n      const lines = res.toString().split('\\n');\n\n      for (let i = 0; i < lines.length; i++) {\n        if (lines[i] && lines[i][0] !== '\\t' && lines[i].indexOf(':') > 0) {\n          iface = lines[i].split(':')[0];\n        } else if (lines[i].indexOf('\\tether ') === 0) {\n          mac = lines[i].split('\\tether ')[1];\n\n          if (iface && mac) {\n            result[iface] = mac.trim();\n            iface = '';\n            mac = '';\n          }\n        }\n      }\n    } catch (e) {\n      util.noop();\n    }\n  }\n\n  return result;\n}\n\nfunction networkInterfaceDefault(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = getDefaultNetworkInterface();\n\n      if (callback) {\n        callback(result);\n      }\n\n      resolve(result);\n    });\n  });\n}\n\nexports.networkInterfaceDefault = networkInterfaceDefault; // --------------------------\n// NET - interfaces\n\nfunction parseLinesWindowsNics(sections, nconfigsections) {\n  let nics = [];\n\n  for (let i in sections) {\n    if ({}.hasOwnProperty.call(sections, i)) {\n      if (sections[i].trim() !== '') {\n        let lines = sections[i].trim().split('\\r\\n');\n        let linesNicConfig = nconfigsections && nconfigsections[i] ? nconfigsections[i].trim().split('\\r\\n') : [];\n        let netEnabled = util.getValue(lines, 'NetEnabled', ':');\n        let adapterType = util.getValue(lines, 'AdapterTypeID', ':') === '9' ? 'wireless' : 'wired';\n        let ifacename = util.getValue(lines, 'Name', ':').replace(/\\]/g, ')').replace(/\\[/g, '(');\n        let iface = util.getValue(lines, 'NetConnectionID', ':').replace(/\\]/g, ')').replace(/\\[/g, '(');\n\n        if (ifacename.toLowerCase().indexOf('wi-fi') >= 0 || ifacename.toLowerCase().indexOf('wireless') >= 0) {\n          adapterType = 'wireless';\n        }\n\n        if (netEnabled !== '') {\n          const speed = parseInt(util.getValue(lines, 'speed', ':').trim(), 10) / 1000000;\n          nics.push({\n            mac: util.getValue(lines, 'MACAddress', ':').toLowerCase(),\n            dhcp: util.getValue(linesNicConfig, 'dhcpEnabled', ':').toLowerCase() === 'true',\n            name: ifacename,\n            iface,\n            netEnabled: netEnabled === 'TRUE',\n            speed: isNaN(speed) ? null : speed,\n            operstate: util.getValue(lines, 'NetConnectionStatus', ':') === '2' ? 'up' : 'down',\n            type: adapterType\n          });\n        }\n      }\n    }\n  }\n\n  return nics;\n}\n\nfunction getWindowsNics() {\n  // const cmd = util.getWmic() + ' nic get /value';\n  // const cmdnicconfig = util.getWmic() + ' nicconfig get dhcpEnabled /value';\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let cmd = 'Get-WmiObject Win32_NetworkAdapter | fl *' + '; echo \\'#-#-#-#\\';';\n      cmd += 'Get-WmiObject Win32_NetworkAdapterConfiguration | fl DHCPEnabled' + '';\n\n      try {\n        util.powerShell(cmd).then(data => {\n          data = data.split('#-#-#-#');\n          const nsections = (data[0] || '').split(/\\n\\s*\\n/);\n          const nconfigsections = (data[1] || '').split(/\\n\\s*\\n/);\n          resolve(parseLinesWindowsNics(nsections, nconfigsections));\n        });\n      } catch (e) {\n        resolve([]);\n      }\n    });\n  });\n}\n\nfunction getWindowsDNSsuffixes() {\n  let iface = {};\n  let dnsSuffixes = {\n    primaryDNS: '',\n    exitCode: 0,\n    ifaces: []\n  };\n\n  try {\n    const ipconfig = execSync('ipconfig /all', util.execOptsWin);\n    const ipconfigArray = ipconfig.split('\\r\\n\\r\\n');\n    ipconfigArray.forEach((element, index) => {\n      if (index == 1) {\n        const longPrimaryDNS = element.split('\\r\\n').filter(element => {\n          return element.toUpperCase().includes('DNS');\n        });\n        const primaryDNS = longPrimaryDNS[0].substring(longPrimaryDNS[0].lastIndexOf(':') + 1);\n        dnsSuffixes.primaryDNS = primaryDNS.trim();\n\n        if (!dnsSuffixes.primaryDNS) {\n          dnsSuffixes.primaryDNS = 'Not defined';\n        }\n      }\n\n      if (index > 1) {\n        if (index % 2 == 0) {\n          const name = element.substring(element.lastIndexOf(' ') + 1).replace(':', '');\n          iface.name = name;\n        } else {\n          const connectionSpecificDNS = element.split('\\r\\n').filter(element => {\n            return element.toUpperCase().includes('DNS');\n          });\n          const dnsSuffix = connectionSpecificDNS[0].substring(connectionSpecificDNS[0].lastIndexOf(':') + 1);\n          iface.dnsSuffix = dnsSuffix.trim();\n          dnsSuffixes.ifaces.push(iface);\n          iface = {};\n        }\n      }\n    });\n    return dnsSuffixes;\n  } catch (error) {\n    // console.log('An error occurred trying to bring the Connection-specific DNS suffix', error.message);\n    return {\n      primaryDNS: '',\n      exitCode: 0,\n      ifaces: []\n    };\n  }\n}\n\nfunction getWindowsIfaceDNSsuffix(ifaces, ifacename) {\n  let dnsSuffix = ''; // Adding (.) to ensure ifacename compatibility when duplicated iface-names\n\n  const interfaceName = ifacename + '.';\n\n  try {\n    const connectionDnsSuffix = ifaces.filter(iface => {\n      return interfaceName.includes(iface.name + '.');\n    }).map(iface => iface.dnsSuffix);\n\n    if (connectionDnsSuffix[0]) {\n      dnsSuffix = connectionDnsSuffix[0];\n    }\n\n    if (!dnsSuffix) {\n      dnsSuffix = '';\n    }\n\n    return dnsSuffix;\n  } catch (error) {\n    // console.log('Error getting Connection-specific DNS suffix: ', error.message);\n    return 'Unknown';\n  }\n}\n\nfunction getWindowsWiredProfilesInformation() {\n  try {\n    const result = execSync('netsh lan show profiles', util.execOptsWin);\n    const profileList = result.split('\\r\\nProfile on interface');\n    return profileList;\n  } catch (error) {\n    if (error.status === 1 && error.stdout.includes('AutoConfig')) {\n      return 'Disabled';\n    }\n\n    return [];\n  }\n}\n\nfunction getWindowsWirelessIfaceSSID(interfaceName) {\n  try {\n    const result = execSync(`netsh wlan show  interface name=\"${interfaceName}\" | findstr \"SSID\"`, util.execOptsWin);\n    const SSID = result.split('\\r\\n').shift();\n    const parseSSID = SSID.split(':').pop();\n    return parseSSID;\n  } catch (error) {\n    return 'Unknown';\n  }\n}\n\nfunction getWindowsIEEE8021x(connectionType, iface, ifaces) {\n  let i8021x = {\n    state: 'Unknown',\n    protocol: 'Unknown'\n  };\n\n  if (ifaces === 'Disabled') {\n    i8021x.state = 'Disabled';\n    i8021x.protocol = 'Not defined';\n    return i8021x;\n  }\n\n  if (connectionType == 'wired' && ifaces.length > 0) {\n    try {\n      // Get 802.1x information by interface name\n      const iface8021xInfo = ifaces.find(element => {\n        return element.includes(iface + '\\r\\n');\n      });\n      const arrayIface8021xInfo = iface8021xInfo.split('\\r\\n');\n      const state8021x = arrayIface8021xInfo.find(element => {\n        return element.includes('802.1x');\n      });\n\n      if (state8021x.includes('Disabled')) {\n        i8021x.state = 'Disabled';\n        i8021x.protocol = 'Not defined';\n      } else if (state8021x.includes('Enabled')) {\n        const protocol8021x = arrayIface8021xInfo.find(element => {\n          return element.includes('EAP');\n        });\n        i8021x.protocol = protocol8021x.split(':').pop();\n        i8021x.state = 'Enabled';\n      }\n    } catch (error) {\n      // console.log('Error getting wired information:', error);\n      return i8021x;\n    }\n  } else if (connectionType == 'wireless') {\n    let i8021xState = '';\n    let i8021xProtocol = '';\n\n    try {\n      const SSID = getWindowsWirelessIfaceSSID(iface);\n\n      if (SSID !== 'Unknown') {\n        i8021xState = execSync(`netsh wlan show profiles \"${SSID}\" | findstr \"802.1X\"`, util.execOptsWin);\n        i8021xProtocol = execSync(`netsh wlan show profiles \"${SSID}\" | findstr \"EAP\"`, util.execOptsWin);\n      }\n\n      if (i8021xState.includes(':') && i8021xProtocol.includes(':')) {\n        i8021x.state = i8021xState.split(':').pop();\n        i8021x.protocol = i8021xProtocol.split(':').pop();\n      }\n    } catch (error) {\n      // console.log('Error getting wireless information:', error);\n      if (error.status === 1 && error.stdout.includes('AutoConfig')) {\n        i8021x.state = 'Disabled';\n        i8021x.protocol = 'Not defined';\n      }\n\n      return i8021x;\n    }\n  }\n\n  return i8021x;\n}\n\nfunction splitSectionsNics(lines) {\n  const result = [];\n  let section = [];\n  lines.forEach(function (line) {\n    if (!line.startsWith('\\t') && !line.startsWith(' ')) {\n      if (section.length) {\n        result.push(section);\n        section = [];\n      }\n    }\n\n    section.push(line);\n  });\n\n  if (section.length) {\n    result.push(section);\n  }\n\n  return result;\n}\n\nfunction parseLinesDarwinNics(sections) {\n  let nics = [];\n  sections.forEach(section => {\n    let nic = {\n      iface: '',\n      mtu: null,\n      mac: '',\n      ip6: '',\n      ip4: '',\n      speed: null,\n      type: '',\n      operstate: '',\n      duplex: '',\n      internal: false\n    };\n    const first = section[0];\n    nic.iface = first.split(':')[0].trim();\n    let parts = first.split('> mtu');\n    nic.mtu = parts.length > 1 ? parseInt(parts[1], 10) : null;\n\n    if (isNaN(nic.mtu)) {\n      nic.mtu = null;\n    }\n\n    nic.internal = parts[0].toLowerCase().indexOf('loopback') > -1;\n    section.forEach(line => {\n      if (line.trim().startsWith('ether ')) {\n        nic.mac = line.split('ether ')[1].toLowerCase().trim();\n      }\n\n      if (line.trim().startsWith('inet6 ') && !nic.ip6) {\n        nic.ip6 = line.split('inet6 ')[1].toLowerCase().split('%')[0].split(' ')[0];\n      }\n\n      if (line.trim().startsWith('inet ') && !nic.ip4) {\n        nic.ip4 = line.split('inet ')[1].toLowerCase().split(' ')[0];\n      }\n    });\n    let speed = util.getValue(section, 'link rate');\n    nic.speed = speed ? parseFloat(speed) : null;\n\n    if (nic.speed === null) {\n      speed = util.getValue(section, 'uplink rate');\n      nic.speed = speed ? parseFloat(speed) : null;\n\n      if (nic.speed !== null && speed.toLowerCase().indexOf('gbps') >= 0) {\n        nic.speed = nic.speed * 1000;\n      }\n    } else {\n      if (speed.toLowerCase().indexOf('gbps') >= 0) {\n        nic.speed = nic.speed * 1000;\n      }\n    }\n\n    nic.type = util.getValue(section, 'type').toLowerCase().indexOf('wi-fi') > -1 ? 'wireless' : 'wired';\n    nic.operstate = util.getValue(section, 'status').toLowerCase().indexOf('active') > -1 ? 'up' : 'down';\n    nic.duplex = util.getValue(section, 'media').toLowerCase().indexOf('half-duplex') > -1 ? 'half' : 'full';\n\n    if (nic.ip6 || nic.ip4 || nic.mac) {\n      nics.push(nic);\n    }\n  });\n  return nics;\n}\n\nfunction getDarwinNics() {\n  const cmd = '/sbin/ifconfig -v';\n\n  try {\n    // console.log('SYNC - Nics darwin 12');\n    const lines = execSync(cmd, {\n      maxBuffer: 1024 * 20000\n    }).toString().split('\\n');\n    const nsections = splitSectionsNics(lines);\n    return parseLinesDarwinNics(nsections);\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction getLinuxIfaceConnectionName(interfaceName) {\n  const cmd = `nmcli device status 2>/dev/null | grep ${interfaceName}`;\n\n  try {\n    const result = execSync(cmd).toString();\n    const resultFormat = result.replace(/\\s+/g, ' ').trim();\n    const connectionNameLines = resultFormat.split(' ').slice(3);\n    const connectionName = connectionNameLines.join(' ');\n    return connectionName != '--' ? connectionName : '';\n  } catch (e) {\n    return '';\n  }\n}\n\nfunction checkLinuxDCHPInterfaces(file) {\n  let result = [];\n\n  try {\n    let cmd = `cat ${file} 2> /dev/null | grep 'iface\\\\|source'`;\n    const lines = execSync(cmd, {\n      maxBuffer: 1024 * 20000\n    }).toString().split('\\n');\n    lines.forEach(line => {\n      const parts = line.replace(/\\s+/g, ' ').trim().split(' ');\n\n      if (parts.length >= 4) {\n        if (line.toLowerCase().indexOf(' inet ') >= 0 && line.toLowerCase().indexOf('dhcp') >= 0) {\n          result.push(parts[1]);\n        }\n      }\n\n      if (line.toLowerCase().includes('source')) {\n        let file = line.split(' ')[1];\n        result = result.concat(checkLinuxDCHPInterfaces(file));\n      }\n    });\n  } catch (e) {\n    util.noop();\n  }\n\n  return result;\n}\n\nfunction getLinuxDHCPNics() {\n  // alternate methods getting interfaces using DHCP\n  let cmd = 'ip a 2> /dev/null';\n  let result = [];\n\n  try {\n    const lines = execSync(cmd, {\n      maxBuffer: 1024 * 20000\n    }).toString().split('\\n');\n    const nsections = splitSectionsNics(lines);\n    result = parseLinuxDHCPNics(nsections);\n  } catch (e) {\n    util.noop();\n  }\n\n  try {\n    result = checkLinuxDCHPInterfaces('/etc/network/interfaces');\n  } catch (e) {\n    util.noop();\n  }\n\n  return result;\n}\n\nfunction parseLinuxDHCPNics(sections) {\n  const result = [];\n\n  if (sections && sections.length) {\n    sections.forEach(lines => {\n      if (lines && lines.length) {\n        const parts = lines[0].split(':');\n\n        if (parts.length > 2) {\n          for (let line of lines) {\n            if (line.indexOf(' inet ') >= 0 && line.indexOf(' dynamic ') >= 0) {\n              const parts2 = line.split(' ');\n              const nic = parts2[parts2.length - 1].trim();\n              result.push(nic);\n              break;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  return result;\n}\n\nfunction getLinuxIfaceDHCPstatus(iface, connectionName, DHCPNics) {\n  let result = false;\n\n  if (connectionName) {\n    const cmd = `nmcli connection show \"${connectionName}\" 2>/dev/null | grep ipv4.method;`;\n\n    try {\n      const lines = execSync(cmd).toString();\n      const resultFormat = lines.replace(/\\s+/g, ' ').trim();\n      let dhcStatus = resultFormat.split(' ').slice(1).toString();\n\n      switch (dhcStatus) {\n        case 'auto':\n          result = true;\n          break;\n\n        default:\n          result = false;\n          break;\n      }\n\n      return result;\n    } catch (e) {\n      return DHCPNics.indexOf(iface) >= 0;\n    }\n  } else {\n    return DHCPNics.indexOf(iface) >= 0;\n  }\n}\n\nfunction getDarwinIfaceDHCPstatus(iface) {\n  let result = false;\n  const cmd = `ipconfig getpacket \"${iface}\" 2>/dev/null | grep lease_time;`;\n\n  try {\n    // console.log('SYNC - DHCP status darwin 17');\n    const lines = execSync(cmd).toString().split('\\n');\n\n    if (lines.length && lines[0].startsWith('lease_time')) {\n      result = true;\n    }\n  } catch (e) {\n    util.noop();\n  }\n\n  return result;\n}\n\nfunction getLinuxIfaceDNSsuffix(connectionName) {\n  if (connectionName) {\n    const cmd = `nmcli connection show \"${connectionName}\" 2>/dev/null | grep ipv4.dns-search;`;\n\n    try {\n      const result = execSync(cmd).toString();\n      const resultFormat = result.replace(/\\s+/g, ' ').trim();\n      const dnsSuffix = resultFormat.split(' ').slice(1).toString();\n      return dnsSuffix == '--' ? 'Not defined' : dnsSuffix;\n    } catch (e) {\n      return 'Unknown';\n    }\n  } else {\n    return 'Unknown';\n  }\n}\n\nfunction getLinuxIfaceIEEE8021xAuth(connectionName) {\n  if (connectionName) {\n    const cmd = `nmcli connection show \"${connectionName}\" 2>/dev/null | grep 802-1x.eap;`;\n\n    try {\n      const result = execSync(cmd).toString();\n      const resultFormat = result.replace(/\\s+/g, ' ').trim();\n      const authenticationProtocol = resultFormat.split(' ').slice(1).toString();\n      return authenticationProtocol == '--' ? '' : authenticationProtocol;\n    } catch (e) {\n      return 'Not defined';\n    }\n  } else {\n    return 'Not defined';\n  }\n}\n\nfunction getLinuxIfaceIEEE8021xState(authenticationProtocol) {\n  if (authenticationProtocol) {\n    if (authenticationProtocol == 'Not defined') {\n      return 'Disabled';\n    }\n\n    return 'Enabled';\n  } else {\n    return 'Unknown';\n  }\n}\n\nfunction testVirtualNic(iface, ifaceName, mac) {\n  const virtualMacs = ['00:00:00:00:00:00', '00:03:FF', '00:05:69', '00:0C:29', '00:0F:4B', '00:0F:4B', '00:13:07', '00:13:BE', '00:15:5d', '00:16:3E', '00:1C:42', '00:21:F6', '00:21:F6', '00:24:0B', '00:24:0B', '00:50:56', '00:A0:B1', '00:E0:C8', '08:00:27', '0A:00:27', '18:92:2C', '16:DF:49', '3C:F3:92', '54:52:00', 'FC:15:97'];\n\n  if (mac) {\n    return virtualMacs.filter(item => {\n      return mac.toUpperCase().toUpperCase().startsWith(item.substr(0, mac.length));\n    }).length > 0 || iface.toLowerCase().indexOf(' virtual ') > -1 || ifaceName.toLowerCase().indexOf(' virtual ') > -1 || iface.toLowerCase().indexOf('vethernet ') > -1 || ifaceName.toLowerCase().indexOf('vethernet ') > -1 || iface.toLowerCase().startsWith('veth') || ifaceName.toLowerCase().startsWith('veth') || iface.toLowerCase().startsWith('vboxnet') || ifaceName.toLowerCase().startsWith('vboxnet');\n  } else {\n    return false;\n  }\n}\n\nfunction networkInterfaces(callback, rescan, defaultString) {\n  if (typeof callback === 'string') {\n    defaultString = callback;\n    rescan = true;\n    callback = null;\n  }\n\n  if (typeof callback === 'boolean') {\n    rescan = callback;\n    callback = null;\n    defaultString = '';\n  }\n\n  if (typeof rescan === 'undefined') {\n    rescan = true;\n  }\n\n  defaultString = defaultString || '';\n  defaultString = '' + defaultString;\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let ifaces = os.networkInterfaces();\n      let result = [];\n      let nics = [];\n      let dnsSuffixes = [];\n      let nics8021xInfo = []; // seperate handling in OSX\n\n      if (_darwin || _freebsd || _openbsd || _netbsd) {\n        if (JSON.stringify(ifaces) === JSON.stringify(_ifaces) && !rescan) {\n          // no changes - just return object\n          result = _networkInterfaces;\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        } else {\n          const defaultInterface = getDefaultNetworkInterface();\n          _ifaces = JSON.parse(JSON.stringify(ifaces));\n          nics = getDarwinNics();\n          nics.forEach(nic => {\n            if ({}.hasOwnProperty.call(ifaces, nic.iface)) {\n              ifaces[nic.iface].forEach(function (details) {\n                if (details.family === 'IPv4' || details.family === 4) {\n                  nic.ip4subnet = details.netmask;\n                }\n\n                if (details.family === 'IPv6' || details.family === 6) {\n                  nic.ip6subnet = details.netmask;\n                }\n              });\n            }\n\n            result.push({\n              iface: nic.iface,\n              ifaceName: nic.iface,\n              default: nic.iface === defaultInterface,\n              ip4: nic.ip4,\n              ip4subnet: nic.ip4subnet || '',\n              ip6: nic.ip6,\n              ip6subnet: nic.ip6subnet || '',\n              mac: nic.mac,\n              internal: nic.internal,\n              virtual: nic.internal ? false : testVirtualNic(nic.iface, nic.iface, nic.mac),\n              operstate: nic.operstate,\n              type: nic.type,\n              duplex: nic.duplex,\n              mtu: nic.mtu,\n              speed: nic.speed,\n              dhcp: getDarwinIfaceDHCPstatus(nic.iface),\n              dnsSuffix: '',\n              ieee8021xAuth: '',\n              ieee8021xState: '',\n              carrierChanges: 0\n            });\n          });\n          _networkInterfaces = result;\n\n          if (defaultString.toLowerCase().indexOf('default') >= 0) {\n            result = result.filter(item => item.default);\n\n            if (result.length > 0) {\n              result = result[0];\n            } else {\n              result = [];\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n\n      if (_linux) {\n        if (JSON.stringify(ifaces) === JSON.stringify(_ifaces) && !rescan) {\n          // no changes - just return object\n          result = _networkInterfaces;\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        } else {\n          _ifaces = JSON.parse(JSON.stringify(ifaces));\n          _dhcpNics = getLinuxDHCPNics();\n          const defaultInterface = getDefaultNetworkInterface();\n\n          for (let dev in ifaces) {\n            let ip4 = '';\n            let ip4subnet = '';\n            let ip6 = '';\n            let ip6subnet = '';\n            let mac = '';\n            let duplex = '';\n            let mtu = '';\n            let speed = null;\n            let carrierChanges = 0;\n            let dhcp = false;\n            let dnsSuffix = '';\n            let ieee8021xAuth = '';\n            let ieee8021xState = '';\n            let type = '';\n\n            if ({}.hasOwnProperty.call(ifaces, dev)) {\n              let ifaceName = dev;\n              ifaces[dev].forEach(function (details) {\n                if (details.family === 'IPv4' || details.family === 4) {\n                  ip4 = details.address;\n                  ip4subnet = details.netmask;\n                }\n\n                if (details.family === 'IPv6' || details.family === 6) {\n                  if (!ip6 || ip6.match(/^fe80::/i)) {\n                    ip6 = details.address;\n                    ip6subnet = details.netmask;\n                  }\n                }\n\n                mac = details.mac; // fallback due to https://github.com/nodejs/node/issues/13581 (node 8.1 - node 8.2)\n\n                const nodeMainVersion = parseInt(process.versions.node.split('.'), 10);\n\n                if (mac.indexOf('00:00:0') > -1 && (_linux || _darwin) && !details.internal && nodeMainVersion >= 8 && nodeMainVersion <= 11) {\n                  if (Object.keys(_mac).length === 0) {\n                    _mac = getMacAddresses();\n                  }\n\n                  mac = _mac[dev] || '';\n                }\n              });\n              let iface = dev.split(':')[0].trim().toLowerCase();\n              const cmd = `echo -n \"addr_assign_type: \"; cat /sys/class/net/${iface}/addr_assign_type 2>/dev/null; echo;\n            echo -n \"address: \"; cat /sys/class/net/${iface}/address 2>/dev/null; echo;\n            echo -n \"addr_len: \"; cat /sys/class/net/${iface}/addr_len 2>/dev/null; echo;\n            echo -n \"broadcast: \"; cat /sys/class/net/${iface}/broadcast 2>/dev/null; echo;\n            echo -n \"carrier: \"; cat /sys/class/net/${iface}/carrier 2>/dev/null; echo;\n            echo -n \"carrier_changes: \"; cat /sys/class/net/${iface}/carrier_changes 2>/dev/null; echo;\n            echo -n \"dev_id: \"; cat /sys/class/net/${iface}/dev_id 2>/dev/null; echo;\n            echo -n \"dev_port: \"; cat /sys/class/net/${iface}/dev_port 2>/dev/null; echo;\n            echo -n \"dormant: \"; cat /sys/class/net/${iface}/dormant 2>/dev/null; echo;\n            echo -n \"duplex: \"; cat /sys/class/net/${iface}/duplex 2>/dev/null; echo;\n            echo -n \"flags: \"; cat /sys/class/net/${iface}/flags 2>/dev/null; echo;\n            echo -n \"gro_flush_timeout: \"; cat /sys/class/net/${iface}/gro_flush_timeout 2>/dev/null; echo;\n            echo -n \"ifalias: \"; cat /sys/class/net/${iface}/ifalias 2>/dev/null; echo;\n            echo -n \"ifindex: \"; cat /sys/class/net/${iface}/ifindex 2>/dev/null; echo;\n            echo -n \"iflink: \"; cat /sys/class/net/${iface}/iflink 2>/dev/null; echo;\n            echo -n \"link_mode: \"; cat /sys/class/net/${iface}/link_mode 2>/dev/null; echo;\n            echo -n \"mtu: \"; cat /sys/class/net/${iface}/mtu 2>/dev/null; echo;\n            echo -n \"netdev_group: \"; cat /sys/class/net/${iface}/netdev_group 2>/dev/null; echo;\n            echo -n \"operstate: \"; cat /sys/class/net/${iface}/operstate 2>/dev/null; echo;\n            echo -n \"proto_down: \"; cat /sys/class/net/${iface}/proto_down 2>/dev/null; echo;\n            echo -n \"speed: \"; cat /sys/class/net/${iface}/speed 2>/dev/null; echo;\n            echo -n \"tx_queue_len: \"; cat /sys/class/net/${iface}/tx_queue_len 2>/dev/null; echo;\n            echo -n \"type: \"; cat /sys/class/net/${iface}/type 2>/dev/null; echo;\n            echo -n \"wireless: \"; cat /proc/net/wireless 2>/dev/null | grep ${iface}; echo;\n            echo -n \"wirelessspeed: \"; iw dev ${iface} link 2>&1 | grep bitrate; echo;`;\n              let lines = [];\n\n              try {\n                lines = execSync(cmd).toString().split('\\n');\n                const connectionName = getLinuxIfaceConnectionName(iface);\n                dhcp = getLinuxIfaceDHCPstatus(iface, connectionName, _dhcpNics);\n                dnsSuffix = getLinuxIfaceDNSsuffix(connectionName);\n                ieee8021xAuth = getLinuxIfaceIEEE8021xAuth(connectionName);\n                ieee8021xState = getLinuxIfaceIEEE8021xState(ieee8021xAuth);\n              } catch (e) {\n                util.noop();\n              }\n\n              duplex = util.getValue(lines, 'duplex');\n              duplex = duplex.startsWith('cat') ? '' : duplex;\n              mtu = parseInt(util.getValue(lines, 'mtu'), 10);\n              let myspeed = parseInt(util.getValue(lines, 'speed'), 10);\n              speed = isNaN(myspeed) ? null : myspeed;\n              let wirelessspeed = util.getValue(lines, 'wirelessspeed').split('tx bitrate: ');\n\n              if (speed === null && wirelessspeed.length === 2) {\n                myspeed = parseFloat(wirelessspeed[1]);\n                speed = isNaN(myspeed) ? null : myspeed;\n              }\n\n              carrierChanges = parseInt(util.getValue(lines, 'carrier_changes'), 10);\n              const operstate = util.getValue(lines, 'operstate');\n              type = operstate === 'up' ? util.getValue(lines, 'wireless').trim() ? 'wireless' : 'wired' : 'unknown';\n\n              if (iface === 'lo' || iface.startsWith('bond')) {\n                type = 'virtual';\n              }\n\n              let internal = ifaces[dev] && ifaces[dev][0] ? ifaces[dev][0].internal : false;\n\n              if (dev.toLowerCase().indexOf('loopback') > -1 || ifaceName.toLowerCase().indexOf('loopback') > -1) {\n                internal = true;\n              }\n\n              const virtual = internal ? false : testVirtualNic(dev, ifaceName, mac);\n              result.push({\n                iface,\n                ifaceName,\n                default: iface === defaultInterface,\n                ip4,\n                ip4subnet,\n                ip6,\n                ip6subnet,\n                mac,\n                internal,\n                virtual,\n                operstate,\n                type,\n                duplex,\n                mtu,\n                speed,\n                dhcp,\n                dnsSuffix,\n                ieee8021xAuth,\n                ieee8021xState,\n                carrierChanges\n              });\n            }\n          }\n\n          _networkInterfaces = result;\n\n          if (defaultString.toLowerCase().indexOf('default') >= 0) {\n            result = result.filter(item => item.default);\n\n            if (result.length > 0) {\n              result = result[0];\n            } else {\n              result = [];\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n\n      if (_windows) {\n        if (JSON.stringify(ifaces) === JSON.stringify(_ifaces) && !rescan) {\n          // no changes - just return object\n          result = _networkInterfaces;\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        } else {\n          _ifaces = JSON.parse(JSON.stringify(ifaces));\n          const defaultInterface = getDefaultNetworkInterface();\n          getWindowsNics().then(function (nics) {\n            nics.forEach(nic => {\n              let found = false;\n              Object.keys(ifaces).forEach(key => {\n                if (!found) {\n                  ifaces[key].forEach(value => {\n                    if (Object.keys(value).indexOf('mac') >= 0) {\n                      found = value['mac'] === nic.mac;\n                    }\n                  });\n                }\n              });\n\n              if (!found) {\n                ifaces[nic.name] = [{\n                  mac: nic.mac\n                }];\n              }\n            });\n            nics8021xInfo = getWindowsWiredProfilesInformation();\n            dnsSuffixes = getWindowsDNSsuffixes();\n\n            for (let dev in ifaces) {\n              let iface = dev;\n              let ip4 = '';\n              let ip4subnet = '';\n              let ip6 = '';\n              let ip6subnet = '';\n              let mac = '';\n              let duplex = '';\n              let mtu = '';\n              let speed = null;\n              let carrierChanges = 0;\n              let operstate = 'down';\n              let dhcp = false;\n              let dnsSuffix = '';\n              let ieee8021xAuth = '';\n              let ieee8021xState = '';\n              let type = '';\n\n              if ({}.hasOwnProperty.call(ifaces, dev)) {\n                let ifaceName = dev;\n                ifaces[dev].forEach(function (details) {\n                  if (details.family === 'IPv4' || details.family === 4) {\n                    ip4 = details.address;\n                    ip4subnet = details.netmask;\n                  }\n\n                  if (details.family === 'IPv6' || details.family === 6) {\n                    if (!ip6 || ip6.match(/^fe80::/i)) {\n                      ip6 = details.address;\n                      ip6subnet = details.netmask;\n                    }\n                  }\n\n                  mac = details.mac; // fallback due to https://github.com/nodejs/node/issues/13581 (node 8.1 - node 8.2)\n\n                  const nodeMainVersion = parseInt(process.versions.node.split('.'), 10);\n\n                  if (mac.indexOf('00:00:0') > -1 && (_linux || _darwin) && !details.internal && nodeMainVersion >= 8 && nodeMainVersion <= 11) {\n                    if (Object.keys(_mac).length === 0) {\n                      _mac = getMacAddresses();\n                    }\n\n                    mac = _mac[dev] || '';\n                  }\n                });\n                dnsSuffix = getWindowsIfaceDNSsuffix(dnsSuffixes.ifaces, dev);\n                let foundFirst = false;\n                nics.forEach(detail => {\n                  if (detail.mac === mac && !foundFirst) {\n                    iface = detail.iface || iface;\n                    ifaceName = detail.name;\n                    dhcp = detail.dhcp;\n                    operstate = detail.operstate;\n                    speed = detail.speed;\n                    type = detail.type;\n                    foundFirst = true;\n                  }\n                });\n\n                if (dev.toLowerCase().indexOf('wlan') >= 0 || ifaceName.toLowerCase().indexOf('wlan') >= 0 || ifaceName.toLowerCase().indexOf('802.11n') >= 0 || ifaceName.toLowerCase().indexOf('wireless') >= 0 || ifaceName.toLowerCase().indexOf('wi-fi') >= 0 || ifaceName.toLowerCase().indexOf('wifi') >= 0) {\n                  type = 'wireless';\n                }\n\n                const IEEE8021x = getWindowsIEEE8021x(type, dev, nics8021xInfo);\n                ieee8021xAuth = IEEE8021x.protocol;\n                ieee8021xState = IEEE8021x.state;\n                let internal = ifaces[dev] && ifaces[dev][0] ? ifaces[dev][0].internal : false;\n\n                if (dev.toLowerCase().indexOf('loopback') > -1 || ifaceName.toLowerCase().indexOf('loopback') > -1) {\n                  internal = true;\n                }\n\n                const virtual = internal ? false : testVirtualNic(dev, ifaceName, mac);\n                result.push({\n                  iface,\n                  ifaceName,\n                  default: iface === defaultInterface,\n                  ip4,\n                  ip4subnet,\n                  ip6,\n                  ip6subnet,\n                  mac,\n                  internal,\n                  virtual,\n                  operstate,\n                  type,\n                  duplex,\n                  mtu,\n                  speed,\n                  dhcp,\n                  dnsSuffix,\n                  ieee8021xAuth,\n                  ieee8021xState,\n                  carrierChanges\n                });\n              }\n            }\n\n            _networkInterfaces = result;\n\n            if (defaultString.toLowerCase().indexOf('default') >= 0) {\n              result = result.filter(item => item.default);\n\n              if (result.length > 0) {\n                result = result[0];\n              } else {\n                result = [];\n              }\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        }\n      }\n    });\n  });\n}\n\nexports.networkInterfaces = networkInterfaces; // --------------------------\n// NET - Speed\n\nfunction calcNetworkSpeed(iface, rx_bytes, tx_bytes, operstate, rx_dropped, rx_errors, tx_dropped, tx_errors) {\n  let result = {\n    iface,\n    operstate,\n    rx_bytes,\n    rx_dropped,\n    rx_errors,\n    tx_bytes,\n    tx_dropped,\n    tx_errors,\n    rx_sec: null,\n    tx_sec: null,\n    ms: 0\n  };\n\n  if (_network[iface] && _network[iface].ms) {\n    result.ms = Date.now() - _network[iface].ms;\n    result.rx_sec = rx_bytes - _network[iface].rx_bytes >= 0 ? (rx_bytes - _network[iface].rx_bytes) / (result.ms / 1000) : 0;\n    result.tx_sec = tx_bytes - _network[iface].tx_bytes >= 0 ? (tx_bytes - _network[iface].tx_bytes) / (result.ms / 1000) : 0;\n    _network[iface].rx_bytes = rx_bytes;\n    _network[iface].tx_bytes = tx_bytes;\n    _network[iface].rx_sec = result.rx_sec;\n    _network[iface].tx_sec = result.tx_sec;\n    _network[iface].ms = Date.now();\n    _network[iface].last_ms = result.ms;\n    _network[iface].operstate = operstate;\n  } else {\n    if (!_network[iface]) {\n      _network[iface] = {};\n    }\n\n    _network[iface].rx_bytes = rx_bytes;\n    _network[iface].tx_bytes = tx_bytes;\n    _network[iface].rx_sec = null;\n    _network[iface].tx_sec = null;\n    _network[iface].ms = Date.now();\n    _network[iface].last_ms = 0;\n    _network[iface].operstate = operstate;\n  }\n\n  return result;\n}\n\nfunction networkStats(ifaces, callback) {\n  let ifacesArray = [];\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      // fallback - if only callback is given\n      if (util.isFunction(ifaces) && !callback) {\n        callback = ifaces;\n        ifacesArray = [getDefaultNetworkInterface()];\n      } else {\n        if (typeof ifaces !== 'string' && ifaces !== undefined) {\n          if (callback) {\n            callback([]);\n          }\n\n          return resolve([]);\n        }\n\n        ifaces = ifaces || getDefaultNetworkInterface();\n        ifaces.__proto__.toLowerCase = util.stringToLower;\n        ifaces.__proto__.replace = util.stringReplace;\n        ifaces.__proto__.trim = util.stringTrim;\n        ifaces = ifaces.trim().toLowerCase().replace(/,+/g, '|');\n        ifacesArray = ifaces.split('|');\n      }\n\n      const result = [];\n      const workload = [];\n\n      if (ifacesArray.length && ifacesArray[0].trim() === '*') {\n        ifacesArray = [];\n        networkInterfaces(false).then(allIFaces => {\n          for (let iface of allIFaces) {\n            ifacesArray.push(iface.iface);\n          }\n\n          networkStats(ifacesArray.join(',')).then(result => {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        });\n      } else {\n        for (let iface of ifacesArray) {\n          workload.push(networkStatsSingle(iface.trim()));\n        }\n\n        if (workload.length) {\n          Promise.all(workload).then(data => {\n            if (callback) {\n              callback(data);\n            }\n\n            resolve(data);\n          });\n        } else {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nfunction networkStatsSingle(iface) {\n  function parseLinesWindowsPerfData(sections) {\n    let perfData = [];\n\n    for (let i in sections) {\n      if ({}.hasOwnProperty.call(sections, i)) {\n        if (sections[i].trim() !== '') {\n          let lines = sections[i].trim().split('\\r\\n');\n          perfData.push({\n            name: util.getValue(lines, 'Name', ':').replace(/[()[\\] ]+/g, '').replace('#', '_').toLowerCase(),\n            rx_bytes: parseInt(util.getValue(lines, 'BytesReceivedPersec', ':'), 10),\n            rx_errors: parseInt(util.getValue(lines, 'PacketsReceivedErrors', ':'), 10),\n            rx_dropped: parseInt(util.getValue(lines, 'PacketsReceivedDiscarded', ':'), 10),\n            tx_bytes: parseInt(util.getValue(lines, 'BytesSentPersec', ':'), 10),\n            tx_errors: parseInt(util.getValue(lines, 'PacketsOutboundErrors', ':'), 10),\n            tx_dropped: parseInt(util.getValue(lines, 'PacketsOutboundDiscarded', ':'), 10)\n          });\n        }\n      }\n    }\n\n    return perfData;\n  }\n\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let ifaceSanitized = '';\n      const s = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(iface);\n\n      for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n        if (!(s[i] === undefined)) {\n          ifaceSanitized = ifaceSanitized + s[i];\n        }\n      }\n\n      let result = {\n        iface: ifaceSanitized,\n        operstate: 'unknown',\n        rx_bytes: 0,\n        rx_dropped: 0,\n        rx_errors: 0,\n        tx_bytes: 0,\n        tx_dropped: 0,\n        tx_errors: 0,\n        rx_sec: null,\n        tx_sec: null,\n        ms: 0\n      };\n      let operstate = 'unknown';\n      let rx_bytes = 0;\n      let tx_bytes = 0;\n      let rx_dropped = 0;\n      let rx_errors = 0;\n      let tx_dropped = 0;\n      let tx_errors = 0;\n      let cmd, lines, stats;\n\n      if (!_network[ifaceSanitized] || _network[ifaceSanitized] && !_network[ifaceSanitized].ms || _network[ifaceSanitized] && _network[ifaceSanitized].ms && Date.now() - _network[ifaceSanitized].ms >= 500) {\n        if (_linux) {\n          if (fs.existsSync('/sys/class/net/' + ifaceSanitized)) {\n            cmd = 'cat /sys/class/net/' + ifaceSanitized + '/operstate; ' + 'cat /sys/class/net/' + ifaceSanitized + '/statistics/rx_bytes; ' + 'cat /sys/class/net/' + ifaceSanitized + '/statistics/tx_bytes; ' + 'cat /sys/class/net/' + ifaceSanitized + '/statistics/rx_dropped; ' + 'cat /sys/class/net/' + ifaceSanitized + '/statistics/rx_errors; ' + 'cat /sys/class/net/' + ifaceSanitized + '/statistics/tx_dropped; ' + 'cat /sys/class/net/' + ifaceSanitized + '/statistics/tx_errors; ';\n            exec(cmd, function (error, stdout) {\n              if (!error) {\n                lines = stdout.toString().split('\\n');\n                operstate = lines[0].trim();\n                rx_bytes = parseInt(lines[1], 10);\n                tx_bytes = parseInt(lines[2], 10);\n                rx_dropped = parseInt(lines[3], 10);\n                rx_errors = parseInt(lines[4], 10);\n                tx_dropped = parseInt(lines[5], 10);\n                tx_errors = parseInt(lines[6], 10);\n                result = calcNetworkSpeed(ifaceSanitized, rx_bytes, tx_bytes, operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n              }\n\n              resolve(result);\n            });\n          } else {\n            resolve(result);\n          }\n        }\n\n        if (_freebsd || _openbsd || _netbsd) {\n          cmd = 'netstat -ibndI ' + ifaceSanitized; // lgtm [js/shell-command-constructed-from-input]\n\n          exec(cmd, function (error, stdout) {\n            if (!error) {\n              lines = stdout.toString().split('\\n');\n\n              for (let i = 1; i < lines.length; i++) {\n                const line = lines[i].replace(/ +/g, ' ').split(' ');\n\n                if (line && line[0] && line[7] && line[10]) {\n                  rx_bytes = rx_bytes + parseInt(line[7]);\n\n                  if (line[6].trim() !== '-') {\n                    rx_dropped = rx_dropped + parseInt(line[6]);\n                  }\n\n                  if (line[5].trim() !== '-') {\n                    rx_errors = rx_errors + parseInt(line[5]);\n                  }\n\n                  tx_bytes = tx_bytes + parseInt(line[10]);\n\n                  if (line[12].trim() !== '-') {\n                    tx_dropped = tx_dropped + parseInt(line[12]);\n                  }\n\n                  if (line[9].trim() !== '-') {\n                    tx_errors = tx_errors + parseInt(line[9]);\n                  }\n\n                  operstate = 'up';\n                }\n              }\n\n              result = calcNetworkSpeed(ifaceSanitized, rx_bytes, tx_bytes, operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n            }\n\n            resolve(result);\n          });\n        }\n\n        if (_darwin) {\n          cmd = 'ifconfig ' + ifaceSanitized + ' | grep \"status\"'; // lgtm [js/shell-command-constructed-from-input]\n\n          exec(cmd, function (error, stdout) {\n            result.operstate = (stdout.toString().split(':')[1] || '').trim();\n            result.operstate = (result.operstate || '').toLowerCase();\n            result.operstate = result.operstate === 'active' ? 'up' : result.operstate === 'inactive' ? 'down' : 'unknown';\n            cmd = 'netstat -bdI ' + ifaceSanitized; // lgtm [js/shell-command-constructed-from-input]\n\n            exec(cmd, function (error, stdout) {\n              if (!error) {\n                lines = stdout.toString().split('\\n'); // if there is less than 2 lines, no information for this interface was found\n\n                if (lines.length > 1 && lines[1].trim() !== '') {\n                  // skip header line\n                  // use the second line because it is tied to the NIC instead of the ipv4 or ipv6 address\n                  stats = lines[1].replace(/ +/g, ' ').split(' ');\n                  const offset = stats.length > 11 ? 1 : 0;\n                  rx_bytes = parseInt(stats[offset + 5]);\n                  rx_dropped = parseInt(stats[offset + 10]);\n                  rx_errors = parseInt(stats[offset + 4]);\n                  tx_bytes = parseInt(stats[offset + 8]);\n                  tx_dropped = parseInt(stats[offset + 10]);\n                  tx_errors = parseInt(stats[offset + 7]);\n                  result = calcNetworkSpeed(ifaceSanitized, rx_bytes, tx_bytes, result.operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n                }\n              }\n\n              resolve(result);\n            });\n          });\n        }\n\n        if (_windows) {\n          let perfData = [];\n          let ifaceName = ifaceSanitized; // Performance Data\n\n          util.powerShell('Get-WmiObject Win32_PerfRawData_Tcpip_NetworkInterface | select Name,BytesReceivedPersec,PacketsReceivedErrors,PacketsReceivedDiscarded,BytesSentPersec,PacketsOutboundErrors,PacketsOutboundDiscarded | fl').then((stdout, error) => {\n            if (!error) {\n              const psections = stdout.toString().split(/\\n\\s*\\n/);\n              perfData = parseLinesWindowsPerfData(psections);\n            } // Network Interfaces\n\n\n            networkInterfaces(false).then(interfaces => {\n              // get bytes sent, received from perfData by name\n              rx_bytes = 0;\n              tx_bytes = 0;\n              perfData.forEach(detail => {\n                interfaces.forEach(det => {\n                  if ((det.iface.toLowerCase() === ifaceSanitized.toLowerCase() || det.mac.toLowerCase() === ifaceSanitized.toLowerCase() || det.ip4.toLowerCase() === ifaceSanitized.toLowerCase() || det.ip6.toLowerCase() === ifaceSanitized.toLowerCase() || det.ifaceName.replace(/[()[\\] ]+/g, '').replace('#', '_').toLowerCase() === ifaceSanitized.replace(/[()[\\] ]+/g, '').replace('#', '_').toLowerCase()) && det.ifaceName.replace(/[()[\\] ]+/g, '').replace('#', '_').toLowerCase() === detail.name) {\n                    ifaceName = det.iface;\n                    rx_bytes = detail.rx_bytes;\n                    rx_dropped = detail.rx_dropped;\n                    rx_errors = detail.rx_errors;\n                    tx_bytes = detail.tx_bytes;\n                    tx_dropped = detail.tx_dropped;\n                    tx_errors = detail.tx_errors;\n                    operstate = det.operstate;\n                  }\n                });\n              });\n\n              if (rx_bytes && tx_bytes) {\n                result = calcNetworkSpeed(ifaceName, parseInt(rx_bytes), parseInt(tx_bytes), operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n              }\n\n              resolve(result);\n            });\n          });\n        }\n      } else {\n        result.rx_bytes = _network[ifaceSanitized].rx_bytes;\n        result.tx_bytes = _network[ifaceSanitized].tx_bytes;\n        result.rx_sec = _network[ifaceSanitized].rx_sec;\n        result.tx_sec = _network[ifaceSanitized].tx_sec;\n        result.ms = _network[ifaceSanitized].last_ms;\n        result.operstate = _network[ifaceSanitized].operstate;\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.networkStats = networkStats; // --------------------------\n// NET - connections (sockets)\n\nfunction networkConnections(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = [];\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'export LC_ALL=C; netstat -tunap | grep \"ESTABLISHED\\\\|SYN_SENT\\\\|SYN_RECV\\\\|FIN_WAIT1\\\\|FIN_WAIT2\\\\|TIME_WAIT\\\\|CLOSE\\\\|CLOSE_WAIT\\\\|LAST_ACK\\\\|LISTEN\\\\|CLOSING\\\\|UNKNOWN\"; unset LC_ALL';\n\n        if (_freebsd || _openbsd || _netbsd) {\n          cmd = 'export LC_ALL=C; netstat -na | grep \"ESTABLISHED\\\\|SYN_SENT\\\\|SYN_RECV\\\\|FIN_WAIT1\\\\|FIN_WAIT2\\\\|TIME_WAIT\\\\|CLOSE\\\\|CLOSE_WAIT\\\\|LAST_ACK\\\\|LISTEN\\\\|CLOSING\\\\|UNKNOWN\"; unset LC_ALL';\n        }\n\n        exec(cmd, {\n          maxBuffer: 1024 * 20000\n        }, function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n\n          if (!error && (lines.length > 1 || lines[0] != '')) {\n            lines.forEach(function (line) {\n              line = line.replace(/ +/g, ' ').split(' ');\n\n              if (line.length >= 7) {\n                let localip = line[3];\n                let localport = '';\n                let localaddress = line[3].split(':');\n\n                if (localaddress.length > 1) {\n                  localport = localaddress[localaddress.length - 1];\n                  localaddress.pop();\n                  localip = localaddress.join(':');\n                }\n\n                let peerip = line[4];\n                let peerport = '';\n                let peeraddress = line[4].split(':');\n\n                if (peeraddress.length > 1) {\n                  peerport = peeraddress[peeraddress.length - 1];\n                  peeraddress.pop();\n                  peerip = peeraddress.join(':');\n                }\n\n                let connstate = line[5]; // if (connstate === 'VERBUNDEN') connstate = 'ESTABLISHED';\n\n                let proc = line[6].split('/');\n\n                if (connstate) {\n                  result.push({\n                    protocol: line[0],\n                    localAddress: localip,\n                    localPort: localport,\n                    peerAddress: peerip,\n                    peerPort: peerport,\n                    state: connstate,\n                    pid: proc[0] && proc[0] !== '-' ? parseInt(proc[0], 10) : null,\n                    process: proc[1] ? proc[1].split(' ')[0] : ''\n                  });\n                }\n              }\n            });\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          } else {\n            cmd = 'ss -tunap | grep \"ESTAB\\\\|SYN-SENT\\\\|SYN-RECV\\\\|FIN-WAIT1\\\\|FIN-WAIT2\\\\|TIME-WAIT\\\\|CLOSE\\\\|CLOSE-WAIT\\\\|LAST-ACK\\\\|LISTEN\\\\|CLOSING\"';\n            exec(cmd, {\n              maxBuffer: 1024 * 20000\n            }, function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                lines.forEach(function (line) {\n                  line = line.replace(/ +/g, ' ').split(' ');\n\n                  if (line.length >= 6) {\n                    let localip = line[4];\n                    let localport = '';\n                    let localaddress = line[4].split(':');\n\n                    if (localaddress.length > 1) {\n                      localport = localaddress[localaddress.length - 1];\n                      localaddress.pop();\n                      localip = localaddress.join(':');\n                    }\n\n                    let peerip = line[5];\n                    let peerport = '';\n                    let peeraddress = line[5].split(':');\n\n                    if (peeraddress.length > 1) {\n                      peerport = peeraddress[peeraddress.length - 1];\n                      peeraddress.pop();\n                      peerip = peeraddress.join(':');\n                    }\n\n                    let connstate = line[1];\n\n                    if (connstate === 'ESTAB') {\n                      connstate = 'ESTABLISHED';\n                    }\n\n                    if (connstate === 'TIME-WAIT') {\n                      connstate = 'TIME_WAIT';\n                    }\n\n                    let pid = null;\n                    let process = '';\n\n                    if (line.length >= 7 && line[6].indexOf('users:') > -1) {\n                      let proc = line[6].replace('users:((\"', '').replace(/\"/g, '').split(',');\n\n                      if (proc.length > 2) {\n                        process = proc[0].split(' ')[0];\n                        pid = parseInt(proc[1], 10);\n                      }\n                    }\n\n                    if (connstate) {\n                      result.push({\n                        protocol: line[0],\n                        localAddress: localip,\n                        localPort: localport,\n                        peerAddress: peerip,\n                        peerPort: peerport,\n                        state: connstate,\n                        pid,\n                        process\n                      });\n                    }\n                  }\n                });\n              }\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            });\n          }\n        });\n      }\n\n      if (_darwin) {\n        let cmd = 'netstat -natv | grep \"ESTABLISHED\\\\|SYN_SENT\\\\|SYN_RECV\\\\|FIN_WAIT1\\\\|FIN_WAIT2\\\\|TIME_WAIT\\\\|CLOSE\\\\|CLOSE_WAIT\\\\|LAST_ACK\\\\|LISTEN\\\\|CLOSING\\\\|UNKNOWN\"';\n        exec(cmd, {\n          maxBuffer: 1024 * 20000\n        }, function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            lines.forEach(function (line) {\n              line = line.replace(/ +/g, ' ').split(' ');\n\n              if (line.length >= 8) {\n                let localip = line[3];\n                let localport = '';\n                let localaddress = line[3].split('.');\n\n                if (localaddress.length > 1) {\n                  localport = localaddress[localaddress.length - 1];\n                  localaddress.pop();\n                  localip = localaddress.join('.');\n                }\n\n                let peerip = line[4];\n                let peerport = '';\n                let peeraddress = line[4].split('.');\n\n                if (peeraddress.length > 1) {\n                  peerport = peeraddress[peeraddress.length - 1];\n                  peeraddress.pop();\n                  peerip = peeraddress.join('.');\n                }\n\n                let connstate = line[5];\n                let pid = parseInt(line[8], 10);\n\n                if (connstate) {\n                  result.push({\n                    protocol: line[0],\n                    localAddress: localip,\n                    localPort: localport,\n                    peerAddress: peerip,\n                    peerPort: peerport,\n                    state: connstate,\n                    pid: pid,\n                    process: ''\n                  });\n                }\n              }\n            });\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n        });\n      }\n\n      if (_windows) {\n        let cmd = 'netstat -nao';\n\n        try {\n          exec(cmd, util.execOptsWin, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\r\\n');\n              lines.forEach(function (line) {\n                line = line.trim().replace(/ +/g, ' ').split(' ');\n\n                if (line.length >= 4) {\n                  let localip = line[1];\n                  let localport = '';\n                  let localaddress = line[1].split(':');\n\n                  if (localaddress.length > 1) {\n                    localport = localaddress[localaddress.length - 1];\n                    localaddress.pop();\n                    localip = localaddress.join(':');\n                  }\n\n                  let peerip = line[2];\n                  let peerport = '';\n                  let peeraddress = line[2].split(':');\n\n                  if (peeraddress.length > 1) {\n                    peerport = peeraddress[peeraddress.length - 1];\n                    peeraddress.pop();\n                    peerip = peeraddress.join(':');\n                  }\n\n                  let pid = util.toInt(line[4]);\n                  let connstate = line[3];\n\n                  if (connstate === 'HERGESTELLT') {\n                    connstate = 'ESTABLISHED';\n                  }\n\n                  if (connstate.startsWith('ABH')) {\n                    connstate = 'LISTEN';\n                  }\n\n                  if (connstate === 'SCHLIESSEN_WARTEN') {\n                    connstate = 'CLOSE_WAIT';\n                  }\n\n                  if (connstate === 'WARTEND') {\n                    connstate = 'TIME_WAIT';\n                  }\n\n                  if (connstate === 'SYN_GESENDET') {\n                    connstate = 'SYN_SENT';\n                  }\n\n                  if (connstate === 'LISTENING') {\n                    connstate = 'LISTEN';\n                  }\n\n                  if (connstate === 'SYN_RECEIVED') {\n                    connstate = 'SYN_RECV';\n                  }\n\n                  if (connstate === 'FIN_WAIT_1') {\n                    connstate = 'FIN_WAIT1';\n                  }\n\n                  if (connstate === 'FIN_WAIT_2') {\n                    connstate = 'FIN_WAIT2';\n                  }\n\n                  if (connstate) {\n                    result.push({\n                      protocol: line[0].toLowerCase(),\n                      localAddress: localip,\n                      localPort: localport,\n                      peerAddress: peerip,\n                      peerPort: peerport,\n                      state: connstate,\n                      pid,\n                      process: ''\n                    });\n                  }\n                }\n              });\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.networkConnections = networkConnections;\n\nfunction networkGatewayDefault(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = '';\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'ip route get 1';\n\n        try {\n          exec(cmd, {\n            maxBuffer: 1024 * 20000\n          }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              const line = lines && lines[0] ? lines[0] : '';\n              let parts = line.split(' via ');\n\n              if (parts && parts[1]) {\n                parts = parts[1].split(' ');\n                result = parts[0];\n              }\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n\n      if (_darwin) {\n        let cmd = 'route -n get default';\n\n        try {\n          exec(cmd, {\n            maxBuffer: 1024 * 20000\n          }, function (error, stdout) {\n            if (!error) {\n              const lines = stdout.toString().split('\\n').map(line => line.trim());\n              result = util.getValue(lines, 'gateway');\n            }\n\n            if (!result) {\n              cmd = 'netstat -rn | awk \\'/default/ {print $2}\\'';\n              exec(cmd, {\n                maxBuffer: 1024 * 20000\n              }, function (error, stdout) {\n                const lines = stdout.toString().split('\\n').map(line => line.trim());\n                result = lines.find(line => /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(line));\n\n                if (callback) {\n                  callback(result);\n                }\n\n                resolve(result);\n              });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n\n      if (_windows) {\n        try {\n          exec('netstat -r', util.execOptsWin, function (error, stdout) {\n            const lines = stdout.toString().split(os.EOL);\n            lines.forEach(line => {\n              line = line.replace(/\\s+/g, ' ').trim();\n\n              if (line.indexOf('0.0.0.0 0.0.0.0') > -1 && !/[a-zA-Z]/.test(line)) {\n                const parts = line.split(' ');\n\n                if (parts.length >= 5 && parts[parts.length - 3].indexOf('.') > -1) {\n                  result = parts[parts.length - 3];\n                }\n              }\n            });\n\n            if (!result) {\n              util.powerShell('Get-CimInstance -ClassName Win32_IP4RouteTable | Where-Object { $_.Destination -eq \\'0.0.0.0\\' -and $_.Mask -eq \\'0.0.0.0\\' }').then(data => {\n                let lines = data.toString().split('\\r\\n');\n\n                if (lines.length > 1 && !result) {\n                  result = util.getValue(lines, 'NextHop');\n\n                  if (callback) {\n                    callback(result);\n                  }\n\n                  resolve(result); // } else {\n                  //   exec('ipconfig', util.execOptsWin, function (error, stdout) {\n                  //     let lines = stdout.toString().split('\\r\\n');\n                  //     lines.forEach(function (line) {\n                  //       line = line.trim().replace(/\\. /g, '');\n                  //       line = line.trim().replace(/ +/g, '');\n                  //       const parts = line.split(':');\n                  //       if ((parts[0].toLowerCase().startsWith('standardgate') || parts[0].toLowerCase().indexOf('gateway') > -1 || parts[0].toLowerCase().indexOf('enlace') > -1) && parts[1]) {\n                  //         result = parts[1];\n                  //       }\n                  //     });\n                  //     if (callback) { callback(result); }\n                  //     resolve(result);\n                  //   });\n                }\n              });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.networkGatewayDefault = networkGatewayDefault;","'use strict'; // @ts-check\n// ==================================================================================\n// osinfo.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 3. Operating System\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\n\nconst fs = require('fs');\n\nconst util = require('./util');\n\nconst exec = require('child_process').exec;\n\nconst execSync = require('child_process').execSync; // const execPromise = util.promisify(require('child_process').exec);\n\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos'; // --------------------------\n// Get current time and OS uptime\n\n\nfunction time() {\n  let t = new Date().toString().split(' ');\n  return {\n    current: Date.now(),\n    uptime: os.uptime(),\n    timezone: t.length >= 7 ? t[5] : '',\n    timezoneName: Intl ? Intl.DateTimeFormat().resolvedOptions().timeZone : t.length >= 7 ? t.slice(6).join(' ').replace(/\\(/g, '').replace(/\\)/g, '') : ''\n  };\n}\n\nexports.time = time; // --------------------------\n// Get logo filename of OS distribution\n\nfunction getLogoFile(distro) {\n  distro = distro || '';\n  distro = distro.toLowerCase();\n  let result = _platform;\n\n  if (_windows) {\n    result = 'windows';\n  } else if (distro.indexOf('mac os') !== -1) {\n    result = 'apple';\n  } else if (distro.indexOf('arch') !== -1) {\n    result = 'arch';\n  } else if (distro.indexOf('centos') !== -1) {\n    result = 'centos';\n  } else if (distro.indexOf('coreos') !== -1) {\n    result = 'coreos';\n  } else if (distro.indexOf('debian') !== -1) {\n    result = 'debian';\n  } else if (distro.indexOf('deepin') !== -1) {\n    result = 'deepin';\n  } else if (distro.indexOf('elementary') !== -1) {\n    result = 'elementary';\n  } else if (distro.indexOf('fedora') !== -1) {\n    result = 'fedora';\n  } else if (distro.indexOf('gentoo') !== -1) {\n    result = 'gentoo';\n  } else if (distro.indexOf('mageia') !== -1) {\n    result = 'mageia';\n  } else if (distro.indexOf('mandriva') !== -1) {\n    result = 'mandriva';\n  } else if (distro.indexOf('manjaro') !== -1) {\n    result = 'manjaro';\n  } else if (distro.indexOf('mint') !== -1) {\n    result = 'mint';\n  } else if (distro.indexOf('mx') !== -1) {\n    result = 'mx';\n  } else if (distro.indexOf('openbsd') !== -1) {\n    result = 'openbsd';\n  } else if (distro.indexOf('freebsd') !== -1) {\n    result = 'freebsd';\n  } else if (distro.indexOf('opensuse') !== -1) {\n    result = 'opensuse';\n  } else if (distro.indexOf('pclinuxos') !== -1) {\n    result = 'pclinuxos';\n  } else if (distro.indexOf('puppy') !== -1) {\n    result = 'puppy';\n  } else if (distro.indexOf('raspbian') !== -1) {\n    result = 'raspbian';\n  } else if (distro.indexOf('reactos') !== -1) {\n    result = 'reactos';\n  } else if (distro.indexOf('redhat') !== -1) {\n    result = 'redhat';\n  } else if (distro.indexOf('slackware') !== -1) {\n    result = 'slackware';\n  } else if (distro.indexOf('sugar') !== -1) {\n    result = 'sugar';\n  } else if (distro.indexOf('steam') !== -1) {\n    result = 'steam';\n  } else if (distro.indexOf('suse') !== -1) {\n    result = 'suse';\n  } else if (distro.indexOf('mate') !== -1) {\n    result = 'ubuntu-mate';\n  } else if (distro.indexOf('lubuntu') !== -1) {\n    result = 'lubuntu';\n  } else if (distro.indexOf('xubuntu') !== -1) {\n    result = 'xubuntu';\n  } else if (distro.indexOf('ubuntu') !== -1) {\n    result = 'ubuntu';\n  } else if (distro.indexOf('solaris') !== -1) {\n    result = 'solaris';\n  } else if (distro.indexOf('tails') !== -1) {\n    result = 'tails';\n  } else if (distro.indexOf('feren') !== -1) {\n    result = 'ferenos';\n  } else if (distro.indexOf('robolinux') !== -1) {\n    result = 'robolinux';\n  } else if (_linux && distro) {\n    result = distro.toLowerCase().trim().replace(/\\s+/g, '-');\n  }\n\n  return result;\n} // --------------------------\n// FQDN\n\n\nfunction getFQDN() {\n  let fqdn = os.hostname;\n\n  if (_linux || _darwin) {\n    try {\n      const stdout = execSync('hostname -f');\n      fqdn = stdout.toString().split(os.EOL)[0];\n    } catch (e) {\n      util.noop();\n    }\n  }\n\n  if (_freebsd || _openbsd || _netbsd) {\n    try {\n      const stdout = execSync('hostname');\n      fqdn = stdout.toString().split(os.EOL)[0];\n    } catch (e) {\n      util.noop();\n    }\n  }\n\n  if (_windows) {\n    try {\n      const stdout = execSync('echo %COMPUTERNAME%.%USERDNSDOMAIN%', util.execOptsWin);\n      fqdn = stdout.toString().replace('.%USERDNSDOMAIN%', '').split(os.EOL)[0];\n    } catch (e) {\n      util.noop();\n    }\n  }\n\n  return fqdn;\n} // --------------------------\n// OS Information\n\n\nfunction osInfo(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = {\n        platform: _platform === 'win32' ? 'Windows' : _platform,\n        distro: 'unknown',\n        release: 'unknown',\n        codename: '',\n        kernel: os.release(),\n        arch: os.arch(),\n        hostname: os.hostname(),\n        fqdn: getFQDN(),\n        codepage: '',\n        logofile: '',\n        serial: '',\n        build: '',\n        servicepack: '',\n        uefi: false\n      };\n\n      if (_linux) {\n        exec('cat /etc/*-release; cat /usr/lib/os-release; cat /etc/openwrt_release', function (error, stdout) {\n          //if (!error) {\n\n          /**\n           * @namespace\n           * @property {string}  DISTRIB_ID\n           * @property {string}  NAME\n           * @property {string}  DISTRIB_RELEASE\n           * @property {string}  VERSION_ID\n           * @property {string}  DISTRIB_CODENAME\n           */\n          let release = {};\n          let lines = stdout.toString().split('\\n');\n          lines.forEach(function (line) {\n            if (line.indexOf('=') !== -1) {\n              release[line.split('=')[0].trim().toUpperCase()] = line.split('=')[1].trim();\n            }\n          });\n          let releaseVersion = (release.VERSION || '').replace(/\"/g, '');\n          let codename = (release.DISTRIB_CODENAME || release.VERSION_CODENAME || '').replace(/\"/g, '');\n\n          if (releaseVersion.indexOf('(') >= 0) {\n            codename = releaseVersion.split('(')[1].replace(/[()]/g, '').trim();\n            releaseVersion = releaseVersion.split('(')[0].trim();\n          }\n\n          result.distro = (release.DISTRIB_ID || release.NAME || 'unknown').replace(/\"/g, '');\n          result.logofile = getLogoFile(result.distro);\n          result.release = (releaseVersion || release.DISTRIB_RELEASE || release.VERSION_ID || 'unknown').replace(/\"/g, '');\n          result.codename = codename;\n          result.codepage = util.getCodepage();\n          result.build = (release.BUILD_ID || '').replace(/\"/g, '').trim();\n          isUefiLinux().then(uefi => {\n            result.uefi = uefi;\n            uuid().then(data => {\n              result.serial = data.os;\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            });\n          }); //}\n        });\n      }\n\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('sysctl kern.ostype kern.osrelease kern.osrevision kern.hostuuid machdep.bootmethod', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            result.distro = util.getValue(lines, 'kern.ostype');\n            result.logofile = getLogoFile(result.distro);\n            result.release = util.getValue(lines, 'kern.osrelease').split('-')[0];\n            result.serial = util.getValue(lines, 'kern.uuid');\n            result.codename = '';\n            result.codepage = util.getCodepage();\n            result.uefi = util.getValue(lines, 'machdep.bootmethod').toLowerCase().indexOf('uefi') >= 0;\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('sw_vers; sysctl kern.ostype kern.osrelease kern.osrevision kern.uuid', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.serial = util.getValue(lines, 'kern.uuid');\n          result.distro = util.getValue(lines, 'ProductName');\n          result.release = util.getValue(lines, 'ProductVersion');\n          result.build = util.getValue(lines, 'BuildVersion');\n          result.logofile = getLogoFile(result.distro);\n          result.codename = 'macOS';\n          result.codename = result.release.indexOf('10.4') > -1 ? 'Mac OS X Tiger' : result.codename;\n          result.codename = result.release.indexOf('10.4') > -1 ? 'Mac OS X Tiger' : result.codename;\n          result.codename = result.release.indexOf('10.4') > -1 ? 'Mac OS X Tiger' : result.codename;\n          result.codename = result.release.indexOf('10.5') > -1 ? 'Mac OS X Leopard' : result.codename;\n          result.codename = result.release.indexOf('10.6') > -1 ? 'Mac OS X Snow Leopard' : result.codename;\n          result.codename = result.release.indexOf('10.7') > -1 ? 'Mac OS X Lion' : result.codename;\n          result.codename = result.release.indexOf('10.8') > -1 ? 'OS X Mountain Lion' : result.codename;\n          result.codename = result.release.indexOf('10.9') > -1 ? 'OS X Mavericks' : result.codename;\n          result.codename = result.release.indexOf('10.10') > -1 ? 'OS X Yosemite' : result.codename;\n          result.codename = result.release.indexOf('10.11') > -1 ? 'OS X El Capitan' : result.codename;\n          result.codename = result.release.indexOf('10.12') > -1 ? 'macOS Sierra' : result.codename;\n          result.codename = result.release.indexOf('10.13') > -1 ? 'macOS High Sierra' : result.codename;\n          result.codename = result.release.indexOf('10.14') > -1 ? 'macOS Mojave' : result.codename;\n          result.codename = result.release.indexOf('10.15') > -1 ? 'macOS Catalina' : result.codename;\n          result.codename = result.release.startsWith('11.') ? 'macOS Big Sur' : result.codename;\n          result.codename = result.release.startsWith('12.') ? 'macOS Monterey' : result.codename;\n          result.uefi = true;\n          result.codepage = util.getCodepage();\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        result.release = result.kernel;\n        exec('uname -o', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.distro = lines[0];\n          result.logofile = getLogoFile(result.distro);\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_windows) {\n        result.logofile = getLogoFile();\n        result.release = result.kernel;\n\n        try {\n          const workload = [];\n          workload.push(util.powerShell('Get-WmiObject Win32_OperatingSystem | select Caption,SerialNumber,BuildNumber,ServicePackMajorVersion,ServicePackMinorVersion | fl')); // workload.push(execPromise('systeminfo', util.execOptsWin));\n          // workload.push(util.powerShell('Get-ComputerInfo -property \"HyperV*\"'));\n\n          workload.push(util.powerShell('(Get-CimInstance Win32_ComputerSystem).HypervisorPresent'));\n          workload.push(util.powerShell('Add-Type -AssemblyName System.Windows.Forms; [System.Windows.Forms.SystemInformation]::TerminalServerSession'));\n          util.promiseAll(workload).then(data => {\n            let lines = data.results[0] ? data.results[0].toString().split('\\r\\n') : [''];\n            result.distro = util.getValue(lines, 'Caption', ':').trim();\n            result.serial = util.getValue(lines, 'SerialNumber', ':').trim();\n            result.build = util.getValue(lines, 'BuildNumber', ':').trim();\n            result.servicepack = util.getValue(lines, 'ServicePackMajorVersion', ':').trim() + '.' + util.getValue(lines, 'ServicePackMinorVersion', ':').trim();\n            result.codepage = util.getCodepage(); // const systeminfo = data.results[1] ? data.results[1].toString() : '';\n            // result.hypervisor = (systeminfo.indexOf('hypervisor has been detected') !== -1) || (systeminfo.indexOf('ein Hypervisor erkannt') !== -1) || (systeminfo.indexOf('Un hyperviseur a ') !== -1);\n            // const hyperv = data.results[1] ? data.results[1].toString().split('\\r\\n') : [];\n            // result.hypervisor = (util.getValue(hyperv, 'HyperVisorPresent').toLowerCase() === 'true');\n\n            const hyperv = data.results[1] ? data.results[1].toString().toLowerCase() : '';\n            result.hypervisor = hyperv.indexOf('true') !== -1;\n            const term = data.results[2] ? data.results[2].toString() : '';\n            result.remoteSession = term.toString().toLowerCase().indexOf('true') >= 0;\n            isUefiWindows().then(uefi => {\n              result.uefi = uefi;\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            });\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.osInfo = osInfo;\n\nfunction isUefiLinux() {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      fs.stat('/sys/firmware/efi', function (err) {\n        if (!err) {\n          return resolve(true);\n        } else {\n          exec('dmesg | grep -E \"EFI v\"', function (error, stdout) {\n            if (!error) {\n              const lines = stdout.toString().split('\\n');\n              return resolve(lines.length > 0);\n            }\n\n            return resolve(false);\n          });\n        }\n      });\n    });\n  });\n}\n\nfunction isUefiWindows() {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      try {\n        exec('findstr /C:\"Detected boot environment\" \"%windir%\\\\Panther\\\\setupact.log\"', util.execOptsWin, function (error, stdout) {\n          if (!error) {\n            const line = stdout.toString().split('\\n\\r')[0];\n            return resolve(line.toLowerCase().indexOf('efi') >= 0);\n          } else {\n            exec('echo %firmware_type%', util.execOptsWin, function (error, stdout) {\n              if (!error) {\n                const line = stdout.toString() || '';\n                return resolve(line.toLowerCase().indexOf('efi') >= 0);\n              } else {\n                return resolve(false);\n              }\n            });\n          }\n        });\n      } catch (e) {\n        return resolve(false);\n      }\n    });\n  });\n}\n\nfunction versions(apps, callback) {\n  let versionObject = {\n    kernel: os.release(),\n    openssl: '',\n    systemOpenssl: '',\n    systemOpensslLib: '',\n    node: process.versions.node,\n    v8: process.versions.v8,\n    npm: '',\n    yarn: '',\n    pm2: '',\n    gulp: '',\n    grunt: '',\n    git: '',\n    tsc: '',\n    mysql: '',\n    redis: '',\n    mongodb: '',\n    apache: '',\n    nginx: '',\n    php: '',\n    docker: '',\n    postfix: '',\n    postgresql: '',\n    perl: '',\n    python: '',\n    python3: '',\n    pip: '',\n    pip3: '',\n    java: '',\n    gcc: '',\n    virtualbox: '',\n    bash: '',\n    zsh: '',\n    fish: '',\n    powershell: '',\n    dotnet: ''\n  };\n\n  function checkVersionParam(apps) {\n    if (apps === '*') {\n      return {\n        versions: versionObject,\n        counter: 30\n      };\n    }\n\n    if (!Array.isArray(apps)) {\n      apps = apps.trim().toLowerCase().replace(/,+/g, '|').replace(/ /g, '|');\n      apps = apps.split('|');\n      const result = {\n        versions: {},\n        counter: 0\n      };\n      apps.forEach(el => {\n        if (el) {\n          for (let key in versionObject) {\n            if ({}.hasOwnProperty.call(versionObject, key)) {\n              if (key.toLowerCase() === el.toLowerCase() && !{}.hasOwnProperty.call(result.versions, key)) {\n                result.versions[key] = versionObject[key];\n\n                if (key === 'openssl') {\n                  result.versions.systemOpenssl = '';\n                  result.versions.systemOpensslLib = '';\n                }\n\n                if (!result.versions[key]) {\n                  result.counter++;\n                }\n              }\n            }\n          }\n        }\n      });\n      return result;\n    }\n  }\n\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      if (util.isFunction(apps) && !callback) {\n        callback = apps;\n        apps = '*';\n      } else {\n        apps = apps || '*';\n\n        if (typeof apps !== 'string') {\n          if (callback) {\n            callback({});\n          }\n\n          return resolve({});\n        }\n      }\n\n      const appsObj = checkVersionParam(apps);\n      let totalFunctions = appsObj.counter;\n\n      let functionProcessed = function () {\n        return function () {\n          if (--totalFunctions === 0) {\n            if (callback) {\n              callback(appsObj.versions);\n            }\n\n            resolve(appsObj.versions);\n          }\n        };\n      }();\n\n      let cmd = '';\n\n      try {\n        if ({}.hasOwnProperty.call(appsObj.versions, 'openssl')) {\n          appsObj.versions.openssl = process.versions.openssl;\n          exec('openssl version', function (error, stdout) {\n            if (!error) {\n              let openssl_string = stdout.toString().split('\\n')[0].trim();\n              let openssl = openssl_string.split(' ');\n              appsObj.versions.systemOpenssl = openssl.length > 0 ? openssl[1] : openssl[0];\n              appsObj.versions.systemOpensslLib = openssl.length > 0 ? openssl[0] : 'openssl';\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'npm')) {\n          exec('npm -v', function (error, stdout) {\n            if (!error) {\n              appsObj.versions.npm = stdout.toString().split('\\n')[0];\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'pm2')) {\n          cmd = 'pm2';\n\n          if (_windows) {\n            cmd += '.cmd';\n          }\n\n          exec(`${cmd} -v`, function (error, stdout) {\n            if (!error) {\n              let pm2 = stdout.toString().split('\\n')[0].trim();\n\n              if (!pm2.startsWith('[PM2]')) {\n                appsObj.versions.pm2 = pm2;\n              }\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'yarn')) {\n          exec('yarn --version', function (error, stdout) {\n            if (!error) {\n              appsObj.versions.yarn = stdout.toString().split('\\n')[0];\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'gulp')) {\n          cmd = 'gulp';\n\n          if (_windows) {\n            cmd += '.cmd';\n          }\n\n          exec(`${cmd} --version`, function (error, stdout) {\n            if (!error) {\n              const gulp = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.gulp = (gulp.toLowerCase().split('version')[1] || '').trim();\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'tsc')) {\n          cmd = 'tsc';\n\n          if (_windows) {\n            cmd += '.cmd';\n          }\n\n          exec(`${cmd} --version`, function (error, stdout) {\n            if (!error) {\n              const tsc = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.tsc = (tsc.toLowerCase().split('version')[1] || '').trim();\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'grunt')) {\n          cmd = 'grunt';\n\n          if (_windows) {\n            cmd += '.cmd';\n          }\n\n          exec(`${cmd} --version`, function (error, stdout) {\n            if (!error) {\n              const grunt = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.grunt = (grunt.toLowerCase().split('cli v')[1] || '').trim();\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'git')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/git') || fs.existsSync('/opt/homebrew/bin/git');\n\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('git --version', function (error, stdout) {\n                if (!error) {\n                  let git = stdout.toString().split('\\n')[0] || '';\n                  git = (git.toLowerCase().split('version')[1] || '').trim();\n                  appsObj.versions.git = (git.split(' ')[0] || '').trim();\n                }\n\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('git --version', function (error, stdout) {\n              if (!error) {\n                let git = stdout.toString().split('\\n')[0] || '';\n                git = (git.toLowerCase().split('version')[1] || '').trim();\n                appsObj.versions.git = (git.split(' ')[0] || '').trim();\n              }\n\n              functionProcessed();\n            });\n          }\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'apache')) {\n          exec('apachectl -v 2>&1', function (error, stdout) {\n            if (!error) {\n              const apache = (stdout.toString().split('\\n')[0] || '').split(':');\n              appsObj.versions.apache = apache.length > 1 ? apache[1].replace('Apache', '').replace('/', '').split('(')[0].trim() : '';\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'nginx')) {\n          exec('nginx -v 2>&1', function (error, stdout) {\n            if (!error) {\n              const nginx = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.nginx = (nginx.toLowerCase().split('/')[1] || '').trim();\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'mysql')) {\n          exec('mysql -V', function (error, stdout) {\n            if (!error) {\n              let mysql = stdout.toString().split('\\n')[0] || '';\n              mysql = mysql.toLowerCase();\n\n              if (mysql.indexOf(',') > -1) {\n                mysql = (mysql.split(',')[0] || '').trim();\n                const parts = mysql.split(' ');\n                appsObj.versions.mysql = (parts[parts.length - 1] || '').trim();\n              } else {\n                if (mysql.indexOf(' ver ') > -1) {\n                  mysql = mysql.split(' ver ')[1];\n                  appsObj.versions.mysql = mysql.split(' ')[0];\n                }\n              }\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'php')) {\n          exec('php -v', function (error, stdout) {\n            if (!error) {\n              const php = stdout.toString().split('\\n')[0] || '';\n              let parts = php.split('(');\n\n              if (parts[0].indexOf('-')) {\n                parts = parts[0].split('-');\n              }\n\n              appsObj.versions.php = parts[0].replace(/[^0-9.]/g, '');\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'redis')) {\n          exec('redis-server --version', function (error, stdout) {\n            if (!error) {\n              const redis = stdout.toString().split('\\n')[0] || '';\n              const parts = redis.split(' ');\n              appsObj.versions.redis = util.getValue(parts, 'v', '=', true);\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'docker')) {\n          exec('docker --version', function (error, stdout) {\n            if (!error) {\n              const docker = stdout.toString().split('\\n')[0] || '';\n              const parts = docker.split(' ');\n              appsObj.versions.docker = parts.length > 2 && parts[2].endsWith(',') ? parts[2].slice(0, -1) : '';\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'postfix')) {\n          exec('postconf -d | grep mail_version', function (error, stdout) {\n            if (!error) {\n              const postfix = stdout.toString().split('\\n') || [];\n              appsObj.versions.postfix = util.getValue(postfix, 'mail_version', '=', true);\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'mongodb')) {\n          exec('mongod --version', function (error, stdout) {\n            if (!error) {\n              const mongodb = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.mongodb = (mongodb.toLowerCase().split(',')[0] || '').replace(/[^0-9.]/g, '');\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'postgresql')) {\n          if (_linux) {\n            exec('locate bin/postgres', function (error, stdout) {\n              if (!error) {\n                const postgresqlBin = stdout.toString().split('\\n').sort();\n\n                if (postgresqlBin.length) {\n                  exec(postgresqlBin[postgresqlBin.length - 1] + ' -V', function (error, stdout) {\n                    if (!error) {\n                      const postgresql = stdout.toString().split('\\n')[0].split(' ') || [];\n                      appsObj.versions.postgresql = postgresql.length ? postgresql[postgresql.length - 1] : '';\n                    }\n\n                    functionProcessed();\n                  });\n                } else {\n                  functionProcessed();\n                }\n              } else {\n                exec('psql -V', function (error, stdout) {\n                  if (!error) {\n                    const postgresql = stdout.toString().split('\\n')[0].split(' ') || [];\n                    appsObj.versions.postgresql = postgresql.length ? postgresql[postgresql.length - 1] : '';\n                    appsObj.versions.postgresql = appsObj.versions.postgresql.split('-')[0];\n                  }\n\n                  functionProcessed();\n                });\n                functionProcessed();\n              }\n            });\n          } else {\n            if (_windows) {\n              util.powerShell('Get-WmiObject Win32_Service | select caption | fl').then(stdout => {\n                let serviceSections = stdout.split(/\\n\\s*\\n/);\n\n                for (let i = 0; i < serviceSections.length; i++) {\n                  if (serviceSections[i].trim() !== '') {\n                    let lines = serviceSections[i].trim().split('\\r\\n');\n                    let srvCaption = util.getValue(lines, 'caption', ':', true).toLowerCase();\n\n                    if (srvCaption.indexOf('postgresql') > -1) {\n                      const parts = srvCaption.split(' server ');\n\n                      if (parts.length > 1) {\n                        appsObj.versions.postgresql = parts[1];\n                      }\n                    }\n                  }\n                }\n\n                functionProcessed();\n              });\n            } else {\n              exec('postgres -V', function (error, stdout) {\n                if (!error) {\n                  const postgresql = stdout.toString().split('\\n')[0].split(' ') || [];\n                  appsObj.versions.postgresql = postgresql.length ? postgresql[postgresql.length - 1] : '';\n                }\n\n                functionProcessed();\n              });\n            }\n          }\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'perl')) {\n          exec('perl -v', function (error, stdout) {\n            if (!error) {\n              const perl = stdout.toString().split('\\n') || '';\n\n              while (perl.length > 0 && perl[0].trim() === '') {\n                perl.shift();\n              }\n\n              if (perl.length > 0) {\n                appsObj.versions.perl = perl[0].split('(').pop().split(')')[0].replace('v', '');\n              }\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'python')) {\n          if (_darwin) {\n            const stdout = execSync('sw_vers');\n            const lines = stdout.toString().split('\\n');\n            const osVersion = util.getValue(lines, 'ProductVersion', ':');\n            const gitHomebrewExists1 = fs.existsSync('/usr/local/Cellar/python');\n            const gitHomebrewExists2 = fs.existsSync('/opt/homebrew/bin/python');\n\n            if (util.darwinXcodeExists() && util.semverCompare('12.0.1', osVersion) < 0 || gitHomebrewExists1 || gitHomebrewExists2) {\n              const cmd = gitHomebrewExists1 ? '/usr/local/Cellar/python -V 2>&1' : gitHomebrewExists2 ? '/opt/homebrew/bin/python -V 2>&1' : 'python -V 2>&1';\n              exec(cmd, function (error, stdout) {\n                if (!error) {\n                  const python = stdout.toString().split('\\n')[0] || '';\n                  appsObj.versions.python = python.toLowerCase().replace('python', '').trim();\n                }\n\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('python -V 2>&1', function (error, stdout) {\n              if (!error) {\n                const python = stdout.toString().split('\\n')[0] || '';\n                appsObj.versions.python = python.toLowerCase().replace('python', '').trim();\n              }\n\n              functionProcessed();\n            });\n          }\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'python3')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/python3') || fs.existsSync('/opt/homebrew/bin/python3');\n\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('python3 -V 2>&1', function (error, stdout) {\n                if (!error) {\n                  const python = stdout.toString().split('\\n')[0] || '';\n                  appsObj.versions.python3 = python.toLowerCase().replace('python', '').trim();\n                }\n\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('python3 -V 2>&1', function (error, stdout) {\n              if (!error) {\n                const python = stdout.toString().split('\\n')[0] || '';\n                appsObj.versions.python3 = python.toLowerCase().replace('python', '').trim();\n              }\n\n              functionProcessed();\n            });\n          }\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'pip')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/pip') || fs.existsSync('/opt/homebrew/bin/pip');\n\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('pip -V 2>&1', function (error, stdout) {\n                if (!error) {\n                  const pip = stdout.toString().split('\\n')[0] || '';\n                  const parts = pip.split(' ');\n                  appsObj.versions.pip = parts.length >= 2 ? parts[1] : '';\n                }\n\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('pip -V 2>&1', function (error, stdout) {\n              if (!error) {\n                const pip = stdout.toString().split('\\n')[0] || '';\n                const parts = pip.split(' ');\n                appsObj.versions.pip = parts.length >= 2 ? parts[1] : '';\n              }\n\n              functionProcessed();\n            });\n          }\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'pip3')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/pip3') || fs.existsSync('/opt/homebrew/bin/pip3');\n\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('pip3 -V 2>&1', function (error, stdout) {\n                if (!error) {\n                  const pip = stdout.toString().split('\\n')[0] || '';\n                  const parts = pip.split(' ');\n                  appsObj.versions.pip3 = parts.length >= 2 ? parts[1] : '';\n                }\n\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('pip3 -V 2>&1', function (error, stdout) {\n              if (!error) {\n                const pip = stdout.toString().split('\\n')[0] || '';\n                const parts = pip.split(' ');\n                appsObj.versions.pip3 = parts.length >= 2 ? parts[1] : '';\n              }\n\n              functionProcessed();\n            });\n          }\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'java')) {\n          if (_darwin) {\n            // check if any JVM is installed but avoid dialog box that Java needs to be installed\n            exec('/usr/libexec/java_home -V 2>&1', function (error, stdout) {\n              if (!error && stdout.toString().toLowerCase().indexOf('no java runtime') === -1) {\n                // now this can be done savely\n                exec('java -version 2>&1', function (error, stdout) {\n                  if (!error) {\n                    const java = stdout.toString().split('\\n')[0] || '';\n                    const parts = java.split('\"');\n                    appsObj.versions.java = parts.length === 3 ? parts[1].trim() : '';\n                  }\n\n                  functionProcessed();\n                });\n              } else {\n                functionProcessed();\n              }\n            });\n          } else {\n            exec('java -version 2>&1', function (error, stdout) {\n              if (!error) {\n                const java = stdout.toString().split('\\n')[0] || '';\n                const parts = java.split('\"');\n                appsObj.versions.java = parts.length === 3 ? parts[1].trim() : '';\n              }\n\n              functionProcessed();\n            });\n          }\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'gcc')) {\n          if (_darwin && util.darwinXcodeExists() || !_darwin) {\n            exec('gcc -dumpversion', function (error, stdout) {\n              if (!error) {\n                appsObj.versions.gcc = stdout.toString().split('\\n')[0].trim() || '';\n              }\n\n              if (appsObj.versions.gcc.indexOf('.') > -1) {\n                functionProcessed();\n              } else {\n                exec('gcc --version', function (error, stdout) {\n                  if (!error) {\n                    const gcc = stdout.toString().split('\\n')[0].trim();\n\n                    if (gcc.indexOf('gcc') > -1 && gcc.indexOf(')') > -1) {\n                      const parts = gcc.split(')');\n                      appsObj.versions.gcc = parts[1].trim() || appsObj.versions.gcc;\n                    }\n                  }\n\n                  functionProcessed();\n                });\n              }\n            });\n          } else {\n            functionProcessed();\n          }\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'virtualbox')) {\n          exec(util.getVboxmanage() + ' -v 2>&1', function (error, stdout) {\n            if (!error) {\n              const vbox = stdout.toString().split('\\n')[0] || '';\n              const parts = vbox.split('r');\n              appsObj.versions.virtualbox = parts[0];\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'bash')) {\n          exec('bash --version', function (error, stdout) {\n            if (!error) {\n              const line = stdout.toString().split('\\n')[0];\n              const parts = line.split(' version ');\n\n              if (parts.length > 1) {\n                appsObj.versions.bash = parts[1].split(' ')[0].split('(')[0];\n              }\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'zsh')) {\n          exec('zsh --version', function (error, stdout) {\n            if (!error) {\n              const line = stdout.toString().split('\\n')[0];\n              const parts = line.split('zsh ');\n\n              if (parts.length > 1) {\n                appsObj.versions.zsh = parts[1].split(' ')[0];\n              }\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'fish')) {\n          exec('fish --version', function (error, stdout) {\n            if (!error) {\n              const line = stdout.toString().split('\\n')[0];\n              const parts = line.split(' version ');\n\n              if (parts.length > 1) {\n                appsObj.versions.fish = parts[1].split(' ')[0];\n              }\n            }\n\n            functionProcessed();\n          });\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'powershell')) {\n          if (_windows) {\n            util.powerShell('$PSVersionTable').then(stdout => {\n              const lines = stdout.toString().split('\\n').map(line => line.replace(/ +/g, ' ').replace(/ +/g, ':'));\n              appsObj.versions.powershell = util.getValue(lines, 'psversion');\n              functionProcessed();\n            });\n          } else {\n            functionProcessed();\n          }\n        }\n\n        if ({}.hasOwnProperty.call(appsObj.versions, 'dotnet')) {\n          util.powerShell('gci \"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\" -recurse | gp -name Version,Release -EA 0 | where { $_.PSChildName -match \"^(?!S)\\\\p{L}\"} | select PSChildName, Version, Release').then(stdout => {\n            const lines = stdout.toString().split('\\r\\n');\n            let dotnet = '';\n            lines.forEach(line => {\n              line = line.replace(/ +/g, ' ');\n              const parts = line.split(' ');\n              dotnet = dotnet || (parts[0].toLowerCase().startsWith('client') && parts.length > 2 ? parts[1].trim() : parts[0].toLowerCase().startsWith('full') && parts.length > 2 ? parts[1].trim() : '');\n            });\n            appsObj.versions.dotnet = dotnet.trim();\n            functionProcessed();\n          });\n        }\n      } catch (e) {\n        if (callback) {\n          callback(appsObj.versions);\n        }\n\n        resolve(appsObj.versions);\n      }\n    });\n  });\n}\n\nexports.versions = versions;\n\nfunction shell(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      if (_windows) {\n        resolve('cmd');\n      } else {\n        let result = '';\n        exec('echo $SHELL', function (error, stdout) {\n          if (!error) {\n            result = stdout.toString().split('\\n')[0];\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n    });\n  });\n}\n\nexports.shell = shell;\n\nfunction getUniqueMacAdresses() {\n  const ifaces = os.networkInterfaces();\n  let macs = [];\n\n  for (let dev in ifaces) {\n    if ({}.hasOwnProperty.call(ifaces, dev)) {\n      ifaces[dev].forEach(function (details) {\n        if (details && details.mac && details.mac !== '00:00:00:00:00:00') {\n          const mac = details.mac.toLowerCase();\n\n          if (macs.indexOf(mac) === -1) {\n            macs.push(mac);\n          }\n        }\n      });\n    }\n  }\n\n  macs = macs.sort(function (a, b) {\n    if (a < b) {\n      return -1;\n    }\n\n    if (a > b) {\n      return 1;\n    }\n\n    return 0;\n  });\n  return macs;\n}\n\nfunction uuid(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = {\n        os: '',\n        hardware: '',\n        macs: getUniqueMacAdresses()\n      };\n      let parts;\n\n      if (_darwin) {\n        exec('system_profiler SPHardwareDataType -json', function (error, stdout) {\n          if (!error) {\n            try {\n              const jsonObj = JSON.parse(stdout.toString());\n\n              if (jsonObj.SPHardwareDataType && jsonObj.SPHardwareDataType.length > 0) {\n                const spHardware = jsonObj.SPHardwareDataType[0]; // result.os = parts.length > 1 ? parts[1].trim().toLowerCase() : '';\n\n                result.os = spHardware.platform_UUID.toLowerCase();\n                result.hardware = spHardware.serial_number;\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_linux) {\n        const cmd = `echo -n \"os: \"; cat /var/lib/dbus/machine-id 2> /dev/null; echo;\necho -n \"os: \"; cat /etc/machine-id 2> /dev/null; echo;\necho -n \"hardware: \"; cat /sys/class/dmi/id/product_uuid 2> /dev/null; echo;`;\n        exec(cmd, function (error, stdout) {\n          const lines = stdout.toString().split('\\n');\n          result.os = util.getValue(lines, 'os').toLowerCase();\n          result.hardware = util.getValue(lines, 'hardware').toLowerCase();\n\n          if (!result.hardware) {\n            const lines = fs.readFileSync('/proc/cpuinfo', {\n              encoding: 'utf8'\n            }).toString().split('\\n');\n            const serial = util.getValue(lines, 'serial');\n            result.hardware = serial || '';\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('sysctl -i kern.hostid kern.hostuuid', function (error, stdout) {\n          const lines = stdout.toString().split('\\n');\n          result.os = util.getValue(lines, 'kern.hostid', ':').toLowerCase();\n          result.hardware = util.getValue(lines, 'kern.hostuuid', ':').toLowerCase();\n\n          if (result.os.indexOf('unknown') >= 0) {\n            result.os = '';\n          }\n\n          if (result.hardware.indexOf('unknown') >= 0) {\n            result.hardware = '';\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_windows) {\n        let sysdir = '%windir%\\\\System32';\n\n        if (process.arch === 'ia32' && Object.prototype.hasOwnProperty.call(process.env, 'PROCESSOR_ARCHITEW6432')) {\n          sysdir = '%windir%\\\\sysnative\\\\cmd.exe /c %windir%\\\\System32';\n        }\n\n        util.powerShell('Get-WmiObject Win32_ComputerSystemProduct | select UUID | fl').then(stdout => {\n          // let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0)[0].trim().split(/\\s\\s+/);\n          let lines = stdout.split('\\r\\n');\n          result.hardware = util.getValue(lines, 'uuid', ':').toLowerCase();\n          exec(`${sysdir}\\\\reg query \"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Cryptography\" /v MachineGuid`, util.execOptsWin, function (error, stdout) {\n            parts = stdout.toString().split('\\n\\r')[0].split('REG_SZ');\n            result.os = parts.length > 1 ? parts[1].replace(/\\r+|\\n+|\\s+/ig, '').toLowerCase() : '';\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        });\n      }\n    });\n  });\n}\n\nexports.uuid = uuid;","'use strict'; // @ts-check\n// ==================================================================================\n// printers.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 15. printers\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec; // const execSync = require('child_process').execSync;\n\n\nconst util = require('./util'); // const fs = require('fs');\n\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos';\n\nconst winPrinterStatus = {\n  1: 'Other',\n  2: 'Unknown',\n  3: 'Idle',\n  4: 'Printing',\n  5: 'Warmup',\n  6: 'Stopped Printing',\n  7: 'Offline'\n};\n\nfunction parseLinuxCupsHeader(lines) {\n  const result = {};\n\n  if (lines && lines.length) {\n    if (lines[0].indexOf(' CUPS v') > 0) {\n      const parts = lines[0].split(' CUPS v');\n      result.cupsVersion = parts[1];\n    }\n  }\n\n  return result;\n}\n\nfunction parseLinuxCupsPrinter(lines) {\n  const result = {};\n  const printerId = util.getValue(lines, 'PrinterId', ' ');\n  result.id = printerId ? parseInt(printerId, 10) : null;\n  result.name = util.getValue(lines, 'Info', ' ');\n  result.model = lines.length > 0 && lines[0] ? lines[0].split(' ')[0] : '';\n  result.uri = util.getValue(lines, 'DeviceURI', ' ');\n  result.uuid = util.getValue(lines, 'UUID', ' ');\n  result.status = util.getValue(lines, 'State', ' ');\n  result.local = util.getValue(lines, 'Location', ' ').toLowerCase().startsWith('local');\n  result.default = null;\n  result.shared = util.getValue(lines, 'Shared', ' ').toLowerCase().startsWith('yes');\n  return result;\n}\n\nfunction parseLinuxLpstatPrinter(lines, id) {\n  const result = {};\n  result.id = id;\n  result.name = util.getValue(lines, 'Description', ':', true);\n  result.model = lines.length > 0 && lines[0] ? lines[0].split(' ')[0] : '';\n  result.uri = null;\n  result.uuid = null;\n  result.status = lines.length > 0 && lines[0] ? lines[0].indexOf(' idle') > 0 ? 'idle' : lines[0].indexOf(' printing') > 0 ? 'printing' : 'unknown' : null;\n  result.local = util.getValue(lines, 'Location', ':', true).toLowerCase().startsWith('local');\n  result.default = null;\n  result.shared = util.getValue(lines, 'Shared', ' ').toLowerCase().startsWith('yes');\n  return result;\n}\n\nfunction parseDarwinPrinters(printerObject, id) {\n  const result = {};\n  const uriParts = printerObject.uri.split('/');\n  result.id = id;\n  result.name = printerObject._name;\n  result.model = uriParts.length ? uriParts[uriParts.length - 1] : '';\n  result.uri = printerObject.uri;\n  result.uuid = null;\n  result.status = printerObject.status;\n  result.local = printerObject.printserver === 'local';\n  result.default = printerObject.default === 'yes';\n  result.shared = printerObject.shared === 'yes';\n  return result;\n}\n\nfunction parseWindowsPrinters(lines, id) {\n  const result = {};\n  const status = parseInt(util.getValue(lines, 'PrinterStatus', ':'), 10);\n  result.id = id;\n  result.name = util.getValue(lines, 'name', ':');\n  result.model = util.getValue(lines, 'DriverName', ':');\n  result.uri = null;\n  result.uuid = null;\n  result.status = winPrinterStatus[status] ? winPrinterStatus[status] : null;\n  result.local = util.getValue(lines, 'Local', ':').toUpperCase() === 'TRUE';\n  result.default = util.getValue(lines, 'Default', ':').toUpperCase() === 'TRUE';\n  result.shared = util.getValue(lines, 'Shared', ':').toUpperCase() === 'TRUE';\n  return result;\n}\n\nfunction printer(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = [];\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'cat /etc/cups/printers.conf 2>/dev/null';\n        exec(cmd, function (error, stdout) {\n          // printers.conf\n          if (!error) {\n            const parts = stdout.toString().split('<Printer ');\n            const printerHeader = parseLinuxCupsHeader(parts[0]);\n\n            for (let i = 1; i < parts.length; i++) {\n              const printers = parseLinuxCupsPrinter(parts[i].split('\\n'));\n\n              if (printers.name) {\n                printers.engine = 'CUPS';\n                printers.engineVersion = printerHeader.cupsVersion;\n                result.push(printers);\n              }\n            }\n          }\n\n          if (result.length === 0) {\n            if (_linux) {\n              cmd = 'export LC_ALL=C; lpstat -lp 2>/dev/null; unset LC_ALL'; // lpstat\n\n              exec(cmd, function (error, stdout) {\n                const parts = ('\\n' + stdout.toString()).split('\\nprinter ');\n\n                for (let i = 1; i < parts.length; i++) {\n                  const printers = parseLinuxLpstatPrinter(parts[i].split('\\n'), i);\n                  result.push(printers);\n                }\n              });\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          } else {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n        });\n      }\n\n      if (_darwin) {\n        let cmd = 'system_profiler SPPrintersDataType -json';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            try {\n              const outObj = JSON.parse(stdout.toString());\n\n              if (outObj.SPPrintersDataType && outObj.SPPrintersDataType.length) {\n                for (let i = 0; i < outObj.SPPrintersDataType.length; i++) {\n                  const printer = parseDarwinPrinters(outObj.SPPrintersDataType[i], i);\n                  result.push(printer);\n                }\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_windows) {\n        util.powerShell('Get-WmiObject Win32_Printer | select PrinterStatus,Name,DriverName,Local,Default,Shared | fl').then((stdout, error) => {\n          if (!error) {\n            const parts = stdout.toString().split(/\\n\\s*\\n/);\n\n            for (let i = 0; i < parts.length; i++) {\n              const printer = parseWindowsPrinters(parts[i].split('\\n'), i);\n\n              if (printer.name || printer.model) {\n                result.push(parseWindowsPrinters(parts[i].split('\\n'), i));\n              }\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.printer = printer;","'use strict'; // @ts-check\n// ==================================================================================\n// processes.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 10. Processes\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst exec = require('child_process').exec;\n\nconst execSync = require('child_process').execSync;\n\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos';\n\nconst _processes_cpu = {\n  all: 0,\n  all_utime: 0,\n  all_stime: 0,\n  list: {},\n  ms: 0,\n  result: {}\n};\nconst _services_cpu = {\n  all: 0,\n  all_utime: 0,\n  all_stime: 0,\n  list: {},\n  ms: 0,\n  result: {}\n};\nconst _process_cpu = {\n  all: 0,\n  all_utime: 0,\n  all_stime: 0,\n  list: {},\n  ms: 0,\n  result: {}\n};\nconst _winStatusValues = {\n  '0': 'unknown',\n  '1': 'other',\n  '2': 'ready',\n  '3': 'running',\n  '4': 'blocked',\n  '5': 'suspended blocked',\n  '6': 'suspended ready',\n  '7': 'terminated',\n  '8': 'stopped',\n  '9': 'growing'\n};\n\nfunction parseTimeWin(time) {\n  time = time || '';\n\n  if (time) {\n    return time.substr(0, 4) + '-' + time.substr(4, 2) + '-' + time.substr(6, 2) + ' ' + time.substr(8, 2) + ':' + time.substr(10, 2) + ':' + time.substr(12, 2);\n  } else {\n    return '';\n  }\n}\n\nfunction parseTimeUnix(time) {\n  let result = time;\n  let parts = time.replace(/ +/g, ' ').split(' ');\n\n  if (parts.length === 5) {\n    result = parts[4] + '-' + ('0' + ('JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'.indexOf(parts[1].toUpperCase()) / 3 + 1)).slice(-2) + '-' + ('0' + parts[2]).slice(-2) + ' ' + parts[3];\n  }\n\n  return result;\n} // --------------------------\n// PS - services\n// pass a comma separated string with services to check (mysql, apache, postgresql, ...)\n// this function gives an array back, if the services are running.\n\n\nfunction services(srv, callback) {\n  // fallback - if only callback is given\n  if (util.isFunction(srv) && !callback) {\n    callback = srv;\n    srv = '';\n  }\n\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      if (typeof srv !== 'string') {\n        if (callback) {\n          callback([]);\n        }\n\n        return resolve([]);\n      }\n\n      if (srv) {\n        let srvString = '';\n        srvString.__proto__.toLowerCase = util.stringToLower;\n        srvString.__proto__.replace = util.stringReplace;\n        srvString.__proto__.trim = util.stringTrim;\n        const s = util.sanitizeShellString(srv);\n\n        for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n          if (!(s[i] === undefined)) {\n            srvString = srvString + s[i];\n          }\n        }\n\n        srvString = srvString.trim().toLowerCase().replace(/, /g, '|').replace(/,+/g, '|');\n\n        if (srvString === '') {\n          srvString = '*';\n        }\n\n        if (util.isPrototypePolluted() && srvString !== '*') {\n          srvString = '------';\n        }\n\n        let srvs = srvString.split('|');\n        let result = [];\n        let dataSrv = []; // let allSrv = [];\n\n        if (_linux || _freebsd || _openbsd || _netbsd || _darwin) {\n          if ((_linux || _freebsd || _openbsd || _netbsd) && srvString === '*') {\n            try {\n              const tmpsrv = execSync('systemctl --type=service --no-legend 2> /dev/null').toString().split('\\n');\n              srvs = [];\n\n              for (const s of tmpsrv) {\n                const name = s.split('.service')[0];\n\n                if (name) {\n                  srvs.push(name);\n                }\n              }\n\n              srvString = srvs.join('|');\n            } catch (d) {\n              try {\n                srvString = '';\n                const tmpsrv = execSync('service --status-all 2> /dev/null').toString().split('\\n');\n\n                for (const s of tmpsrv) {\n                  const parts = s.split(']');\n\n                  if (parts.length === 2) {\n                    srvString += (srvString !== '' ? '|' : '') + parts[1].trim(); // allSrv.push({ name: parts[1].trim(), running: parts[0].indexOf('+') > 0 });\n                  }\n                }\n\n                srvs = srvString.split('|');\n              } catch (e) {\n                try {\n                  const srvStr = execSync('ls /etc/init.d/ -m 2> /dev/null').toString().split('\\n').join('');\n                  srvString = '';\n\n                  if (srvStr) {\n                    const tmpsrv = srvStr.split(',');\n\n                    for (const s of tmpsrv) {\n                      const name = s.trim();\n\n                      if (name) {\n                        srvString += (srvString !== '' ? '|' : '') + name; // allSrv.push({ name: name, running: null });\n                      }\n                    }\n\n                    srvs = srvString.split('|');\n                  }\n                } catch (f) {\n                  // allSrv = [];\n                  srvString = '';\n                  srvs = [];\n                }\n              }\n            }\n          }\n\n          if (_darwin && srvString === '*') {\n            // service enumeration not yet suported on mac OS\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n\n          let args = _darwin ? ['-caxo', 'pcpu,pmem,pid,command'] : ['-axo', 'pcpu,pmem,pid,command'];\n\n          if (srvString !== '' && srvs.length > 0) {\n            util.execSafe('ps', args).then(stdout => {\n              if (stdout) {\n                let lines = stdout.replace(/ +/g, ' ').replace(/,+/g, '.').split('\\n');\n                srvs.forEach(function (srv) {\n                  let ps;\n\n                  if (_darwin) {\n                    ps = lines.filter(function (e) {\n                      return e.toLowerCase().indexOf(srv) !== -1;\n                    });\n                  } else {\n                    ps = lines.filter(function (e) {\n                      return e.toLowerCase().indexOf(' ' + srv + ':') !== -1 || e.toLowerCase().indexOf('/' + srv) !== -1;\n                    });\n                  } // let singleSrv = allSrv.filter(item => { return item.name === srv; });\n\n\n                  const pids = [];\n\n                  for (const p of ps) {\n                    const pid = p.trim().split(' ')[2];\n\n                    if (pid) {\n                      pids.push(parseInt(pid, 10));\n                    }\n                  }\n\n                  result.push({\n                    name: srv,\n                    //                    running: (allSrv.length && singleSrv.length && singleSrv[0].running !== null ? singleSrv[0].running : ps.length > 0),\n                    running: ps.length > 0,\n                    startmode: '',\n                    pids: pids,\n                    cpu: parseFloat(ps.reduce(function (pv, cv) {\n                      return pv + parseFloat(cv.trim().split(' ')[0]);\n                    }, 0).toFixed(2)),\n                    mem: parseFloat(ps.reduce(function (pv, cv) {\n                      return pv + parseFloat(cv.trim().split(' ')[1]);\n                    }, 0).toFixed(2))\n                  });\n                });\n\n                if (_linux) {\n                  // calc process_cpu - ps is not accurate in linux!\n                  let cmd = 'cat /proc/stat | grep \"cpu \"';\n\n                  for (let i in result) {\n                    for (let j in result[i].pids) {\n                      cmd += ';cat /proc/' + result[i].pids[j] + '/stat';\n                    }\n                  }\n\n                  exec(cmd, {\n                    maxBuffer: 1024 * 20000\n                  }, function (error, stdout) {\n                    let curr_processes = stdout.toString().split('\\n'); // first line (all - /proc/stat)\n\n                    let all = parseProcStat(curr_processes.shift()); // process\n\n                    let list_new = {};\n                    let resultProcess = {};\n\n                    for (let i = 0; i < curr_processes.length; i++) {\n                      resultProcess = calcProcStatLinux(curr_processes[i], all, _services_cpu);\n\n                      if (resultProcess.pid) {\n                        let listPos = -1;\n\n                        for (let i in result) {\n                          for (let j in result[i].pids) {\n                            if (parseInt(result[i].pids[j]) === parseInt(resultProcess.pid)) {\n                              listPos = i;\n                            }\n                          }\n                        }\n\n                        if (listPos >= 0) {\n                          result[listPos].cpu += resultProcess.cpuu + resultProcess.cpus;\n                        } // save new values\n\n\n                        list_new[resultProcess.pid] = {\n                          cpuu: resultProcess.cpuu,\n                          cpus: resultProcess.cpus,\n                          utime: resultProcess.utime,\n                          stime: resultProcess.stime,\n                          cutime: resultProcess.cutime,\n                          cstime: resultProcess.cstime\n                        };\n                      }\n                    } // store old values\n\n\n                    _services_cpu.all = all; // _services_cpu.list = list_new;\n\n                    _services_cpu.list = Object.assign({}, list_new);\n                    _services_cpu.ms = Date.now() - _services_cpu.ms; // _services_cpu.result = result;\n\n                    _services_cpu.result = Object.assign({}, result);\n\n                    if (callback) {\n                      callback(result);\n                    }\n\n                    resolve(result);\n                  });\n                } else {\n                  if (callback) {\n                    callback(result);\n                  }\n\n                  resolve(result);\n                }\n              } else {\n                args = ['-o', 'comm'];\n                util.execSafe('ps', args).then(stdout => {\n                  if (stdout) {\n                    let lines = stdout.replace(/ +/g, ' ').replace(/,+/g, '.').split('\\n');\n                    srvs.forEach(function (srv) {\n                      let ps = lines.filter(function (e) {\n                        return e.indexOf(srv) !== -1;\n                      });\n                      result.push({\n                        name: srv,\n                        running: ps.length > 0,\n                        startmode: '',\n                        cpu: 0,\n                        mem: 0\n                      });\n                    });\n\n                    if (callback) {\n                      callback(result);\n                    }\n\n                    resolve(result);\n                  } else {\n                    srvs.forEach(function (srv) {\n                      result.push({\n                        name: srv,\n                        running: false,\n                        startmode: '',\n                        cpu: 0,\n                        mem: 0\n                      });\n                    });\n\n                    if (callback) {\n                      callback(result);\n                    }\n\n                    resolve(result);\n                  }\n                });\n              }\n            });\n          } else {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n        }\n\n        if (_windows) {\n          try {\n            let wincommand = 'Get-WmiObject Win32_Service';\n\n            if (srvs[0] !== '*') {\n              wincommand += ' -Filter \"';\n\n              for (let i = 0; i < srvs.length; i++) {\n                wincommand += `Name='${srvs[i]}' or `;\n              }\n\n              wincommand = `${wincommand.slice(0, -4)}\"`;\n            }\n\n            wincommand += ' | select Name,Caption,Started,StartMode,ProcessId | fl';\n            util.powerShell(wincommand).then((stdout, error) => {\n              if (!error) {\n                let serviceSections = stdout.split(/\\n\\s*\\n/);\n\n                for (let i = 0; i < serviceSections.length; i++) {\n                  if (serviceSections[i].trim() !== '') {\n                    let lines = serviceSections[i].trim().split('\\r\\n');\n                    let srvName = util.getValue(lines, 'Name', ':', true).toLowerCase();\n                    let srvCaption = util.getValue(lines, 'Caption', ':', true).toLowerCase();\n                    let started = util.getValue(lines, 'Started', ':', true);\n                    let startMode = util.getValue(lines, 'StartMode', ':', true);\n                    let pid = util.getValue(lines, 'ProcessId', ':', true);\n\n                    if (srvString === '*' || srvs.indexOf(srvName) >= 0 || srvs.indexOf(srvCaption) >= 0) {\n                      result.push({\n                        name: srvName,\n                        running: started.toLowerCase() === 'true',\n                        startmode: startMode,\n                        pids: [pid],\n                        cpu: 0,\n                        mem: 0\n                      });\n                      dataSrv.push(srvName);\n                      dataSrv.push(srvCaption);\n                    }\n                  }\n                }\n\n                if (srvString !== '*') {\n                  let srvsMissing = srvs.filter(function (e) {\n                    return dataSrv.indexOf(e) === -1;\n                  });\n                  srvsMissing.forEach(function (srvName) {\n                    result.push({\n                      name: srvName,\n                      running: false,\n                      startmode: '',\n                      pids: [],\n                      cpu: 0,\n                      mem: 0\n                    });\n                  });\n                }\n\n                if (callback) {\n                  callback(result);\n                }\n\n                resolve(result);\n              } else {\n                srvs.forEach(function (srvName) {\n                  result.push({\n                    name: srvName,\n                    running: false,\n                    startmode: '',\n                    cpu: 0,\n                    mem: 0\n                  });\n                });\n\n                if (callback) {\n                  callback(result);\n                }\n\n                resolve(result);\n              }\n            });\n          } catch (e) {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n        }\n      } else {\n        if (callback) {\n          callback([]);\n        }\n\n        resolve([]);\n      }\n    });\n  });\n}\n\nexports.services = services;\n\nfunction parseProcStat(line) {\n  let parts = line.replace(/ +/g, ' ').split(' ');\n  let user = parts.length >= 2 ? parseInt(parts[1]) : 0;\n  let nice = parts.length >= 3 ? parseInt(parts[2]) : 0;\n  let system = parts.length >= 4 ? parseInt(parts[3]) : 0;\n  let idle = parts.length >= 5 ? parseInt(parts[4]) : 0;\n  let iowait = parts.length >= 6 ? parseInt(parts[5]) : 0;\n  let irq = parts.length >= 7 ? parseInt(parts[6]) : 0;\n  let softirq = parts.length >= 8 ? parseInt(parts[7]) : 0;\n  let steal = parts.length >= 9 ? parseInt(parts[8]) : 0;\n  let guest = parts.length >= 10 ? parseInt(parts[9]) : 0;\n  let guest_nice = parts.length >= 11 ? parseInt(parts[10]) : 0;\n  return user + nice + system + idle + iowait + irq + softirq + steal + guest + guest_nice;\n}\n\nfunction calcProcStatLinux(line, all, _cpu_old) {\n  let statparts = line.replace(/ +/g, ' ').split(')');\n\n  if (statparts.length >= 2) {\n    let parts = statparts[1].split(' ');\n\n    if (parts.length >= 16) {\n      let pid = parseInt(statparts[0].split(' ')[0]);\n      let utime = parseInt(parts[12]);\n      let stime = parseInt(parts[13]);\n      let cutime = parseInt(parts[14]);\n      let cstime = parseInt(parts[15]); // calc\n\n      let cpuu = 0;\n      let cpus = 0;\n\n      if (_cpu_old.all > 0 && _cpu_old.list[pid]) {\n        cpuu = (utime + cutime - _cpu_old.list[pid].utime - _cpu_old.list[pid].cutime) / (all - _cpu_old.all) * 100; // user\n\n        cpus = (stime + cstime - _cpu_old.list[pid].stime - _cpu_old.list[pid].cstime) / (all - _cpu_old.all) * 100; // system\n      } else {\n        cpuu = (utime + cutime) / all * 100; // user\n\n        cpus = (stime + cstime) / all * 100; // system\n      }\n\n      return {\n        pid: pid,\n        utime: utime,\n        stime: stime,\n        cutime: cutime,\n        cstime: cstime,\n        cpuu: cpuu,\n        cpus: cpus\n      };\n    } else {\n      return {\n        pid: 0,\n        utime: 0,\n        stime: 0,\n        cutime: 0,\n        cstime: 0,\n        cpuu: 0,\n        cpus: 0\n      };\n    }\n  } else {\n    return {\n      pid: 0,\n      utime: 0,\n      stime: 0,\n      cutime: 0,\n      cstime: 0,\n      cpuu: 0,\n      cpus: 0\n    };\n  }\n}\n\nfunction calcProcStatWin(procStat, all, _cpu_old) {\n  // calc\n  let cpuu = 0;\n  let cpus = 0;\n\n  if (_cpu_old.all > 0 && _cpu_old.list[procStat.pid]) {\n    cpuu = (procStat.utime - _cpu_old.list[procStat.pid].utime) / (all - _cpu_old.all) * 100; // user\n\n    cpus = (procStat.stime - _cpu_old.list[procStat.pid].stime) / (all - _cpu_old.all) * 100; // system\n  } else {\n    cpuu = procStat.utime / all * 100; // user\n\n    cpus = procStat.stime / all * 100; // system\n  }\n\n  return {\n    pid: procStat.pid,\n    utime: cpuu > 0 ? procStat.utime : 0,\n    stime: cpus > 0 ? procStat.stime : 0,\n    cpuu: cpuu > 0 ? cpuu : 0,\n    cpus: cpus > 0 ? cpus : 0\n  };\n} // --------------------------\n// running processes\n\n\nfunction processes(callback) {\n  let parsedhead = [];\n\n  function getName(command) {\n    command = command || '';\n    let result = command.split(' ')[0];\n\n    if (result.substr(-1) === ':') {\n      result = result.substr(0, result.length - 1);\n    }\n\n    if (result.substr(0, 1) !== '[') {\n      let parts = result.split('/');\n\n      if (isNaN(parseInt(parts[parts.length - 1]))) {\n        result = parts[parts.length - 1];\n      } else {\n        result = parts[0];\n      }\n    }\n\n    return result;\n  }\n\n  function parseLine(line) {\n    let offset = 0;\n    let offset2 = 0;\n\n    function checkColumn(i) {\n      offset = offset2;\n\n      if (parsedhead[i]) {\n        offset2 = line.substring(parsedhead[i].to + offset, 10000).indexOf(' ');\n      } else {\n        offset2 = 10000;\n      }\n    }\n\n    checkColumn(0);\n    const pid = parseInt(line.substring(parsedhead[0].from + offset, parsedhead[0].to + offset2));\n    checkColumn(1);\n    const ppid = parseInt(line.substring(parsedhead[1].from + offset, parsedhead[1].to + offset2));\n    checkColumn(2);\n    const cpu = parseFloat(line.substring(parsedhead[2].from + offset, parsedhead[2].to + offset2).replace(/,/g, '.'));\n    checkColumn(3);\n    const mem = parseFloat(line.substring(parsedhead[3].from + offset, parsedhead[3].to + offset2).replace(/,/g, '.'));\n    checkColumn(4);\n    const priority = parseInt(line.substring(parsedhead[4].from + offset, parsedhead[4].to + offset2));\n    checkColumn(5);\n    const vsz = parseInt(line.substring(parsedhead[5].from + offset, parsedhead[5].to + offset2));\n    checkColumn(6);\n    const rss = parseInt(line.substring(parsedhead[6].from + offset, parsedhead[6].to + offset2));\n    checkColumn(7);\n    const nice = parseInt(line.substring(parsedhead[7].from + offset, parsedhead[7].to + offset2)) || 0;\n    checkColumn(8);\n    const started = parseTimeUnix(line.substring(parsedhead[8].from + offset, parsedhead[8].to + offset2).trim());\n    checkColumn(9);\n    let state = line.substring(parsedhead[9].from + offset, parsedhead[9].to + offset2).trim();\n    state = state[0] === 'R' ? 'running' : state[0] === 'S' ? 'sleeping' : state[0] === 'T' ? 'stopped' : state[0] === 'W' ? 'paging' : state[0] === 'X' ? 'dead' : state[0] === 'Z' ? 'zombie' : state[0] === 'D' || state[0] === 'U' ? 'blocked' : 'unknown';\n    checkColumn(10);\n    let tty = line.substring(parsedhead[10].from + offset, parsedhead[10].to + offset2).trim();\n\n    if (tty === '?' || tty === '??') {\n      tty = '';\n    }\n\n    checkColumn(11);\n    const user = line.substring(parsedhead[11].from + offset, parsedhead[11].to + offset2).trim();\n    checkColumn(12);\n    let cmdPath = '';\n    let command = '';\n    let params = '';\n    let fullcommand = line.substring(parsedhead[12].from + offset, parsedhead[12].to + offset2).trim();\n\n    if (fullcommand.substr(fullcommand.length - 1) === ']') {\n      fullcommand = fullcommand.slice(0, -1);\n    }\n\n    if (fullcommand.substr(0, 1) === '[') {\n      command = fullcommand.substring(1);\n    } else {\n      // try to figure out where parameter starts\n      let firstParamPos = fullcommand.indexOf(' -');\n      let firstParamPathPos = fullcommand.indexOf(' /');\n      firstParamPos = firstParamPos >= 0 ? firstParamPos : 10000;\n      firstParamPathPos = firstParamPathPos >= 0 ? firstParamPathPos : 10000;\n      const firstPos = Math.min(firstParamPos, firstParamPathPos);\n      let tmpCommand = fullcommand.substr(0, firstPos);\n      const tmpParams = fullcommand.substr(firstPos);\n      const lastSlashPos = tmpCommand.lastIndexOf('/');\n\n      if (lastSlashPos >= 0) {\n        cmdPath = tmpCommand.substr(0, lastSlashPos);\n        tmpCommand = tmpCommand.substr(lastSlashPos + 1);\n      }\n\n      if (firstPos === 10000 && tmpCommand.indexOf(' ') > -1) {\n        const parts = tmpCommand.split(' ');\n\n        if (fs.existsSync(path.join(cmdPath, parts[0]))) {\n          command = parts.shift();\n          params = (parts.join(' ') + ' ' + tmpParams).trim();\n        } else {\n          command = tmpCommand.trim();\n          params = tmpParams.trim();\n        }\n      } else {\n        command = tmpCommand.trim();\n        params = tmpParams.trim();\n      }\n    }\n\n    return {\n      pid: pid,\n      parentPid: ppid,\n      name: _linux ? getName(command) : command,\n      cpu: cpu,\n      cpuu: 0,\n      cpus: 0,\n      mem: mem,\n      priority: priority,\n      memVsz: vsz,\n      memRss: rss,\n      nice: nice,\n      started: started,\n      state: state,\n      tty: tty,\n      user: user,\n      command: command,\n      params: params,\n      path: cmdPath\n    };\n  }\n\n  function parseProcesses(lines) {\n    let result = [];\n\n    if (lines.length > 1) {\n      let head = lines[0];\n      parsedhead = util.parseHead(head, 8);\n      lines.shift();\n      lines.forEach(function (line) {\n        if (line.trim() !== '') {\n          result.push(parseLine(line));\n        }\n      });\n    }\n\n    return result;\n  }\n\n  function parseProcesses2(lines) {\n    function formatDateTime(time) {\n      const month = ('0' + (time.getMonth() + 1).toString()).substr(-2);\n      const year = time.getFullYear().toString();\n      const day = ('0' + time.getDay().toString()).substr(-2);\n      const hours = time.getHours().toString();\n      const mins = time.getMinutes().toString();\n      const secs = ('0' + time.getSeconds().toString()).substr(-2);\n      return year + '-' + month + '-' + day + ' ' + hours + ':' + mins + ':' + secs;\n    }\n\n    let result = [];\n    lines.forEach(function (line) {\n      if (line.trim() !== '') {\n        line = line.trim().replace(/ +/g, ' ').replace(/,+/g, '.');\n        const parts = line.split(' ');\n        const command = parts.slice(9).join(' ');\n        const pmem = parseFloat((1.0 * parseInt(parts[3]) * 1024 / os.totalmem()).toFixed(1));\n        const elapsed_parts = parts[5].split(':');\n        const started = formatDateTime(new Date(Date.now() - (elapsed_parts.length > 1 ? (elapsed_parts[0] * 60 + elapsed_parts[1]) * 1000 : elapsed_parts[0] * 1000)));\n        result.push({\n          pid: parseInt(parts[0]),\n          parentPid: parseInt(parts[1]),\n          name: getName(command),\n          cpu: 0,\n          cpuu: 0,\n          cpus: 0,\n          mem: pmem,\n          priority: 0,\n          memVsz: parseInt(parts[2]),\n          memRss: parseInt(parts[3]),\n          nice: parseInt(parts[4]),\n          started: started,\n          state: parts[6] === 'R' ? 'running' : parts[6] === 'S' ? 'sleeping' : parts[6] === 'T' ? 'stopped' : parts[6] === 'W' ? 'paging' : parts[6] === 'X' ? 'dead' : parts[6] === 'Z' ? 'zombie' : parts[6] === 'D' || parts[6] === 'U' ? 'blocked' : 'unknown',\n          tty: parts[7],\n          user: parts[8],\n          command: command\n        });\n      }\n    });\n    return result;\n  }\n\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = {\n        all: 0,\n        running: 0,\n        blocked: 0,\n        sleeping: 0,\n        unknown: 0,\n        list: []\n      };\n      let cmd = '';\n\n      if (_processes_cpu.ms && Date.now() - _processes_cpu.ms >= 500 || _processes_cpu.ms === 0) {\n        if (_linux || _freebsd || _openbsd || _netbsd || _darwin || _sunos) {\n          if (_linux) {\n            cmd = 'export LC_ALL=C; ps -axo pid:11,ppid:11,pcpu:6,pmem:6,pri:5,vsz:11,rss:11,ni:5,lstart:30,state:5,tty:15,user:20,command; unset LC_ALL';\n          }\n\n          if (_freebsd || _openbsd || _netbsd) {\n            cmd = 'export LC_ALL=C; ps -axo pid,ppid,pcpu,pmem,pri,vsz,rss,ni,lstart,state,tty,user,command; unset LC_ALL';\n          }\n\n          if (_darwin) {\n            cmd = 'ps -axo pid,ppid,pcpu,pmem,pri,vsz=xxx_fake_title,rss=fake_title2,nice,lstart,state,tty,user,command -r';\n          }\n\n          if (_sunos) {\n            cmd = 'ps -Ao pid,ppid,pcpu,pmem,pri,vsz,rss,nice,stime,s,tty,user,comm';\n          }\n\n          exec(cmd, {\n            maxBuffer: 1024 * 20000\n          }, function (error, stdout) {\n            if (!error && stdout.toString().trim()) {\n              result.list = parseProcesses(stdout.toString().split('\\n')).slice();\n              result.all = result.list.length;\n              result.running = result.list.filter(function (e) {\n                return e.state === 'running';\n              }).length;\n              result.blocked = result.list.filter(function (e) {\n                return e.state === 'blocked';\n              }).length;\n              result.sleeping = result.list.filter(function (e) {\n                return e.state === 'sleeping';\n              }).length;\n\n              if (_linux) {\n                // calc process_cpu - ps is not accurate in linux!\n                cmd = 'cat /proc/stat | grep \"cpu \"';\n\n                for (let i = 0; i < result.list.length; i++) {\n                  cmd += ';cat /proc/' + result.list[i].pid + '/stat';\n                }\n\n                exec(cmd, {\n                  maxBuffer: 1024 * 20000\n                }, function (error, stdout) {\n                  let curr_processes = stdout.toString().split('\\n'); // first line (all - /proc/stat)\n\n                  let all = parseProcStat(curr_processes.shift()); // process\n\n                  let list_new = {};\n                  let resultProcess = {};\n\n                  for (let i = 0; i < curr_processes.length; i++) {\n                    resultProcess = calcProcStatLinux(curr_processes[i], all, _processes_cpu);\n\n                    if (resultProcess.pid) {\n                      // store pcpu in outer array\n                      let listPos = result.list.map(function (e) {\n                        return e.pid;\n                      }).indexOf(resultProcess.pid);\n\n                      if (listPos >= 0) {\n                        result.list[listPos].cpu = resultProcess.cpuu + resultProcess.cpus;\n                        result.list[listPos].cpuu = resultProcess.cpuu;\n                        result.list[listPos].cpus = resultProcess.cpus;\n                      } // save new values\n\n\n                      list_new[resultProcess.pid] = {\n                        cpuu: resultProcess.cpuu,\n                        cpus: resultProcess.cpus,\n                        utime: resultProcess.utime,\n                        stime: resultProcess.stime,\n                        cutime: resultProcess.cutime,\n                        cstime: resultProcess.cstime\n                      };\n                    }\n                  } // store old values\n\n\n                  _processes_cpu.all = all; // _processes_cpu.list = list_new;\n\n                  _processes_cpu.list = Object.assign({}, list_new);\n                  _processes_cpu.ms = Date.now() - _processes_cpu.ms; // _processes_cpu.result = result;\n\n                  _processes_cpu.result = Object.assign({}, result);\n\n                  if (callback) {\n                    callback(result);\n                  }\n\n                  resolve(result);\n                });\n              } else {\n                if (callback) {\n                  callback(result);\n                }\n\n                resolve(result);\n              }\n            } else {\n              cmd = 'ps -o pid,ppid,vsz,rss,nice,etime,stat,tty,user,comm';\n\n              if (_sunos) {\n                cmd = 'ps -o pid,ppid,vsz,rss,nice,etime,s,tty,user,comm';\n              }\n\n              exec(cmd, {\n                maxBuffer: 1024 * 20000\n              }, function (error, stdout) {\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  lines.shift();\n                  result.list = parseProcesses2(lines).slice();\n                  result.all = result.list.length;\n                  result.running = result.list.filter(function (e) {\n                    return e.state === 'running';\n                  }).length;\n                  result.blocked = result.list.filter(function (e) {\n                    return e.state === 'blocked';\n                  }).length;\n                  result.sleeping = result.list.filter(function (e) {\n                    return e.state === 'sleeping';\n                  }).length;\n\n                  if (callback) {\n                    callback(result);\n                  }\n\n                  resolve(result);\n                } else {\n                  if (callback) {\n                    callback(result);\n                  }\n\n                  resolve(result);\n                }\n              });\n            }\n          });\n        } else if (_windows) {\n          try {\n            util.powerShell('Get-WmiObject Win32_Process | select ProcessId,ParentProcessId,ExecutionState,Caption,CommandLine,ExecutablePath,UserModeTime,KernelModeTime,WorkingSetSize,Priority,PageFileUsage,CreationDate | fl').then((stdout, error) => {\n              if (!error) {\n                let processSections = stdout.split(/\\n\\s*\\n/);\n                let procs = [];\n                let procStats = [];\n                let list_new = {};\n                let allcpuu = 0;\n                let allcpus = 0; // let allcpuu = _processes_cpu.all_utime;\n                // let allcpus = _processes_cpu.all_stime;\n\n                for (let i = 0; i < processSections.length; i++) {\n                  if (processSections[i].trim() !== '') {\n                    let lines = processSections[i].trim().split('\\r\\n');\n                    let pid = parseInt(util.getValue(lines, 'ProcessId', ':', true), 10);\n                    let parentPid = parseInt(util.getValue(lines, 'ParentProcessId', ':', true), 10);\n                    let statusValue = util.getValue(lines, 'ExecutionState', ':');\n                    let name = util.getValue(lines, 'Caption', ':', true);\n                    let commandLine = util.getValue(lines, 'CommandLine', ':', true);\n                    let commandPath = util.getValue(lines, 'ExecutablePath', ':', true);\n                    let utime = parseInt(util.getValue(lines, 'UserModeTime', ':', true), 10);\n                    let stime = parseInt(util.getValue(lines, 'KernelModeTime', ':', true), 10);\n                    let memw = parseInt(util.getValue(lines, 'WorkingSetSize', ':', true), 10);\n                    allcpuu = allcpuu + utime;\n                    allcpus = allcpus + stime; // allcpuu += utime - (_processes_cpu.list[pid] ? _processes_cpu.list[pid].utime : 0);\n                    // allcpus += stime - (_processes_cpu.list[pid] ? _processes_cpu.list[pid].stime : 0);\n\n                    result.all++;\n\n                    if (!statusValue) {\n                      result.unknown++;\n                    }\n\n                    if (statusValue === '3') {\n                      result.running++;\n                    }\n\n                    if (statusValue === '4' || statusValue === '5') {\n                      result.blocked++;\n                    }\n\n                    procStats.push({\n                      pid: pid,\n                      utime: utime,\n                      stime: stime,\n                      cpu: 0,\n                      cpuu: 0,\n                      cpus: 0\n                    });\n                    procs.push({\n                      pid: pid,\n                      parentPid: parentPid,\n                      name: name,\n                      cpu: 0,\n                      cpuu: 0,\n                      cpus: 0,\n                      mem: memw / os.totalmem() * 100,\n                      priority: parseInt(util.getValue(lines, 'Priority', ':', true), 10),\n                      memVsz: parseInt(util.getValue(lines, 'PageFileUsage', ':', true), 10),\n                      memRss: Math.floor(parseInt(util.getValue(lines, 'WorkingSetSize', ':', true), 10) / 1024),\n                      nice: 0,\n                      started: parseTimeWin(util.getValue(lines, 'CreationDate', ':', true)),\n                      state: !statusValue ? _winStatusValues[0] : _winStatusValues[statusValue],\n                      tty: '',\n                      user: '',\n                      command: commandLine || name,\n                      path: commandPath,\n                      params: ''\n                    });\n                  }\n                }\n\n                result.sleeping = result.all - result.running - result.blocked - result.unknown;\n                result.list = procs;\n\n                for (let i = 0; i < procStats.length; i++) {\n                  let resultProcess = calcProcStatWin(procStats[i], allcpuu + allcpus, _processes_cpu); // store pcpu in outer array\n\n                  let listPos = result.list.map(function (e) {\n                    return e.pid;\n                  }).indexOf(resultProcess.pid);\n\n                  if (listPos >= 0) {\n                    result.list[listPos].cpu = resultProcess.cpuu + resultProcess.cpus;\n                    result.list[listPos].cpuu = resultProcess.cpuu;\n                    result.list[listPos].cpus = resultProcess.cpus;\n                  } // save new values\n\n\n                  list_new[resultProcess.pid] = {\n                    cpuu: resultProcess.cpuu,\n                    cpus: resultProcess.cpus,\n                    utime: resultProcess.utime,\n                    stime: resultProcess.stime\n                  };\n                } // store old values\n\n\n                _processes_cpu.all = allcpuu + allcpus;\n                _processes_cpu.all_utime = allcpuu;\n                _processes_cpu.all_stime = allcpus; // _processes_cpu.list = list_new;\n\n                _processes_cpu.list = Object.assign({}, list_new);\n                _processes_cpu.ms = Date.now() - _processes_cpu.ms; // _processes_cpu.result = result;\n\n                _processes_cpu.result = Object.assign({}, result);\n              }\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            });\n          } catch (e) {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n        } else {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      } else {\n        if (callback) {\n          callback(_processes_cpu.result);\n        }\n\n        resolve(_processes_cpu.result);\n      }\n    });\n  });\n}\n\nexports.processes = processes; // --------------------------\n// PS - process load\n// get detailed information about a certain process\n// (PID, CPU-Usage %, Mem-Usage %)\n\nfunction processLoad(proc, callback) {\n  // fallback - if only callback is given\n  if (util.isFunction(proc) && !callback) {\n    callback = proc;\n    proc = '';\n  }\n\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      proc = proc || '';\n\n      if (typeof proc !== 'string') {\n        if (callback) {\n          callback([]);\n        }\n\n        return resolve([]);\n      }\n\n      let processesString = '';\n      processesString.__proto__.toLowerCase = util.stringToLower;\n      processesString.__proto__.replace = util.stringReplace;\n      processesString.__proto__.trim = util.stringTrim;\n      const s = util.sanitizeShellString(proc);\n\n      for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {\n        if (!(s[i] === undefined)) {\n          processesString = processesString + s[i];\n        }\n      }\n\n      processesString = processesString.trim().toLowerCase().replace(/, /g, '|').replace(/,+/g, '|');\n\n      if (processesString === '') {\n        processesString = '*';\n      }\n\n      if (util.isPrototypePolluted() && processesString !== '*') {\n        processesString = '------';\n      }\n\n      let processes = processesString.split('|');\n      let result = [];\n      const procSanitized = util.isPrototypePolluted() ? '' : util.sanitizeShellString(proc); // from here new\n      // let result = {\n      //   'proc': procSanitized,\n      //   'pid': null,\n      //   'cpu': 0,\n      //   'mem': 0\n      // };\n\n      if (procSanitized && processes.length && processes[0] !== '------') {\n        if (_windows) {\n          try {\n            util.powerShell('Get-WmiObject Win32_Process | select ProcessId,Caption,UserModeTime,KernelModeTime,WorkingSetSize | fl').then((stdout, error) => {\n              if (!error) {\n                let processSections = stdout.split(/\\n\\s*\\n/);\n                let procStats = [];\n                let list_new = {};\n                let allcpuu = 0;\n                let allcpus = 0; // let allcpuu = _process_cpu.all_utime;\n                // let allcpus = _process_cpu.all_stime;\n                // go through all processes\n\n                for (let i = 0; i < processSections.length; i++) {\n                  if (processSections[i].trim() !== '') {\n                    let lines = processSections[i].trim().split('\\r\\n');\n                    let pid = parseInt(util.getValue(lines, 'ProcessId', ':', true), 10);\n                    let name = util.getValue(lines, 'Caption', ':', true);\n                    let utime = parseInt(util.getValue(lines, 'UserModeTime', ':', true), 10);\n                    let stime = parseInt(util.getValue(lines, 'KernelModeTime', ':', true), 10);\n                    let mem = parseInt(util.getValue(lines, 'WorkingSetSize', ':', true), 10);\n                    allcpuu = allcpuu + utime;\n                    allcpus = allcpus + stime; // allcpuu += utime - (_process_cpu.list[pid] ? _process_cpu.list[pid].utime : 0);\n                    // allcpus += stime - (_process_cpu.list[pid] ? _process_cpu.list[pid].stime : 0);\n\n                    procStats.push({\n                      pid: pid,\n                      name,\n                      utime: utime,\n                      stime: stime,\n                      cpu: 0,\n                      cpuu: 0,\n                      cpus: 0,\n                      mem\n                    });\n                    let pname = '';\n                    let inList = false;\n                    processes.forEach(function (proc) {\n                      // console.log(proc)\n                      // console.log(item)\n                      // inList = inList || item.name.toLowerCase() === proc.toLowerCase();\n                      if (name.toLowerCase().indexOf(proc.toLowerCase()) >= 0 && !inList) {\n                        inList = true;\n                        pname = proc;\n                      }\n                    });\n\n                    if (processesString === '*' || inList) {\n                      let processFound = false;\n                      result.forEach(function (item) {\n                        if (item.proc.toLowerCase() === pname.toLowerCase()) {\n                          item.pids.push(pid);\n                          item.mem += mem / os.totalmem() * 100;\n                          processFound = true;\n                        }\n                      });\n\n                      if (!processFound) {\n                        result.push({\n                          proc: pname,\n                          pid: pid,\n                          pids: [pid],\n                          cpu: 0,\n                          mem: mem / os.totalmem() * 100\n                        });\n                      }\n                    }\n                  }\n                } // add missing processes\n\n\n                if (processesString !== '*') {\n                  let processesMissing = processes.filter(function (name) {\n                    // return procStats.filter(function(item) { return item.name.toLowerCase() === name }).length === 0;\n                    return procStats.filter(function (item) {\n                      return item.name.toLowerCase().indexOf(name) >= 0;\n                    }).length === 0;\n                  });\n                  processesMissing.forEach(function (procName) {\n                    result.push({\n                      proc: procName,\n                      pid: null,\n                      pids: [],\n                      cpu: 0,\n                      mem: 0\n                    });\n                  });\n                } // calculate proc stats for each proc\n\n\n                for (let i = 0; i < procStats.length; i++) {\n                  let resultProcess = calcProcStatWin(procStats[i], allcpuu + allcpus, _process_cpu);\n                  let listPos = -1;\n\n                  for (let j = 0; j < result.length; j++) {\n                    if (result[j].pid === resultProcess.pid || result[j].pids.indexOf(resultProcess.pid) >= 0) {\n                      listPos = j;\n                    }\n                  }\n\n                  if (listPos >= 0) {\n                    result[listPos].cpu += resultProcess.cpuu + resultProcess.cpus;\n                  } // save new values\n\n\n                  list_new[resultProcess.pid] = {\n                    cpuu: resultProcess.cpuu,\n                    cpus: resultProcess.cpus,\n                    utime: resultProcess.utime,\n                    stime: resultProcess.stime\n                  };\n                } // store old values\n\n\n                _process_cpu.all = allcpuu + allcpus;\n                _process_cpu.all_utime = allcpuu;\n                _process_cpu.all_stime = allcpus; // _process_cpu.list = list_new;\n\n                _process_cpu.list = Object.assign({}, list_new);\n                _process_cpu.ms = Date.now() - _process_cpu.ms;\n                _process_cpu.result = JSON.parse(JSON.stringify(result));\n\n                if (callback) {\n                  callback(result);\n                }\n\n                resolve(result);\n              }\n            });\n          } catch (e) {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n        }\n\n        if (_darwin || _linux || _freebsd || _openbsd || _netbsd) {\n          const params = ['-axo', 'pid,pcpu,pmem,comm'];\n          util.execSafe('ps', params).then(stdout => {\n            if (stdout) {\n              let procStats = [];\n              let lines = stdout.toString().split('\\n').filter(function (line) {\n                if (processesString === '*') {\n                  return true;\n                }\n\n                if (line.toLowerCase().indexOf('grep') !== -1) {\n                  return false;\n                } // remove this??\n\n\n                let found = false;\n                processes.forEach(function (item) {\n                  found = found || line.toLowerCase().indexOf(item.toLowerCase()) >= 0;\n                });\n                return found;\n              });\n              lines.forEach(function (line) {\n                let data = line.trim().replace(/ +/g, ' ').split(' ');\n\n                if (data.length > 3) {\n                  procStats.push({\n                    name: data[3].substring(data[3].lastIndexOf('/') + 1),\n                    pid: parseInt(data[0]) || 0,\n                    cpu: parseFloat(data[1].replace(',', '.')),\n                    mem: parseFloat(data[2].replace(',', '.'))\n                  });\n                }\n              });\n              procStats.forEach(function (item) {\n                let listPos = -1;\n                let inList = false;\n                let name = '';\n\n                for (let j = 0; j < result.length; j++) {\n                  // if (result[j].proc.toLowerCase() === item.name.toLowerCase()) {\n                  // if (result[j].proc.toLowerCase().indexOf(item.name.toLowerCase()) >= 0) {\n                  if (item.name.toLowerCase().indexOf(result[j].proc.toLowerCase()) >= 0) {\n                    listPos = j;\n                  }\n                } // console.log(listPos);\n\n\n                processes.forEach(function (proc) {\n                  // console.log(proc)\n                  // console.log(item)\n                  // inList = inList || item.name.toLowerCase() === proc.toLowerCase();\n                  if (item.name.toLowerCase().indexOf(proc.toLowerCase()) >= 0 && !inList) {\n                    inList = true;\n                    name = proc;\n                  }\n                }); // console.log(item);\n                // console.log(listPos);\n\n                if (processesString === '*' || inList) {\n                  if (listPos < 0) {\n                    result.push({\n                      proc: name,\n                      pid: item.pid,\n                      pids: [item.pid],\n                      cpu: item.cpu,\n                      mem: item.mem\n                    });\n                  } else {\n                    result[listPos].pids.push(item.pid);\n                    result[listPos].cpu += item.cpu;\n                    result[listPos].mem += item.mem;\n                  }\n                }\n              });\n\n              if (processesString !== '*') {\n                // add missing processes\n                let processesMissing = processes.filter(function (name) {\n                  return procStats.filter(function (item) {\n                    return item.name.toLowerCase().indexOf(name) >= 0;\n                  }).length === 0;\n                });\n                processesMissing.forEach(function (procName) {\n                  result.push({\n                    proc: procName,\n                    pid: null,\n                    pids: [],\n                    cpu: 0,\n                    mem: 0\n                  });\n                });\n              }\n\n              if (_linux) {\n                // calc process_cpu - ps is not accurate in linux!\n                result.forEach(function (item) {\n                  item.cpu = 0;\n                });\n                let cmd = 'cat /proc/stat | grep \"cpu \"';\n\n                for (let i in result) {\n                  for (let j in result[i].pids) {\n                    cmd += ';cat /proc/' + result[i].pids[j] + '/stat';\n                  }\n                }\n\n                exec(cmd, {\n                  maxBuffer: 1024 * 20000\n                }, function (error, stdout) {\n                  let curr_processes = stdout.toString().split('\\n'); // first line (all - /proc/stat)\n\n                  let all = parseProcStat(curr_processes.shift()); // process\n\n                  let list_new = {};\n                  let resultProcess = {};\n\n                  for (let i = 0; i < curr_processes.length; i++) {\n                    resultProcess = calcProcStatLinux(curr_processes[i], all, _process_cpu);\n\n                    if (resultProcess.pid) {\n                      // find result item\n                      let resultItemId = -1;\n\n                      for (let i in result) {\n                        if (result[i].pids.indexOf(resultProcess.pid) >= 0) {\n                          resultItemId = i;\n                        }\n                      } // store pcpu in outer result\n\n\n                      if (resultItemId >= 0) {\n                        result[resultItemId].cpu += resultProcess.cpuu + resultProcess.cpus;\n                      } // save new values\n\n\n                      list_new[resultProcess.pid] = {\n                        cpuu: resultProcess.cpuu,\n                        cpus: resultProcess.cpus,\n                        utime: resultProcess.utime,\n                        stime: resultProcess.stime,\n                        cutime: resultProcess.cutime,\n                        cstime: resultProcess.cstime\n                      };\n                    }\n                  }\n\n                  result.forEach(function (item) {\n                    item.cpu = Math.round(item.cpu * 100) / 100;\n                  });\n                  _process_cpu.all = all; // _process_cpu.list = list_new;\n\n                  _process_cpu.list = Object.assign({}, list_new);\n                  _process_cpu.ms = Date.now() - _process_cpu.ms; // _process_cpu.result = result;\n\n                  _process_cpu.result = Object.assign({}, result);\n\n                  if (callback) {\n                    callback(result);\n                  }\n\n                  resolve(result);\n                });\n              } else {\n                if (callback) {\n                  callback(result);\n                }\n\n                resolve(result);\n              }\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          });\n        }\n      }\n    });\n  });\n}\n\nexports.processLoad = processLoad;","'use strict'; // @ts-check\n// ==================================================================================\n// system.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 2. System (Hardware, BIOS, Base Board)\n// ----------------------------------------------------------------------------------\n\nconst fs = require('fs');\n\nconst os = require('os');\n\nconst util = require('./util');\n\nconst exec = require('child_process').exec;\n\nconst execSync = require('child_process').execSync;\n\nconst execPromise = util.promisify(require('child_process').exec);\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos';\n\nfunction system(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = {\n        manufacturer: '',\n        model: 'Computer',\n        version: '',\n        serial: '-',\n        uuid: '-',\n        sku: '-',\n        virtual: false\n      };\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t system 2>/dev/null; unset LC_ALL', function (error, stdout) {\n          // if (!error) {\n          let lines = stdout.toString().split('\\n');\n          result.manufacturer = util.getValue(lines, 'manufacturer');\n          result.model = util.getValue(lines, 'product name');\n          result.version = util.getValue(lines, 'version');\n          result.serial = util.getValue(lines, 'serial number');\n          result.uuid = util.getValue(lines, 'uuid').toLowerCase();\n          result.sku = util.getValue(lines, 'sku number'); // }\n          // Non-Root values\n\n          const cmd = `echo -n \"product_name: \"; cat /sys/devices/virtual/dmi/id/product_name 2>/dev/null; echo;\n            echo -n \"product_serial: \"; cat /sys/devices/virtual/dmi/id/product_serial 2>/dev/null; echo;\n            echo -n \"product_uuid: \"; cat /sys/devices/virtual/dmi/id/product_uuid 2>/dev/null; echo;\n            echo -n \"product_version: \"; cat /sys/devices/virtual/dmi/id/product_version 2>/dev/null; echo;\n            echo -n \"sys_vendor: \"; cat /sys/devices/virtual/dmi/id/sys_vendor 2>/dev/null; echo;`;\n\n          try {\n            lines = execSync(cmd).toString().split('\\n');\n            result.manufacturer = result.manufacturer === '' ? util.getValue(lines, 'sys_vendor') : result.manufacturer;\n            result.model = result.model === '' ? util.getValue(lines, 'product_name') : result.model;\n            result.version = result.version === '' ? util.getValue(lines, 'product_version') : result.version;\n            result.serial = result.serial === '' ? util.getValue(lines, 'product_serial') : result.serial;\n            result.uuid = result.uuid === '' ? util.getValue(lines, 'product_uuid').toLowerCase() : result.uuid;\n          } catch (e) {\n            util.noop();\n          }\n\n          if (!result.serial || result.serial.toLowerCase().indexOf('o.e.m.') !== -1) {\n            result.serial = '-';\n          }\n\n          if (!result.manufacturer || result.manufacturer.toLowerCase().indexOf('o.e.m.') !== -1) {\n            result.manufacturer = '';\n          }\n\n          if (!result.model || result.model.toLowerCase().indexOf('o.e.m.') !== -1) {\n            result.model = 'Computer';\n          }\n\n          if (!result.version || result.version.toLowerCase().indexOf('o.e.m.') !== -1) {\n            result.version = '';\n          }\n\n          if (!result.sku || result.sku.toLowerCase().indexOf('o.e.m.') !== -1) {\n            result.sku = '-';\n          } // detect virtual (1)\n\n\n          if (result.model.toLowerCase() === 'virtualbox' || result.model.toLowerCase() === 'kvm' || result.model.toLowerCase() === 'virtual machine' || result.model.toLowerCase() === 'bochs' || result.model.toLowerCase().startsWith('vmware') || result.model.toLowerCase().startsWith('droplet')) {\n            result.virtual = true;\n\n            switch (result.model.toLowerCase()) {\n              case 'virtualbox':\n                result.virtualHost = 'VirtualBox';\n                break;\n\n              case 'vmware':\n                result.virtualHost = 'VMware';\n                break;\n\n              case 'kvm':\n                result.virtualHost = 'KVM';\n                break;\n\n              case 'bochs':\n                result.virtualHost = 'bochs';\n                break;\n            }\n          }\n\n          if (result.manufacturer.toLowerCase().startsWith('vmware') || result.manufacturer.toLowerCase() === 'xen') {\n            result.virtual = true;\n\n            switch (result.manufacturer.toLowerCase()) {\n              case 'vmware':\n                result.virtualHost = 'VMware';\n                break;\n\n              case 'xen':\n                result.virtualHost = 'Xen';\n                break;\n            }\n          }\n\n          if (!result.virtual) {\n            try {\n              const disksById = execSync('ls -1 /dev/disk/by-id/ 2>/dev/null').toString();\n\n              if (disksById.indexOf('_QEMU_') >= 0) {\n                result.virtual = true;\n                result.virtualHost = 'QEMU';\n              }\n\n              if (disksById.indexOf('_VBOX_') >= 0) {\n                result.virtual = true;\n                result.virtualHost = 'VirtualBox';\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n\n          if (!result.virtual && (os.release().toLowerCase().indexOf('microsoft') >= 0 || os.release().toLowerCase().endsWith('wsl2'))) {\n            const kernelVersion = parseFloat(os.release().toLowerCase());\n            result.virtual = true;\n            result.manufacturer = 'Microsoft';\n            result.model = 'WSL';\n            result.version = kernelVersion < 4.19 ? '1' : '2';\n          }\n\n          if ((_freebsd || _openbsd || _netbsd) && !result.virtualHost) {\n            try {\n              const procInfo = execSync('dmidecode -t 4');\n              const procLines = procInfo.toString().split('\\n');\n              const procManufacturer = util.getValue(procLines, 'manufacturer', ':', true);\n\n              switch (procManufacturer.toLowerCase()) {\n                case 'virtualbox':\n                  result.virtualHost = 'VirtualBox';\n                  break;\n\n                case 'vmware':\n                  result.virtualHost = 'VMware';\n                  break;\n\n                case 'kvm':\n                  result.virtualHost = 'KVM';\n                  break;\n\n                case 'bochs':\n                  result.virtualHost = 'bochs';\n                  break;\n              }\n            } catch (e) {\n              util.noop();\n            }\n          } // detect docker\n\n\n          if (fs.existsSync('/.dockerenv') || fs.existsSync('/.dockerinit')) {\n            result.model = 'Docker Container';\n          }\n\n          try {\n            const stdout = execSync('dmesg 2>/dev/null | grep -iE \"virtual|hypervisor\" | grep -iE \"vmware|qemu|kvm|xen\" | grep -viE \"Nested Virtualization|/virtual/\"'); // detect virtual machines\n\n            let lines = stdout.toString().split('\\n');\n\n            if (lines.length > 0) {\n              if (result.model === 'Computer') {\n                result.model = 'Virtual machine';\n              }\n\n              result.virtual = true;\n\n              if (stdout.toString().toLowerCase().indexOf('vmware') >= 0 && !result.virtualHost) {\n                result.virtualHost = 'VMware';\n              }\n\n              if (stdout.toString().toLowerCase().indexOf('qemu') >= 0 && !result.virtualHost) {\n                result.virtualHost = 'QEMU';\n              }\n\n              if (stdout.toString().toLowerCase().indexOf('xen') >= 0 && !result.virtualHost) {\n                result.virtualHost = 'Xen';\n              }\n\n              if (stdout.toString().toLowerCase().indexOf('kvm') >= 0 && !result.virtualHost) {\n                result.virtualHost = 'KVM';\n              }\n            }\n          } catch (e) {\n            util.noop();\n          }\n\n          if (result.manufacturer === '' && result.model === 'Computer' && result.version === '') {\n            // Check Raspberry Pi\n            fs.readFile('/proc/cpuinfo', function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                result.model = util.getValue(lines, 'hardware', ':', true).toUpperCase();\n                result.version = util.getValue(lines, 'revision', ':', true).toLowerCase();\n                result.serial = util.getValue(lines, 'serial', ':', true);\n                const model = util.getValue(lines, 'model:', ':', true); // reference values: https://elinux.org/RPi_HardwareHistory\n                // https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md\n\n                if ((result.model === 'BCM2835' || result.model === 'BCM2708' || result.model === 'BCM2709' || result.model === 'BCM2710' || result.model === 'BCM2711' || result.model === 'BCM2836' || result.model === 'BCM2837') && model.toLowerCase().indexOf('raspberry') >= 0) {\n                  const rPIRevision = util.decodePiCpuinfo(lines);\n                  result.model = rPIRevision.model;\n                  result.version = rPIRevision.revisionCode;\n                  result.manufacturer = 'Raspberry Pi Foundation';\n                  result.raspberry = {\n                    manufacturer: rPIRevision.manufacturer,\n                    processor: rPIRevision.processor,\n                    type: rPIRevision.type,\n                    revision: rPIRevision.revision\n                  };\n                } // if (result.model === 'BCM2835' || result.model === 'BCM2708' || result.model === 'BCM2709' || result.model === 'BCM2835' || result.model === 'BCM2837') {\n                //   // Pi 4\n                //   if (['d03114'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 4 Model B';\n                //     result.version = result.version + ' - Rev. 1.4';\n                //   }\n                //   if (['b03112', 'c03112'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 4 Model B';\n                //     result.version = result.version + ' - Rev. 1.2';\n                //   }\n                //   if (['a03111', 'b03111', 'c03111'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 4 Model B';\n                //     result.version = result.version + ' - Rev. 1.1';\n                //   }\n                //   // Pi 3\n                //   if (['a02082', 'a22082', 'a32082', 'a52082'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 3 Model B';\n                //     result.version = result.version + ' - Rev. 1.2';\n                //   }\n                //   if (['a22083'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 3 Model B';\n                //     result.version = result.version + ' - Rev. 1.3';\n                //   }\n                //   if (['a020d3'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 3 Model B+';\n                //     result.version = result.version + ' - Rev. 1.3';\n                //   }\n                //   if (['9020e0'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 3 Model A+';\n                //     result.version = result.version + ' - Rev. 1.3';\n                //   }\n                //   // Pi 2 Model B\n                //   if (['a01040'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 2 Model B';\n                //     result.version = result.version + ' - Rev. 1.0';\n                //   }\n                //   if (['a01041', 'a21041'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 2 Model B';\n                //     result.version = result.version + ' - Rev. 1.1';\n                //   }\n                //   if (['a22042', 'a02042'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi 2 Model B';\n                //     result.version = result.version + ' - Rev. 1.2';\n                //   }\n                //   // Compute Model\n                //   if (['a02100'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi CM3+';\n                //     result.version = result.version + ' - Rev 1.0';\n                //   }\n                //   if (['a020a0', 'a220a0'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi CM3';\n                //     result.version = result.version + ' - Rev 1.0';\n                //   }\n                //   if (['900061'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi CM';\n                //     result.version = result.version + ' - Rev 1.1';\n                //   }\n                //   // Pi Zero\n                //   if (['900092', '920092'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Zero';\n                //     result.version = result.version + ' - Rev 1.2';\n                //   }\n                //   if (['900093', '920093'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Zero';\n                //     result.version = result.version + ' - Rev 1.3';\n                //   }\n                //   if (['9000c1'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Zero W';\n                //     result.version = result.version + ' - Rev 1.1';\n                //   }\n                //   // A, B, A+ B+\n                //   if (['0002', '0003'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model B';\n                //     result.version = result.version + ' - Rev 1.0';\n                //   }\n                //   if (['0004', '0005', '0006', '000d', '000e', '000f'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model B';\n                //     result.version = result.version + ' - Rev 2.0';\n                //   }\n                //   if (['0007', '0008', '0009'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model A';\n                //     result.version = result.version + ' - Rev 2.0';\n                //   }\n                //   if (['0010'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model B+';\n                //     result.version = result.version + ' - Rev 1.0';\n                //   }\n                //   if (['0012'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model A+';\n                //     result.version = result.version + ' - Rev 1.0';\n                //   }\n                //   if (['0013', '900032'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model B+';\n                //     result.version = result.version + ' - Rev 1.2';\n                //   }\n                //   if (['0015', '900021'].indexOf(result.version) >= 0) {\n                //     result.model = result.model + ' - Pi Model A+';\n                //     result.version = result.version + ' - Rev 1.1';\n                //   }\n                //   if (result.model.indexOf('Pi') !== -1 && result.version) {  // Pi, Pi Zero\n                //     result.manufacturer = 'Raspberry Pi Foundation';\n                //   }\n                // }\n\n              }\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            });\n          } else {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n        });\n      }\n\n      if (_darwin) {\n        exec('ioreg -c IOPlatformExpertDevice -d 2', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().replace(/[<>\"]/g, '').split('\\n');\n            result.manufacturer = util.getValue(lines, 'manufacturer', '=', true);\n            result.model = util.getValue(lines, 'model', '=', true);\n            result.version = util.getValue(lines, 'version', '=', true);\n            result.serial = util.getValue(lines, 'ioplatformserialnumber', '=', true);\n            result.uuid = util.getValue(lines, 'ioplatformuuid', '=', true).toLowerCase();\n            result.sku = util.getValue(lines, 'board-id', '=', true);\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n\n      if (_windows) {\n        try {\n          util.powerShell('Get-WmiObject Win32_ComputerSystemProduct | select Name,Vendor,Version,IdentifyingNumber,UUID | fl').then((stdout, error) => {\n            if (!error) {\n              // let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0)[0].trim().split(/\\s\\s+/);\n              let lines = stdout.split('\\r\\n');\n              result.manufacturer = util.getValue(lines, 'vendor', ':');\n              result.model = util.getValue(lines, 'name', ':');\n              result.version = util.getValue(lines, 'version', ':');\n              result.serial = util.getValue(lines, 'identifyingnumber', ':');\n              result.uuid = util.getValue(lines, 'uuid', ':').toLowerCase(); // detect virtual (1)\n\n              const model = result.model.toLowerCase();\n\n              if (model === 'virtualbox' || model === 'kvm' || model === 'virtual machine' || model === 'bochs' || model.startsWith('vmware') || model.startsWith('qemu')) {\n                result.virtual = true;\n\n                if (model.startsWith('virtualbox')) {\n                  result.virtualHost = 'VirtualBox';\n                }\n\n                if (model.startsWith('vmware')) {\n                  result.virtualHost = 'VMware';\n                }\n\n                if (model.startsWith('kvm')) {\n                  result.virtualHost = 'KVM';\n                }\n\n                if (model.startsWith('bochs')) {\n                  result.virtualHost = 'bochs';\n                }\n\n                if (model.startsWith('qemu')) {\n                  result.virtualHost = 'KVM';\n                }\n              }\n\n              const manufacturer = result.manufacturer.toLowerCase();\n\n              if (manufacturer.startsWith('vmware') || manufacturer.startsWith('qemu') || manufacturer === 'xen') {\n                result.virtual = true;\n\n                if (manufacturer.startsWith('vmware')) {\n                  result.virtualHost = 'VMware';\n                }\n\n                if (manufacturer.startsWith('xen')) {\n                  result.virtualHost = 'Xen';\n                }\n\n                if (manufacturer.startsWith('qemu')) {\n                  result.virtualHost = 'KVM';\n                }\n              }\n\n              util.powerShell('Get-WmiObject MS_Systeminformation -Namespace \"root/wmi\" | select systemsku | fl ').then((stdout, error) => {\n                if (!error) {\n                  let lines = stdout.split('\\r\\n');\n                  result.sku = util.getValue(lines, 'systemsku', ':');\n                }\n\n                if (!result.virtual) {\n                  util.powerShell('Get-WmiObject Win32_bios | select Version, SerialNumber, SMBIOSBIOSVersion').then((stdout, error) => {\n                    if (!error) {\n                      let lines = stdout.toString();\n\n                      if (lines.indexOf('VRTUAL') >= 0 || lines.indexOf('A M I ') >= 0 || lines.indexOf('VirtualBox') >= 0 || lines.indexOf('VMWare') >= 0 || lines.indexOf('Xen') >= 0) {\n                        result.virtual = true;\n\n                        if (lines.indexOf('VirtualBox') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'VirtualBox';\n                        }\n\n                        if (lines.indexOf('VMware') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'VMware';\n                        }\n\n                        if (lines.indexOf('Xen') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'Xen';\n                        }\n\n                        if (lines.indexOf('VRTUAL') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'Hyper-V';\n                        }\n\n                        if (lines.indexOf('A M I') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'Virtual PC';\n                        }\n                      }\n\n                      if (callback) {\n                        callback(result);\n                      }\n\n                      resolve(result);\n                    } else {\n                      if (callback) {\n                        callback(result);\n                      }\n\n                      resolve(result);\n                    }\n                  });\n                } else {\n                  if (callback) {\n                    callback(result);\n                  }\n\n                  resolve(result);\n                }\n              });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.system = system;\n\nfunction bios(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = {\n        vendor: '',\n        version: '',\n        releaseDate: '',\n        revision: ''\n      };\n      let cmd = '';\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        if (process.arch === 'arm') {\n          cmd = 'cat /proc/cpuinfo | grep Serial';\n        } else {\n          cmd = 'export LC_ALL=C; dmidecode -t bios 2>/dev/null; unset LC_ALL';\n        }\n\n        exec(cmd, function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.vendor = util.getValue(lines, 'Vendor');\n          result.version = util.getValue(lines, 'Version');\n          let datetime = util.getValue(lines, 'Release Date');\n          result.releaseDate = util.parseDateTime(datetime).date;\n          result.revision = util.getValue(lines, 'BIOS Revision');\n          result.serial = util.getValue(lines, 'SerialNumber');\n          let language = util.getValue(lines, 'Currently Installed Language').split('|')[0];\n\n          if (language) {\n            result.language = language;\n          }\n\n          if (lines.length && stdout.toString().indexOf('Characteristics:') >= 0) {\n            const features = [];\n            lines.forEach(line => {\n              if (line.indexOf(' is supported') >= 0) {\n                const feature = line.split(' is supported')[0].trim();\n                features.push(feature);\n              }\n            });\n            result.features = features;\n          } // Non-Root values\n\n\n          const cmd = `echo -n \"bios_date: \"; cat /sys/devices/virtual/dmi/id/bios_date 2>/dev/null; echo;\n            echo -n \"bios_vendor: \"; cat /sys/devices/virtual/dmi/id/bios_vendor 2>/dev/null; echo;\n            echo -n \"bios_version: \"; cat /sys/devices/virtual/dmi/id/bios_version 2>/dev/null; echo;`;\n\n          try {\n            lines = execSync(cmd).toString().split('\\n');\n            result.vendor = !result.vendor ? util.getValue(lines, 'bios_vendor') : result.vendor;\n            result.version = !result.version ? util.getValue(lines, 'bios_version') : result.version;\n            datetime = util.getValue(lines, 'bios_date');\n            result.releaseDate = !result.releaseDate ? util.parseDateTime(datetime).date : result.releaseDate;\n          } catch (e) {\n            util.noop();\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        result.vendor = 'Apple Inc.';\n        exec('system_profiler SPHardwareDataType -json', function (error, stdout) {\n          try {\n            const hardwareData = JSON.parse(stdout.toString());\n\n            if (hardwareData && hardwareData.SPHardwareDataType && hardwareData.SPHardwareDataType.length) {\n              let bootRomVersion = hardwareData.SPHardwareDataType[0].boot_rom_version;\n              bootRomVersion = bootRomVersion ? bootRomVersion.split('(')[0].trim() : null;\n              result.version = bootRomVersion;\n            }\n          } catch (e) {\n            util.noop();\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        result.vendor = 'Sun Microsystems';\n\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n\n      if (_windows) {\n        try {\n          util.powerShell('Get-WmiObject Win32_bios | select Description,Version,Manufacturer,ReleaseDate,BuildNumber,SerialNumber | fl').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.toString().split('\\r\\n');\n              const description = util.getValue(lines, 'description', ':');\n\n              if (description.indexOf(' Version ') !== -1) {\n                // ... Phoenix ROM BIOS PLUS Version 1.10 A04\n                result.vendor = description.split(' Version ')[0].trim();\n                result.version = description.split(' Version ')[1].trim();\n              } else if (description.indexOf(' Ver: ') !== -1) {\n                // ... BIOS Date: 06/27/16 17:50:16 Ver: 1.4.5\n                result.vendor = util.getValue(lines, 'manufacturer', ':');\n                result.version = description.split(' Ver: ')[1].trim();\n              } else {\n                result.vendor = util.getValue(lines, 'manufacturer', ':');\n                result.version = util.getValue(lines, 'version', ':');\n              }\n\n              result.releaseDate = util.getValue(lines, 'releasedate', ':');\n\n              if (result.releaseDate.length >= 10) {\n                result.releaseDate = result.releaseDate.substr(0, 4) + '-' + result.releaseDate.substr(4, 2) + '-' + result.releaseDate.substr(6, 2);\n              }\n\n              result.revision = util.getValue(lines, 'buildnumber', ':');\n              result.serial = util.getValue(lines, 'serialnumber', ':');\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.bios = bios;\n\nfunction baseboard(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = {\n        manufacturer: '',\n        model: '',\n        version: '',\n        serial: '-',\n        assetTag: '-',\n        memMax: null,\n        memSlots: null\n      };\n      let cmd = '';\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        if (process.arch === 'arm') {\n          cmd = 'cat /proc/cpuinfo | grep Serial'; // 'BCM2709', 'BCM2835', 'BCM2708' -->\n        } else {\n          cmd = 'export LC_ALL=C; dmidecode -t 2 2>/dev/null; unset LC_ALL';\n        }\n\n        const workload = [];\n        workload.push(execPromise(cmd));\n        workload.push(execPromise('export LC_ALL=C; dmidecode -t memory 2>/dev/null'));\n        util.promiseAll(workload).then(data => {\n          let lines = data.results[0] ? data.results[0].toString().split('\\n') : [''];\n          result.manufacturer = util.getValue(lines, 'Manufacturer');\n          result.model = util.getValue(lines, 'Product Name');\n          result.version = util.getValue(lines, 'Version');\n          result.serial = util.getValue(lines, 'Serial Number');\n          result.assetTag = util.getValue(lines, 'Asset Tag'); // Non-Root values\n\n          const cmd = `echo -n \"board_asset_tag: \"; cat /sys/devices/virtual/dmi/id/board_asset_tag 2>/dev/null; echo;\n            echo -n \"board_name: \"; cat /sys/devices/virtual/dmi/id/board_name 2>/dev/null; echo;\n            echo -n \"board_serial: \"; cat /sys/devices/virtual/dmi/id/board_serial 2>/dev/null; echo;\n            echo -n \"board_vendor: \"; cat /sys/devices/virtual/dmi/id/board_vendor 2>/dev/null; echo;\n            echo -n \"board_version: \"; cat /sys/devices/virtual/dmi/id/board_version 2>/dev/null; echo;`;\n\n          try {\n            lines = execSync(cmd).toString().split('\\n');\n            result.manufacturer = !result.manufacturer ? util.getValue(lines, 'board_vendor') : result.manufacturer;\n            result.model = !result.model ? util.getValue(lines, 'board_name') : result.model;\n            result.version = !result.version ? util.getValue(lines, 'board_version') : result.version;\n            result.serial = !result.serial ? util.getValue(lines, 'board_serial') : result.serial;\n            result.assetTag = !result.assetTag ? util.getValue(lines, 'board_asset_tag') : result.assetTag;\n          } catch (e) {\n            util.noop();\n          }\n\n          if (result.serial.toLowerCase().indexOf('o.e.m.') !== -1) {\n            result.serial = '-';\n          }\n\n          if (result.assetTag.toLowerCase().indexOf('o.e.m.') !== -1) {\n            result.assetTag = '-';\n          } // mem\n\n\n          lines = data.results[1] ? data.results[1].toString().split('\\n') : [''];\n          result.memMax = util.toInt(util.getValue(lines, 'Maximum Capacity')) * 1024 * 1024 * 1024 || null;\n          result.memSlots = util.toInt(util.getValue(lines, 'Number Of Devices')) || null; // raspberry\n\n          let linesRpi = '';\n\n          try {\n            linesRpi = fs.readFileSync('/proc/cpuinfo').toString().split('\\n');\n          } catch (e) {\n            util.noop();\n          }\n\n          const hardware = util.getValue(linesRpi, 'hardware');\n\n          if (hardware.startsWith('BCM')) {\n            const rpi = util.decodePiCpuinfo(linesRpi);\n            result.manufacturer = rpi.manufacturer;\n            result.model = 'Raspberry Pi';\n            result.serial = rpi.serial;\n            result.version = rpi.type + ' - ' + rpi.revision;\n            result.memMax = os.totalmem();\n            result.memSlots = 0;\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        const workload = [];\n        workload.push(execPromise('ioreg -c IOPlatformExpertDevice -d 2'));\n        workload.push(execPromise('system_profiler SPMemoryDataType'));\n        util.promiseAll(workload).then(data => {\n          let lines = data.results[0] ? data.results[0].toString().replace(/[<>\"]/g, '').split('\\n') : [''];\n          result.manufacturer = util.getValue(lines, 'manufacturer', '=', true);\n          result.model = util.getValue(lines, 'model', '=', true);\n          result.version = util.getValue(lines, 'version', '=', true);\n          result.serial = util.getValue(lines, 'ioplatformserialnumber', '=', true);\n          result.assetTag = util.getValue(lines, 'board-id', '=', true); // mem\n\n          let devices = data.results[1] ? data.results[1].toString().split('        BANK ') : [''];\n\n          if (devices.length === 1) {\n            devices = data.results[1] ? data.results[1].toString().split('        DIMM') : [''];\n          }\n\n          devices.shift();\n          result.memSlots = devices.length;\n\n          if (os.arch() === 'arm64') {\n            result.memSlots = 0;\n            result.memMax = os.totalmem();\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n\n      if (_windows) {\n        try {\n          const workload = [];\n          workload.push(util.powerShell('Get-WmiObject Win32_baseboard | select Model,Manufacturer,Product,Version,SerialNumber,PartNumber,SKU | fl'));\n          workload.push(util.powerShell('Get-WmiObject Win32_physicalmemoryarray | select MaxCapacity, MemoryDevices | fl'));\n          util.promiseAll(workload).then(data => {\n            let lines = data.results[0] ? data.results[0].toString().split('\\r\\n') : [''];\n            result.manufacturer = util.getValue(lines, 'manufacturer', ':');\n            result.model = util.getValue(lines, 'model', ':');\n\n            if (!result.model) {\n              result.model = util.getValue(lines, 'product', ':');\n            }\n\n            result.version = util.getValue(lines, 'version', ':');\n            result.serial = util.getValue(lines, 'serialnumber', ':');\n            result.assetTag = util.getValue(lines, 'partnumber', ':');\n\n            if (!result.assetTag) {\n              result.assetTag = util.getValue(lines, 'sku', ':');\n            } // memphysical\n\n\n            lines = data.results[1] ? data.results[1].toString().split('\\r\\n') : [''];\n            result.memMax = util.toInt(util.getValue(lines, 'MaxCapacity', ':')) || null;\n            result.memSlots = util.toInt(util.getValue(lines, 'MemoryDevices', ':')) || null;\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.baseboard = baseboard;\n\nfunction chassis(callback) {\n  const chassisTypes = ['Other', 'Unknown', 'Desktop', 'Low Profile Desktop', 'Pizza Box', 'Mini Tower', 'Tower', 'Portable', 'Laptop', 'Notebook', 'Hand Held', 'Docking Station', 'All in One', 'Sub Notebook', 'Space-Saving', 'Lunch Box', 'Main System Chassis', 'Expansion Chassis', 'SubChassis', 'Bus Expansion Chassis', 'Peripheral Chassis', 'Storage Chassis', 'Rack Mount Chassis', 'Sealed-Case PC', 'Multi-System Chassis', 'Compact PCI', 'Advanced TCA', 'Blade', 'Blade Enclosure', 'Tablet', 'Convertible', 'Detachable', 'IoT Gateway ', 'Embedded PC', 'Mini PC', 'Stick PC'];\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = {\n        manufacturer: '',\n        model: '',\n        type: '',\n        version: '',\n        serial: '-',\n        assetTag: '-',\n        sku: ''\n      };\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        const cmd = `echo -n \"chassis_asset_tag: \"; cat /sys/devices/virtual/dmi/id/chassis_asset_tag 2>/dev/null; echo;\n            echo -n \"chassis_serial: \"; cat /sys/devices/virtual/dmi/id/chassis_serial 2>/dev/null; echo;\n            echo -n \"chassis_type: \"; cat /sys/devices/virtual/dmi/id/chassis_type 2>/dev/null; echo;\n            echo -n \"chassis_vendor: \"; cat /sys/devices/virtual/dmi/id/chassis_vendor 2>/dev/null; echo;\n            echo -n \"chassis_version: \"; cat /sys/devices/virtual/dmi/id/chassis_version 2>/dev/null; echo;`;\n        exec(cmd, function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.manufacturer = util.getValue(lines, 'chassis_vendor');\n          const ctype = parseInt(util.getValue(lines, 'chassis_type').replace(/\\D/g, ''));\n          result.type = ctype && !isNaN(ctype) && ctype < chassisTypes.length ? chassisTypes[ctype - 1] : '';\n          result.version = util.getValue(lines, 'chassis_version');\n          result.serial = util.getValue(lines, 'chassis_serial');\n          result.assetTag = util.getValue(lines, 'chassis_asset_tag');\n\n          if (result.manufacturer.toLowerCase().indexOf('o.e.m.') !== -1) {\n            result.manufacturer = '-';\n          }\n\n          if (result.version.toLowerCase().indexOf('o.e.m.') !== -1) {\n            result.version = '-';\n          }\n\n          if (result.serial.toLowerCase().indexOf('o.e.m.') !== -1) {\n            result.serial = '-';\n          }\n\n          if (result.assetTag.toLowerCase().indexOf('o.e.m.') !== -1) {\n            result.assetTag = '-';\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('ioreg -c IOPlatformExpertDevice -d 2', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().replace(/[<>\"]/g, '').split('\\n');\n            result.manufacturer = util.getValue(lines, 'manufacturer', '=', true);\n            result.model = util.getValue(lines, 'model', '=', true);\n            result.version = util.getValue(lines, 'version', '=', true);\n            result.serial = util.getValue(lines, 'ioplatformserialnumber', '=', true);\n            result.assetTag = util.getValue(lines, 'board-id', '=', true);\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n\n      if (_windows) {\n        try {\n          util.powerShell('Get-WmiObject Win32_SystemEnclosure | select Model,Manufacturer,ChassisTypes,Version,SerialNumber,PartNumber,SKU | fl').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.toString().split('\\r\\n');\n              result.manufacturer = util.getValue(lines, 'manufacturer', ':');\n              result.model = util.getValue(lines, 'model', ':');\n              const ctype = parseInt(util.getValue(lines, 'ChassisTypes', ':').replace(/\\D/g, ''));\n              result.type = ctype && !isNaN(ctype) && ctype < chassisTypes.length ? chassisTypes[ctype - 1] : '';\n              result.version = util.getValue(lines, 'version', ':');\n              result.serial = util.getValue(lines, 'serialnumber', ':');\n              result.assetTag = util.getValue(lines, 'partnumber', ':');\n              result.sku = util.getValue(lines, 'sku', ':');\n\n              if (result.manufacturer.toLowerCase().indexOf('o.e.m.') !== -1) {\n                result.manufacturer = '-';\n              }\n\n              if (result.version.toLowerCase().indexOf('o.e.m.') !== -1) {\n                result.version = '-';\n              }\n\n              if (result.serial.toLowerCase().indexOf('o.e.m.') !== -1) {\n                result.serial = '-';\n              }\n\n              if (result.assetTag.toLowerCase().indexOf('o.e.m.') !== -1) {\n                result.assetTag = '-';\n              }\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.chassis = chassis;","'use strict'; // @ts-check\n// ==================================================================================\n// usb.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 16. usb\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec; // const execSync = require('child_process').execSync;\n\n\nconst util = require('./util'); // const fs = require('fs');\n\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos';\n\nfunction getLinuxUsbType(type, name) {\n  let result = type;\n  const str = (name + ' ' + type).toLowerCase();\n\n  if (str.indexOf('camera') >= 0) {\n    result = 'Camera';\n  } else if (str.indexOf('hub') >= 0) {\n    result = 'Hub';\n  } else if (str.indexOf('keybrd') >= 0) {\n    result = 'Keyboard';\n  } else if (str.indexOf('keyboard') >= 0) {\n    result = 'Keyboard';\n  } else if (str.indexOf('mouse') >= 0) {\n    result = 'Mouse';\n  } else if (str.indexOf('stora') >= 0) {\n    result = 'Storage';\n  } else if (str.indexOf('mic') >= 0) {\n    result = 'Microphone';\n  } else if (str.indexOf('headset') >= 0) {\n    result = 'Audio';\n  } else if (str.indexOf('audio') >= 0) {\n    result = 'Audio';\n  }\n\n  return result;\n}\n\nfunction parseLinuxUsb(usb) {\n  const result = {};\n  const lines = usb.split('\\n');\n\n  if (lines && lines.length && lines[0].indexOf('Device') >= 0) {\n    const parts = lines[0].split(' ');\n    result.bus = parseInt(parts[0], 10);\n\n    if (parts[2]) {\n      result.deviceId = parseInt(parts[2], 10);\n    } else {\n      result.deviceId = null;\n    }\n  } else {\n    result.bus = null;\n    result.deviceId = null;\n  }\n\n  const idVendor = util.getValue(lines, 'idVendor', ' ', true).trim();\n  let vendorParts = idVendor.split(' ');\n  vendorParts.shift();\n  const vendor = vendorParts.join(' ');\n  const idProduct = util.getValue(lines, 'idProduct', ' ', true).trim();\n  let productParts = idProduct.split(' ');\n  productParts.shift();\n  const product = productParts.join(' ');\n  const interfaceClass = util.getValue(lines, 'bInterfaceClass', ' ', true).trim();\n  let interfaceClassParts = interfaceClass.split(' ');\n  interfaceClassParts.shift();\n  const usbType = interfaceClassParts.join(' ');\n  const iManufacturer = util.getValue(lines, 'iManufacturer', ' ', true).trim();\n  let iManufacturerParts = iManufacturer.split(' ');\n  iManufacturerParts.shift();\n  const manufacturer = iManufacturerParts.join(' ');\n  result.id = (idVendor.startsWith('0x') ? idVendor.split(' ')[0].substr(2, 10) : '') + ':' + (idProduct.startsWith('0x') ? idProduct.split(' ')[0].substr(2, 10) : '');\n  result.name = product;\n  result.type = getLinuxUsbType(usbType, product);\n  result.removable = null;\n  result.vendor = vendor;\n  result.manufacturer = manufacturer;\n  result.maxPower = util.getValue(lines, 'MaxPower', ' ', true);\n  result.serialNumber = null;\n  return result;\n} // bus\n// deviceId\n// id\n// name(product)\n// type(bInterfaceClass)\n// removable / hotplug\n// vendor\n// manufacturer\n// maxpower(linux)\n\n\nfunction getDarwinUsbType(name) {\n  let result = '';\n\n  if (name.indexOf('camera') >= 0) {\n    result = 'Camera';\n  } else if (name.indexOf('touch bar') >= 0) {\n    result = 'Touch Bar';\n  } else if (name.indexOf('controller') >= 0) {\n    result = 'Controller';\n  } else if (name.indexOf('headset') >= 0) {\n    result = 'Audio';\n  } else if (name.indexOf('keyboard') >= 0) {\n    result = 'Keyboard';\n  } else if (name.indexOf('trackpad') >= 0) {\n    result = 'Trackpad';\n  } else if (name.indexOf('sensor') >= 0) {\n    result = 'Sensor';\n  } else if (name.indexOf('bthusb') >= 0) {\n    result = 'Bluetooth';\n  } else if (name.indexOf('bth') >= 0) {\n    result = 'Bluetooth';\n  } else if (name.indexOf('rfcomm') >= 0) {\n    result = 'Bluetooth';\n  } else if (name.indexOf('usbhub') >= 0) {\n    result = 'Hub';\n  } else if (name.indexOf(' hub') >= 0) {\n    result = 'Hub';\n  } else if (name.indexOf('mouse') >= 0) {\n    result = 'Mouse';\n  } else if (name.indexOf('mic') >= 0) {\n    result = 'Microphone';\n  } else if (name.indexOf('removable') >= 0) {\n    result = 'Storage';\n  }\n\n  return result;\n}\n\nfunction parseDarwinUsb(usb, id) {\n  const result = {};\n  result.id = id;\n  usb = usb.replace(/ \\|/g, '');\n  usb = usb.trim();\n  let lines = usb.split('\\n');\n  lines.shift();\n\n  try {\n    for (let i = 0; i < lines.length; i++) {\n      lines[i] = lines[i].trim();\n      lines[i] = lines[i].replace(/=/g, ':');\n\n      if (lines[i] !== '{' && lines[i] !== '}' && lines[i + 1] && lines[i + 1].trim() !== '}') {\n        lines[i] = lines[i] + ',';\n      }\n\n      lines[i] = lines[i].replace(': Yes,', ': \"Yes\",');\n      lines[i] = lines[i].replace(': No,', ': \"No\",');\n    }\n\n    const usbObj = JSON.parse(lines.join('\\n'));\n    const removableDrive = usbObj['Built-In'].toLowerCase() !== 'yes' && usbObj['non-removable'].toLowerCase() === 'no';\n    result.bus = null;\n    result.deviceId = null;\n    result.id = usbObj['USB Address'] || null;\n    result.name = usbObj['kUSBProductString'] || usbObj['USB Product Name'] || null;\n    result.type = getDarwinUsbType((usbObj['kUSBProductString'] || usbObj['USB Product Name'] || '').toLowerCase() + (removableDrive ? ' removable' : ''));\n    result.removable = usbObj['non-removable'].toLowerCase() === 'no';\n    result.vendor = usbObj['kUSBVendorString'] || usbObj['USB Vendor Name'] || null;\n    result.manufacturer = usbObj['kUSBVendorString'] || usbObj['USB Vendor Name'] || null;\n    result.maxPower = null;\n    result.serialNumber = usbObj['kUSBSerialNumberString'] || null;\n\n    if (result.name) {\n      return result;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    return null;\n  }\n} // function getWindowsUsbType(service) {\n//   let result = ''\n//   if (service.indexOf('usbhub3') >= 0) { result = 'Hub'; }\n//   else if (service.indexOf('usbstor') >= 0) { result = 'Storage'; }\n//   else if (service.indexOf('hidusb') >= 0) { result = 'Input'; }\n//   else if (service.indexOf('usbccgp') >= 0) { result = 'Controller'; }\n//   else if (service.indexOf('usbxhci') >= 0) { result = 'Controller'; }\n//   else if (service.indexOf('usbehci') >= 0) { result = 'Controller'; }\n//   else if (service.indexOf('kbdhid') >= 0) { result = 'Keyboard'; }\n//   else if (service.indexOf('keyboard') >= 0) { result = 'Keyboard'; }\n//   else if (service.indexOf('pointing') >= 0) { result = 'Mouse'; }\n//   else if (service.indexOf('disk') >= 0) { result = 'Storage'; }\n//   else if (service.indexOf('usbhub') >= 0) { result = 'Hub'; }\n//   else if (service.indexOf('bthusb') >= 0) { result = ''; }\n//   else if (service.indexOf('bth') >= 0) { result = ''; }\n//   else if (service.indexOf('rfcomm') >= 0) { result = ''; }\n//   return result;\n// }\n\n\nfunction getWindowsUsbTypeCreation(creationclass, name) {\n  let result = '';\n\n  if (name.indexOf('storage') >= 0) {\n    result = 'Storage';\n  } else if (name.indexOf('speicher') >= 0) {\n    result = 'Storage';\n  } else if (creationclass.indexOf('usbhub') >= 0) {\n    result = 'Hub';\n  } else if (creationclass.indexOf('storage') >= 0) {\n    result = 'Storage';\n  } else if (creationclass.indexOf('usbcontroller') >= 0) {\n    result = 'Controller';\n  } else if (creationclass.indexOf('keyboard') >= 0) {\n    result = 'Keyboard';\n  } else if (creationclass.indexOf('pointing') >= 0) {\n    result = 'Mouse';\n  } else if (creationclass.indexOf('disk') >= 0) {\n    result = 'Storage';\n  }\n\n  return result;\n}\n\nfunction parseWindowsUsb(lines, id) {\n  const usbType = getWindowsUsbTypeCreation(util.getValue(lines, 'CreationClassName', ':').toLowerCase(), util.getValue(lines, 'name', ':').toLowerCase());\n\n  if (usbType) {\n    const result = {};\n    result.bus = null;\n    result.deviceId = util.getValue(lines, 'deviceid', ':');\n    result.id = id;\n    result.name = util.getValue(lines, 'name', ':');\n    result.type = usbType;\n    result.removable = null;\n    result.vendor = null;\n    result.manufacturer = util.getValue(lines, 'Manufacturer', ':');\n    result.maxPower = null;\n    result.serialNumber = null;\n    return result;\n  } else {\n    return null;\n  }\n}\n\nfunction usb(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = [];\n\n      if (_linux) {\n        const cmd = 'export LC_ALL=C; lsusb -v 2>/dev/null; unset LC_ALL';\n        exec(cmd, {\n          maxBuffer: 1024 * 1024 * 128\n        }, function (error, stdout) {\n          if (!error) {\n            const parts = ('\\n\\n' + stdout.toString()).split('\\n\\nBus ');\n\n            for (let i = 1; i < parts.length; i++) {\n              const usb = parseLinuxUsb(parts[i]);\n              result.push(usb);\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        let cmd = 'ioreg -p IOUSB -c AppleUSBRootHubDevice -w0 -l';\n        exec(cmd, {\n          maxBuffer: 1024 * 1024 * 128\n        }, function (error, stdout) {\n          if (!error) {\n            const parts = stdout.toString().split(' +-o ');\n\n            for (let i = 1; i < parts.length; i++) {\n              const usb = parseDarwinUsb(parts[i]);\n\n              if (usb) {\n                result.push(usb);\n              }\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_windows) {\n        util.powerShell('Get-WmiObject CIM_LogicalDevice | where { $_.Description -match \"USB\"} | select Name,CreationClassName,DeviceId,Manufacturer | fl').then((stdout, error) => {\n          if (!error) {\n            const parts = stdout.toString().split(/\\n\\s*\\n/);\n\n            for (let i = 0; i < parts.length; i++) {\n              const usb = parseWindowsUsb(parts[i].split('\\n'), i);\n\n              if (usb) {\n                result.push(usb);\n              }\n            }\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }); // util.powerShell(\"gwmi Win32_USBControllerDevice |\\%{[wmi]($_.Dependent)}\").then(data => {\n        //   const parts = data.toString().split(/\\n\\s*\\n/);\n        //   for (let i = 0; i < parts.length; i++) {\n        //     const usb = parseWindowsUsb(parts[i].split('\\n'), i)\n        //     if (usb) {\n        //       result.push(usb)\n        //     }\n        //   }\n        //   if (callback) {\n        //     callback(result);\n        //   }\n        //   resolve(result);\n        // });\n      }\n\n      if (_sunos || _freebsd || _openbsd || _netbsd) {\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.usb = usb;","'use strict'; // @ts-check\n// ==================================================================================\n// users.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 11. Users/Sessions\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\n\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd';\n\nconst _sunos = _platform === 'sunos'; // let _winDateFormat = {\n//   dateFormat: '',\n//   dateSeperator: '',\n//   timeFormat: '',\n//   timeSeperator: '',\n//   amDesignator: '',\n//   pmDesignator: ''\n// };\n// --------------------------\n// array of users online = sessions\n// function getWinCulture() {\n//   return new Promise((resolve) => {\n//     process.nextTick(() => {\n//       if (!_winDateFormat.dateFormat) {\n//         util.powerShell('(get-culture).DateTimeFormat')\n//           .then(data => {\n//             let lines = data.toString().split('\\r\\n');\n//             _winDateFormat.dateFormat = util.getValue(lines, 'ShortDatePattern', ':');\n//             _winDateFormat.dateSeperator = util.getValue(lines, 'DateSeparator', ':');\n//             _winDateFormat.timeFormat = util.getValue(lines, 'ShortTimePattern', ':');\n//             _winDateFormat.timeSeperator = util.getValue(lines, 'TimeSeparator', ':');\n//             _winDateFormat.amDesignator = util.getValue(lines, 'AMDesignator', ':');\n//             _winDateFormat.pmDesignator = util.getValue(lines, 'PMDesignator', ':');\n//             resolve(_winDateFormat);\n//           })\n//           .catch(() => {\n//             resolve(_winDateFormat);\n//           });\n//       } else {\n//         resolve(_winDateFormat);\n//       }\n//     });\n//   });\n// }\n\n\nfunction parseUsersLinux(lines, phase) {\n  let result = [];\n  let result_who = [];\n  let result_w = {};\n  let w_first = true;\n  let w_header = [];\n  let w_pos = [];\n  let who_line = {};\n  let is_whopart = true;\n  lines.forEach(function (line) {\n    if (line === '---') {\n      is_whopart = false;\n    } else {\n      let l = line.replace(/ +/g, ' ').split(' '); // who part\n\n      if (is_whopart) {\n        result_who.push({\n          user: l[0],\n          tty: l[1],\n          date: l[2],\n          time: l[3],\n          ip: l && l.length > 4 ? l[4].replace(/\\(/g, '').replace(/\\)/g, '') : ''\n        });\n      } else {\n        // w part\n        if (w_first) {\n          // header\n          w_header = l;\n          w_header.forEach(function (item) {\n            w_pos.push(line.indexOf(item));\n          });\n          w_first = false;\n        } else {\n          // split by w_pos\n          result_w.user = line.substring(w_pos[0], w_pos[1] - 1).trim();\n          result_w.tty = line.substring(w_pos[1], w_pos[2] - 1).trim();\n          result_w.ip = line.substring(w_pos[2], w_pos[3] - 1).replace(/\\(/g, '').replace(/\\)/g, '').trim();\n          result_w.command = line.substring(w_pos[7], 1000).trim(); // find corresponding 'who' line\n\n          who_line = result_who.filter(function (obj) {\n            return obj.user.substring(0, 8).trim() === result_w.user && obj.tty === result_w.tty;\n          });\n\n          if (who_line.length === 1) {\n            result.push({\n              user: who_line[0].user,\n              tty: who_line[0].tty,\n              date: who_line[0].date,\n              time: who_line[0].time,\n              ip: who_line[0].ip,\n              command: result_w.command\n            });\n          }\n        }\n      }\n    }\n  });\n\n  if (result.length === 0 && phase === 2) {\n    return result_who;\n  } else {\n    return result;\n  }\n}\n\nfunction parseUsersDarwin(lines) {\n  let result = [];\n  let result_who = [];\n  let result_w = {};\n  let who_line = {};\n  let is_whopart = true;\n  lines.forEach(function (line) {\n    if (line === '---') {\n      is_whopart = false;\n    } else {\n      let l = line.replace(/ +/g, ' ').split(' '); // who part\n\n      if (is_whopart) {\n        result_who.push({\n          user: l[0],\n          tty: l[1],\n          date: '' + new Date().getFullYear() + '-' + ('0' + ('JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'.indexOf(l[2].toUpperCase()) / 3 + 1)).slice(-2) + '-' + ('0' + l[3]).slice(-2),\n          time: l[4]\n        });\n      } else {\n        // w part\n        // split by w_pos\n        result_w.user = l[0];\n        result_w.tty = l[1];\n        result_w.ip = l[2] !== '-' ? l[2] : '';\n        result_w.command = l.slice(5, 1000).join(' '); // find corresponding 'who' line\n\n        who_line = result_who.filter(function (obj) {\n          return obj.user === result_w.user && (obj.tty.substring(3, 1000) === result_w.tty || obj.tty === result_w.tty);\n        });\n\n        if (who_line.length === 1) {\n          result.push({\n            user: who_line[0].user,\n            tty: who_line[0].tty,\n            date: who_line[0].date,\n            time: who_line[0].time,\n            ip: result_w.ip,\n            command: result_w.command\n          });\n        }\n      }\n    }\n  });\n  return result;\n}\n\nfunction users(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = []; // linux\n\n      if (_linux) {\n        exec('who --ips; echo \"---\"; w | tail -n +2', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersLinux(lines, 1);\n\n            if (result.length === 0) {\n              exec('who; echo \"---\"; w | tail -n +2', function (error, stdout) {\n                if (!error) {\n                  // lines / split\n                  lines = stdout.toString().split('\\n');\n                  result = parseUsersLinux(lines, 2);\n                }\n\n                if (callback) {\n                  callback(result);\n                }\n\n                resolve(result);\n              });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          } else {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n        });\n      }\n\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('who; echo \"---\"; w -ih', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersDarwin(lines);\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_sunos) {\n        exec('who; echo \"---\"; w -h', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersDarwin(lines);\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('who; echo \"---\"; w -ih', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersDarwin(lines);\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      }\n\n      if (_windows) {\n        try {\n          // const workload = [];\n          // // workload.push(util.powerShell('Get-CimInstance -ClassName Win32_Account | fl *'));\n          // workload.push(util.powerShell('Get-WmiObject Win32_LogonSession | fl *'));\n          // workload.push(util.powerShell('Get-WmiObject Win32_LoggedOnUser | fl *'));\n          // workload.push(util.powerShell('Get-WmiObject Win32_Process -Filter \"name=\\'explorer.exe\\'\" | Select @{Name=\"domain\";Expression={$_.GetOwner().Domain}}, @{Name=\"username\";Expression={$_.GetOwner().User}} | fl'));\n          // Promise.all(\n          //   workload\n          // ).then(data => {\n          let cmd = 'Get-WmiObject Win32_LogonSession | select LogonId,StartTime | fl' + '; echo \\'#-#-#-#\\';';\n          cmd += 'Get-WmiObject Win32_LoggedOnUser | select antecedent,dependent | fl ' + '; echo \\'#-#-#-#\\';';\n          cmd += 'Get-WmiObject Win32_Process -Filter \"name=\\'explorer.exe\\'\" | Select @{Name=\"sessionid\";Expression={$_.SessionId}}, @{Name=\"domain\";Expression={$_.GetOwner().Domain}}, @{Name=\"username\";Expression={$_.GetOwner().User}} | fl' + '; echo \\'#-#-#-#\\';';\n          cmd += 'query user';\n          util.powerShell(cmd).then(data => {\n            // controller + vram\n            // let accounts = parseWinAccounts(data[0].split(/\\n\\s*\\n/));\n            if (data) {\n              data = data.split('#-#-#-#');\n              let sessions = parseWinSessions((data[0] || '').split(/\\n\\s*\\n/));\n              let loggedons = parseWinLoggedOn((data[1] || '').split(/\\n\\s*\\n/));\n              let queryUser = parseWinUsersQuery((data[3] || '').split('\\r\\n'));\n              let users = parseWinUsers((data[2] || '').split(/\\n\\s*\\n/), queryUser);\n\n              for (let id in loggedons) {\n                if ({}.hasOwnProperty.call(loggedons, id)) {\n                  loggedons[id].dateTime = {}.hasOwnProperty.call(sessions, id) ? sessions[id] : '';\n                }\n              }\n\n              users.forEach(user => {\n                let dateTime = '';\n\n                for (let id in loggedons) {\n                  if ({}.hasOwnProperty.call(loggedons, id)) {\n                    if (loggedons[id].user === user.user && (!dateTime || dateTime < loggedons[id].dateTime)) {\n                      dateTime = loggedons[id].dateTime;\n                    }\n                  }\n                }\n\n                result.push({\n                  user: user.user,\n                  tty: user.tty,\n                  date: `${dateTime.substr(0, 4)}-${dateTime.substr(4, 2)}-${dateTime.substr(6, 2)}`,\n                  time: `${dateTime.substr(8, 2)}:${dateTime.substr(10, 2)}`,\n                  ip: '',\n                  command: ''\n                });\n              });\n            }\n\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }); // util.powerShell('query user').then(stdout => {\n          //   if (stdout) {\n          //     // lines / split\n          //     let lines = stdout.toString().split('\\r\\n');\n          //     getWinCulture()\n          //       .then(culture => {\n          //         result = parseUsersWin(lines, culture);\n          //         if (callback) { callback(result); }\n          //         resolve(result);\n          //       });\n          //   } else {\n          //     if (callback) { callback(result); }\n          //     resolve(result);\n          //   }\n          // });\n        } catch (e) {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      }\n    });\n  });\n} // function parseWinAccounts(accountParts) {\n//   const accounts = [];\n//   accountParts.forEach(account => {\n//     const lines = account.split('\\r\\n');\n//     const name = util.getValue(lines, 'name', ':', true);\n//     const domain = util.getValue(lines, 'domain', ':', true);\n//     accounts.push(`${domain}\\${name}`);\n//   });\n//   return accounts;\n// }\n\n\nfunction parseWinSessions(sessionParts) {\n  const sessions = {};\n  sessionParts.forEach(session => {\n    const lines = session.split('\\r\\n');\n    const id = util.getValue(lines, 'LogonId');\n    const starttime = util.getValue(lines, 'starttime');\n\n    if (id) {\n      sessions[id] = starttime;\n    }\n  });\n  return sessions;\n}\n\nfunction fuzzyMatch(name1, name2) {\n  name1 = name1.toLowerCase();\n  name2 = name2.toLowerCase();\n  let eq = 0;\n  let len = name1.length;\n\n  if (name2.length > len) {\n    len = name2.length;\n  }\n\n  for (let i = 0; i < len; i++) {\n    const c1 = name1[i] || '';\n    const c2 = name2[i] || '';\n\n    if (c1 === c2) {\n      eq++;\n    }\n  }\n\n  return len > 10 ? eq / len > 0.9 : len > 0 ? eq / len > 0.8 : false;\n}\n\nfunction parseWinUsers(userParts, userQuery) {\n  const users = [];\n  userParts.forEach(user => {\n    const lines = user.split('\\r\\n');\n    const domain = util.getValue(lines, 'domain', ':', true);\n    const username = util.getValue(lines, 'username', ':', true);\n    const sessionid = util.getValue(lines, 'sessionid', ':', true);\n\n    if (username) {\n      const quser = userQuery.filter(item => fuzzyMatch(item.user, username));\n      users.push({\n        domain,\n        user: username,\n        tty: quser && quser[0] && quser[0].tty ? quser[0].tty : sessionid\n      });\n    }\n  });\n  return users;\n}\n\nfunction parseWinLoggedOn(loggedonParts) {\n  const loggedons = {};\n  loggedonParts.forEach(loggedon => {\n    const lines = loggedon.split('\\r\\n');\n    const antecendent = util.getValue(lines, 'antecedent', ':', true);\n    let parts = antecendent.split(',');\n    const domainParts = parts.length > 1 ? parts[0].split('=') : [];\n    const nameParts = parts.length > 1 ? parts[1].split('=') : [];\n    const domain = domainParts.length > 1 ? domainParts[1].replace(/\"/g, '') : '';\n    const name = nameParts.length > 1 ? nameParts[1].replace(/\"/g, '') : '';\n    const dependent = util.getValue(lines, 'dependent', ':', true);\n    parts = dependent.split('=');\n    const id = parts.length > 1 ? parts[1].replace(/\"/g, '') : '';\n\n    if (id) {\n      loggedons[id] = {\n        domain,\n        user: name\n      };\n    }\n  });\n  return loggedons;\n}\n\nfunction parseWinUsersQuery(lines) {\n  lines = lines.filter(item => item);\n  let result = [];\n  const header = lines[0];\n  const headerDelimiter = [];\n\n  if (header) {\n    const start = header[0] === ' ' ? 1 : 0;\n    headerDelimiter.push(start - 1);\n    let nextSpace = 0;\n\n    for (let i = start + 1; i < header.length; i++) {\n      if (header[i] === ' ' && (header[i - 1] === ' ' || header[i - 1] === '.')) {\n        nextSpace = i;\n      } else {\n        if (nextSpace) {\n          headerDelimiter.push(nextSpace);\n          nextSpace = 0;\n        }\n      }\n    }\n\n    for (let i = 1; i < lines.length; i++) {\n      if (lines[i].trim()) {\n        const user = lines[i].substring(headerDelimiter[0] + 1, headerDelimiter[1]).trim() || '';\n        const tty = lines[i].substring(headerDelimiter[1] + 1, headerDelimiter[2] - 2).trim() || ''; // const dateTime = util.parseDateTime(lines[i].substring(headerDelimiter[5] + 1, 2000).trim(), culture) || '';\n\n        result.push({\n          user: user,\n          tty: tty\n        });\n      }\n    }\n  }\n\n  return result;\n}\n\nexports.users = users;","'use strict'; // @ts-check\n// ==================================================================================\n// utils.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 0. helper functions\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst spawn = require('child_process').spawn;\n\nconst exec = require('child_process').exec;\n\nconst execSync = require('child_process').execSync;\n\nconst util = require('util');\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nconst _freebsd = _platform === 'freebsd';\n\nconst _openbsd = _platform === 'openbsd';\n\nconst _netbsd = _platform === 'netbsd'; // const _sunos = (_platform === 'sunos');\n\n\nlet _cores = 0;\nlet wmicPath = '';\nlet codepage = '';\nlet _smartMonToolsInstalled = null;\nconst WINDIR = process.env.WINDIR || 'C:\\\\Windows'; // powerShell\n\nlet _psChild;\n\nlet _psResult = '';\nlet _psCmds = [];\nlet _psPersistent = false;\nconst _psToUTF8 = '$OutputEncoding = [System.Console]::OutputEncoding = [System.Console]::InputEncoding = [System.Text.Encoding]::UTF8 ; ';\nconst _psCmdStart = '--###START###--';\nconst _psError = '--ERROR--';\nconst _psCmdSeperator = '--###ENDCMD###--';\nconst _psIdSeperator = '--##ID##--';\nconst execOptsWin = {\n  windowsHide: true,\n  maxBuffer: 1024 * 20000,\n  encoding: 'UTF-8',\n  env: util._extend({}, process.env, {\n    LANG: 'en_US.UTF-8'\n  })\n};\n\nfunction toInt(value) {\n  let result = parseInt(value, 10);\n\n  if (isNaN(result)) {\n    result = 0;\n  }\n\n  return result;\n}\n\nconst stringReplace = new String().replace;\nconst stringToLower = new String().toLowerCase;\nconst stringToString = new String().toString;\nconst stringSubstr = new String().substr;\nconst stringTrim = new String().trim;\nconst stringStartWith = new String().startsWith;\nconst mathMin = Math.min;\n\nfunction isFunction(functionToCheck) {\n  let getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\nfunction unique(obj) {\n  let uniques = [];\n  let stringify = {};\n\n  for (let i = 0; i < obj.length; i++) {\n    let keys = Object.keys(obj[i]);\n    keys.sort(function (a, b) {\n      return a - b;\n    });\n    let str = '';\n\n    for (let j = 0; j < keys.length; j++) {\n      str += JSON.stringify(keys[j]);\n      str += JSON.stringify(obj[i][keys[j]]);\n    }\n\n    if (!{}.hasOwnProperty.call(stringify, str)) {\n      uniques.push(obj[i]);\n      stringify[str] = true;\n    }\n  }\n\n  return uniques;\n}\n\nfunction sortByKey(array, keys) {\n  return array.sort(function (a, b) {\n    let x = '';\n    let y = '';\n    keys.forEach(function (key) {\n      x = x + a[key];\n      y = y + b[key];\n    });\n    return x < y ? -1 : x > y ? 1 : 0;\n  });\n}\n\nfunction cores() {\n  if (_cores === 0) {\n    _cores = os.cpus().length;\n  }\n\n  return _cores;\n}\n\nfunction getValue(lines, property, separator, trimmed, lineMatch) {\n  separator = separator || ':';\n  property = property.toLowerCase();\n  trimmed = trimmed || false;\n  lineMatch = lineMatch || false;\n\n  for (let i = 0; i < lines.length; i++) {\n    let line = lines[i].toLowerCase().replace(/\\t/g, '');\n\n    if (trimmed) {\n      line = line.trim();\n    }\n\n    if (line.startsWith(property) && (lineMatch ? line.match(property + separator) : true)) {\n      const parts = trimmed ? lines[i].trim().split(separator) : lines[i].split(separator);\n\n      if (parts.length >= 2) {\n        parts.shift();\n        return parts.join(separator).trim();\n      } else {\n        return '';\n      }\n    }\n  }\n\n  return '';\n}\n\nfunction decodeEscapeSequence(str, base) {\n  base = base || 16;\n  return str.replace(/\\\\x([0-9A-Fa-f]{2})/g, function () {\n    return String.fromCharCode(parseInt(arguments[1], base));\n  });\n}\n\nfunction detectSplit(str) {\n  let seperator = '';\n  let part = 0;\n  str.split('').forEach(element => {\n    if (element >= '0' && element <= '9') {\n      if (part === 1) {\n        part++;\n      }\n    } else {\n      if (part === 0) {\n        part++;\n      }\n\n      if (part === 1) {\n        seperator += element;\n      }\n    }\n  });\n  return seperator;\n}\n\nfunction parseTime(t, pmDesignator) {\n  pmDesignator = pmDesignator || '';\n  t = t.toUpperCase();\n  let hour = 0;\n  let min = 0;\n  let splitter = detectSplit(t);\n  let parts = t.split(splitter);\n\n  if (parts.length >= 2) {\n    if (parts[2]) {\n      parts[1] += parts[2];\n    }\n\n    let isPM = parts[1] && parts[1].toLowerCase().indexOf('pm') > -1 || parts[1].toLowerCase().indexOf('p.m.') > -1 || parts[1].toLowerCase().indexOf('p. m.') > -1 || parts[1].toLowerCase().indexOf('n') > -1 || parts[1].toLowerCase().indexOf('ch') > -1 || parts[1].toLowerCase().indexOf('ös') > -1 || pmDesignator && parts[1].toLowerCase().indexOf(pmDesignator) > -1;\n    hour = parseInt(parts[0], 10);\n    min = parseInt(parts[1], 10);\n    hour = isPM && hour < 12 ? hour + 12 : hour;\n    return ('0' + hour).substr(-2) + ':' + ('0' + min).substr(-2);\n  }\n}\n\nfunction parseDateTime(dt, culture) {\n  const result = {\n    date: '',\n    time: ''\n  };\n  culture = culture || {};\n  let dateFormat = (culture.dateFormat || '').toLowerCase();\n  let pmDesignator = culture.pmDesignator || '';\n  const parts = dt.split(' ');\n\n  if (parts[0]) {\n    if (parts[0].indexOf('/') >= 0) {\n      // Dateformat: mm/dd/yyyy or dd/mm/yyyy or dd/mm/yy or yyyy/mm/dd\n      const dtparts = parts[0].split('/');\n\n      if (dtparts.length === 3) {\n        if (dtparts[0].length === 4) {\n          // Dateformat: yyyy/mm/dd\n          result.date = dtparts[0] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[2]).substr(-2);\n        } else if (dtparts[2].length === 2) {\n          if (dateFormat.indexOf('/d/') > -1 || dateFormat.indexOf('/dd/') > -1) {\n            // Dateformat: mm/dd/yy\n            result.date = '20' + dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n          } else {\n            // Dateformat: dd/mm/yy\n            result.date = '20' + dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n          }\n        } else {\n          // Dateformat: mm/dd/yyyy or dd/mm/yyyy\n          const isEN = dt.toLowerCase().indexOf('pm') > -1 || dt.toLowerCase().indexOf('p.m.') > -1 || dt.toLowerCase().indexOf('p. m.') > -1 || dt.toLowerCase().indexOf('am') > -1 || dt.toLowerCase().indexOf('a.m.') > -1 || dt.toLowerCase().indexOf('a. m.') > -1;\n\n          if ((isEN || dateFormat.indexOf('/d/') > -1 || dateFormat.indexOf('/dd/') > -1) && dateFormat.indexOf('dd/') !== 0) {\n            // Dateformat: mm/dd/yyyy\n            result.date = dtparts[2] + '-' + ('0' + dtparts[0]).substr(-2) + '-' + ('0' + dtparts[1]).substr(-2);\n          } else {\n            // Dateformat: dd/mm/yyyy\n            result.date = dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n          }\n        }\n      }\n    }\n\n    if (parts[0].indexOf('.') >= 0) {\n      const dtparts = parts[0].split('.');\n\n      if (dtparts.length === 3) {\n        if (dateFormat.indexOf('.d.') > -1 || dateFormat.indexOf('.dd.') > -1) {\n          // Dateformat: mm.dd.yyyy\n          result.date = dtparts[2] + '-' + ('0' + dtparts[0]).substr(-2) + '-' + ('0' + dtparts[1]).substr(-2);\n        } else {\n          // Dateformat: dd.mm.yyyy\n          result.date = dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n        }\n      }\n    }\n\n    if (parts[0].indexOf('-') >= 0) {\n      // Dateformat: yyyy-mm-dd\n      const dtparts = parts[0].split('-');\n\n      if (dtparts.length === 3) {\n        result.date = dtparts[0] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[2]).substr(-2);\n      }\n    }\n  }\n\n  if (parts[1]) {\n    parts.shift();\n    let time = parts.join(' ');\n    result.time = parseTime(time, pmDesignator);\n  }\n\n  return result;\n}\n\nfunction parseHead(head, rights) {\n  let space = rights > 0;\n  let count = 1;\n  let from = 0;\n  let to = 0;\n  let result = [];\n\n  for (let i = 0; i < head.length; i++) {\n    if (count <= rights) {\n      // if (head[i] === ' ' && !space) {\n      if (/\\s/.test(head[i]) && !space) {\n        to = i - 1;\n        result.push({\n          from: from,\n          to: to + 1,\n          cap: head.substring(from, to + 1)\n        });\n        from = to + 2;\n        count++;\n      }\n\n      space = head[i] === ' ';\n    } else {\n      if (!/\\s/.test(head[i]) && space) {\n        to = i - 1;\n\n        if (from < to) {\n          result.push({\n            from: from,\n            to: to,\n            cap: head.substring(from, to)\n          });\n        }\n\n        from = to + 1;\n        count++;\n      }\n\n      space = head[i] === ' ';\n    }\n  }\n\n  to = 1000;\n  result.push({\n    from: from,\n    to: to,\n    cap: head.substring(from, to)\n  });\n  let len = result.length;\n\n  for (var i = 0; i < len; i++) {\n    if (result[i].cap.replace(/\\s/g, '').length === 0) {\n      if (i + 1 < len) {\n        result[i].to = result[i + 1].to;\n        result[i].cap = result[i].cap + result[i + 1].cap;\n        result.splice(i + 1, 1);\n        len = len - 1;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction findObjectByKey(array, key, value) {\n  for (let i = 0; i < array.length; i++) {\n    if (array[i][key] === value) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction getWmic() {\n  if (os.type() === 'Windows_NT' && !wmicPath) {\n    wmicPath = WINDIR + '\\\\system32\\\\wbem\\\\wmic.exe';\n\n    if (!fs.existsSync(wmicPath)) {\n      try {\n        const wmicPathArray = execSync('WHERE WMIC', execOptsWin).toString().split('\\r\\n');\n\n        if (wmicPathArray && wmicPathArray.length) {\n          wmicPath = wmicPathArray[0];\n        } else {\n          wmicPath = 'wmic';\n        }\n      } catch (e) {\n        wmicPath = 'wmic';\n      }\n    }\n  }\n\n  return wmicPath;\n}\n\nfunction wmic(command) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      try {\n        powerShell(getWmic() + ' ' + command).then(stdout => {\n          resolve(stdout, '');\n        });\n      } catch (e) {\n        resolve('', e);\n      }\n    });\n  });\n} // function wmic(command, options) {\n//   options = options || execOptsWin;\n//   return new Promise((resolve) => {\n//     process.nextTick(() => {\n//       try {\n//         exec(WINDIR + '\\\\system32\\\\chcp.com 65001 | ' + getWmic() + ' ' + command, options, function (error, stdout) {\n//           resolve(stdout, error);\n//         }).stdin.end();\n//       } catch (e) {\n//         resolve('', e);\n//       }\n//     });\n//   });\n// }\n\n\nfunction getVboxmanage() {\n  return _windows ? `\"${process.env.VBOX_INSTALL_PATH || process.env.VBOX_MSI_INSTALL_PATH}\\\\VBoxManage.exe\"` : 'vboxmanage';\n}\n\nfunction powerShellProceedResults(data) {\n  let id = '';\n  let parts;\n  let res = ''; // startID\n\n  if (data.indexOf(_psCmdStart) >= 0) {\n    parts = data.split(_psCmdStart);\n    const parts2 = parts[1].split(_psIdSeperator);\n    id = parts2[0];\n\n    if (parts2.length > 1) {\n      data = parts2.slice(1).join(_psIdSeperator);\n    }\n  } // result;\n\n\n  if (data.indexOf(_psCmdSeperator) >= 0) {\n    parts = data.split(_psCmdSeperator);\n    res = parts[0];\n  }\n\n  let remove = -1;\n\n  for (let i = 0; i < _psCmds.length; i++) {\n    if (_psCmds[i].id === id) {\n      remove = i; // console.log(`----- TIME  : ${(new Date() - _psCmds[i].start) * 0.001} s`);\n\n      _psCmds[i].callback(res);\n    }\n  }\n\n  if (remove >= 0) {\n    _psCmds.splice(remove, 1);\n  }\n}\n\nfunction powerShellStart() {\n  _psChild = spawn('powershell.exe', ['-NoLogo', '-InputFormat', 'Text', '-NoExit', '-Command', '-'], {\n    stdio: 'pipe',\n    windowsHide: true,\n    maxBuffer: 1024 * 20000,\n    encoding: 'UTF-8',\n    env: util._extend({}, process.env, {\n      LANG: 'en_US.UTF-8'\n    })\n  });\n\n  if (_psChild && _psChild.pid) {\n    _psPersistent = true;\n\n    _psChild.stdout.on('data', function (data) {\n      _psResult = _psResult + data.toString('utf8');\n\n      if (data.indexOf(_psCmdSeperator) >= 0) {\n        powerShellProceedResults(_psResult);\n        _psResult = '';\n      }\n    });\n\n    _psChild.stderr.on('data', function () {\n      powerShellProceedResults(_psResult + _psError);\n    });\n\n    _psChild.on('error', function () {\n      powerShellProceedResults(_psResult + _psError);\n    });\n\n    _psChild.on('close', function () {\n      _psChild.kill();\n    });\n  }\n}\n\nfunction powerShellRelease() {\n  try {\n    _psChild.stdin.write('exit' + os.EOL);\n\n    _psChild.stdin.end();\n\n    _psPersistent = false;\n  } catch (e) {\n    _psChild.kill();\n  }\n}\n\nfunction powerShell(cmd) {\n  if (_psPersistent) {\n    const id = Math.random().toString(36).substr(2, 10);\n    return new Promise(resolve => {\n      process.nextTick(() => {\n        function callback(data) {\n          resolve(data);\n        }\n\n        _psCmds.push({\n          id,\n          cmd,\n          callback,\n          start: new Date()\n        });\n\n        try {\n          if (_psChild && _psChild.pid) {\n            _psChild.stdin.write(_psToUTF8 + 'echo ' + _psCmdStart + id + _psIdSeperator + '; ' + os.EOL + cmd + os.EOL + 'echo ' + _psCmdSeperator + os.EOL);\n          }\n        } catch (e) {\n          resolve('');\n        }\n      });\n    });\n  } else {\n    let result = '';\n    return new Promise(resolve => {\n      process.nextTick(() => {\n        try {\n          // const start = new Date();\n          const child = spawn('powershell.exe', ['-NoLogo', '-InputFormat', 'Text', '-NoExit', '-ExecutionPolicy', 'Unrestricted', '-Command', '-'], {\n            stdio: 'pipe',\n            windowsHide: true,\n            maxBuffer: 1024 * 20000,\n            encoding: 'UTF-8',\n            env: util._extend({}, process.env, {\n              LANG: 'en_US.UTF-8'\n            })\n          });\n\n          if (child && !child.pid) {\n            child.on('error', function () {\n              resolve(result);\n            });\n          }\n\n          if (child && child.pid) {\n            child.stdout.on('data', function (data) {\n              result = result + data.toString('utf8');\n            });\n            child.stderr.on('data', function () {\n              child.kill();\n              resolve(result);\n            });\n            child.on('close', function () {\n              child.kill(); // console.log(`----- TIME  : ${(new Date() - start) * 0.001} s`);\n\n              resolve(result);\n            });\n            child.on('error', function () {\n              child.kill();\n              resolve(result);\n            });\n\n            try {\n              child.stdin.write(_psToUTF8 + cmd + os.EOL);\n              child.stdin.write('exit' + os.EOL);\n              child.stdin.end();\n            } catch (e) {\n              child.kill();\n              resolve(result);\n            }\n          } else {\n            resolve(result);\n          }\n        } catch (e) {\n          resolve(result);\n        }\n      });\n    });\n  }\n}\n\nfunction execSafe(cmd, args, options) {\n  let result = '';\n  options = options || {};\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      try {\n        const child = spawn(cmd, args, options);\n\n        if (child && !child.pid) {\n          child.on('error', function () {\n            resolve(result);\n          });\n        }\n\n        if (child && child.pid) {\n          child.stdout.on('data', function (data) {\n            result += data.toString();\n          });\n          child.on('close', function () {\n            child.kill();\n            resolve(result);\n          });\n          child.on('error', function () {\n            child.kill();\n            resolve(result);\n          });\n        } else {\n          resolve(result);\n        }\n      } catch (e) {\n        resolve(result);\n      }\n    });\n  });\n}\n\nfunction getCodepage() {\n  if (_windows) {\n    if (!codepage) {\n      try {\n        const stdout = execSync('chcp', execOptsWin);\n        const lines = stdout.toString().split('\\r\\n');\n        const parts = lines[0].split(':');\n        codepage = parts.length > 1 ? parts[1].replace('.', '') : '';\n      } catch (err) {\n        codepage = '437';\n      }\n    }\n\n    return codepage;\n  }\n\n  if (_linux || _darwin || _freebsd || _openbsd || _netbsd) {\n    if (!codepage) {\n      try {\n        const stdout = execSync('echo $LANG');\n        const lines = stdout.toString().split('\\r\\n');\n        const parts = lines[0].split('.');\n        codepage = parts.length > 1 ? parts[1].trim() : '';\n\n        if (!codepage) {\n          codepage = 'UTF-8';\n        }\n      } catch (err) {\n        codepage = 'UTF-8';\n      }\n    }\n\n    return codepage;\n  }\n}\n\nfunction smartMonToolsInstalled() {\n  if (_smartMonToolsInstalled !== null) {\n    return _smartMonToolsInstalled;\n  }\n\n  _smartMonToolsInstalled = false;\n\n  if (_windows) {\n    try {\n      const pathArray = execSync('WHERE smartctl 2>nul', execOptsWin).toString().split('\\r\\n');\n\n      if (pathArray && pathArray.length) {\n        _smartMonToolsInstalled = pathArray[0].indexOf(':\\\\') >= 0;\n      } else {\n        _smartMonToolsInstalled = false;\n      }\n    } catch (e) {\n      _smartMonToolsInstalled = false;\n    }\n  }\n\n  if (_linux || _darwin || _freebsd || _openbsd || _netbsd) {\n    const pathArray = execSync('which smartctl 2>/dev/null', execOptsWin).toString().split('\\r\\n');\n    _smartMonToolsInstalled = pathArray.length > 0;\n  }\n\n  return _smartMonToolsInstalled;\n}\n\nfunction isRaspberry() {\n  const PI_MODEL_NO = ['BCM2708', 'BCM2709', 'BCM2710', 'BCM2711', 'BCM2835', 'BCM2836', 'BCM2837', 'BCM2837B0'];\n  let cpuinfo = [];\n\n  try {\n    cpuinfo = fs.readFileSync('/proc/cpuinfo', {\n      encoding: 'utf8'\n    }).toString().split('\\n');\n  } catch (e) {\n    return false;\n  }\n\n  const hardware = getValue(cpuinfo, 'hardware');\n  return hardware && PI_MODEL_NO.indexOf(hardware) > -1;\n}\n\nfunction isRaspbian() {\n  let osrelease = [];\n\n  try {\n    osrelease = fs.readFileSync('/etc/os-release', {\n      encoding: 'utf8'\n    }).toString().split('\\n');\n  } catch (e) {\n    return false;\n  }\n\n  const id = getValue(osrelease, 'id', '=');\n  return id && id.indexOf('raspbian') > -1;\n}\n\nfunction execWin(cmd, opts, callback) {\n  if (!callback) {\n    callback = opts;\n    opts = execOptsWin;\n  }\n\n  let newCmd = 'chcp 65001 > nul && cmd /C ' + cmd + ' && chcp ' + codepage + ' > nul';\n  exec(newCmd, opts, function (error, stdout) {\n    callback(error, stdout);\n  });\n}\n\nfunction darwinXcodeExists() {\n  const cmdLineToolsExists = fs.existsSync('/Library/Developer/CommandLineTools/usr/bin/');\n  const xcodeAppExists = fs.existsSync('/Applications/Xcode.app/Contents/Developer/Tools');\n  const xcodeExists = fs.existsSync('/Library/Developer/Xcode/');\n  return cmdLineToolsExists || xcodeExists || xcodeAppExists;\n}\n\nfunction nanoSeconds() {\n  const time = process.hrtime();\n\n  if (!Array.isArray(time) || time.length !== 2) {\n    return 0;\n  }\n\n  return +time[0] * 1e9 + +time[1];\n}\n\nfunction countUniqueLines(lines, startingWith) {\n  startingWith = startingWith || '';\n  const uniqueLines = [];\n  lines.forEach(line => {\n    if (line.startsWith(startingWith)) {\n      if (uniqueLines.indexOf(line) === -1) {\n        uniqueLines.push(line);\n      }\n    }\n  });\n  return uniqueLines.length;\n}\n\nfunction countLines(lines, startingWith) {\n  startingWith = startingWith || '';\n  const uniqueLines = [];\n  lines.forEach(line => {\n    if (line.startsWith(startingWith)) {\n      uniqueLines.push(line);\n    }\n  });\n  return uniqueLines.length;\n}\n\nfunction sanitizeShellString(str, strict) {\n  if (typeof strict === 'undefined') {\n    strict = false;\n  }\n\n  const s = str || '';\n  let result = '';\n\n  for (let i = 0; i <= mathMin(s.length, 2000); i++) {\n    if (!(s[i] === undefined || s[i] === '>' || s[i] === '<' || s[i] === '*' || s[i] === '?' || s[i] === '[' || s[i] === ']' || s[i] === '|' || s[i] === '˚' || s[i] === '$' || s[i] === ';' || s[i] === '&' || s[i] === '(' || s[i] === ')' || s[i] === ']' || s[i] === '#' || s[i] === '\\\\' || s[i] === '\\t' || s[i] === '\\n' || s[i] === '\\'' || s[i] === '`' || s[i] === '\"' || s[i].length > 1 || strict && s[i] === '@' || strict && s[i] === ' ' || strict && s[i] == '{' || strict && s[i] == ')')) {\n      result = result + s[i];\n    }\n  }\n\n  return result;\n}\n\nfunction isPrototypePolluted() {\n  const s = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let notPolluted = true;\n  let st = '';\n  st.__proto__.replace = stringReplace;\n  st.__proto__.toLowerCase = stringToLower;\n  st.__proto__.toString = stringToString;\n  st.__proto__.substr = stringSubstr;\n  notPolluted = notPolluted || !(s.length === 62);\n  const ms = Date.now();\n\n  if (typeof ms === 'number' && ms > 1600000000000) {\n    const l = ms % 100 + 15;\n\n    for (let i = 0; i < l; i++) {\n      const r = Math.random() * 61.99999999 + 1;\n      const rs = parseInt(Math.floor(r).toString(), 10);\n      const rs2 = parseInt(r.toString().split('.')[0], 10);\n      const q = Math.random() * 61.99999999 + 1;\n      const qs = parseInt(Math.floor(q).toString(), 10);\n      const qs2 = parseInt(q.toString().split('.')[0], 10);\n      notPolluted = notPolluted && !(r === q);\n      notPolluted = notPolluted && rs === rs2 && qs === qs2;\n      st += s[rs - 1];\n    }\n\n    notPolluted = notPolluted && st.length === l; // string manipulation\n\n    let p = Math.random() * l * 0.9999999999;\n    let stm = st.substr(0, p) + ' ' + st.substr(p, 2000);\n    stm.__proto__.replace = stringReplace;\n    let sto = stm.replace(/ /g, '');\n    notPolluted = notPolluted && st === sto;\n    p = Math.random() * l * 0.9999999999;\n    stm = st.substr(0, p) + '{' + st.substr(p, 2000);\n    sto = stm.replace(/{/g, '');\n    notPolluted = notPolluted && st === sto;\n    p = Math.random() * l * 0.9999999999;\n    stm = st.substr(0, p) + '*' + st.substr(p, 2000);\n    sto = stm.replace(/\\*/g, '');\n    notPolluted = notPolluted && st === sto;\n    p = Math.random() * l * 0.9999999999;\n    stm = st.substr(0, p) + '$' + st.substr(p, 2000);\n    sto = stm.replace(/\\$/g, '');\n    notPolluted = notPolluted && st === sto; // lower\n\n    const stl = st.toLowerCase();\n    notPolluted = notPolluted && stl.length === l && stl[l - 1] && !stl[l];\n\n    for (let i = 0; i < l; i++) {\n      const s1 = st[i];\n      s1.__proto__.toLowerCase = stringToLower;\n      const s2 = stl ? stl[i] : '';\n      const s1l = s1.toLowerCase();\n      notPolluted = notPolluted && s1l[0] === s2 && s1l[0] && !s1l[1];\n    }\n  }\n\n  return !notPolluted;\n}\n\nfunction hex2bin(hex) {\n  return ('00000000' + parseInt(hex, 16).toString(2)).substr(-8);\n}\n\nfunction getFilesInPath(source) {\n  const lstatSync = fs.lstatSync;\n  const readdirSync = fs.readdirSync;\n  const join = path.join;\n\n  function isDirectory(source) {\n    return lstatSync(source).isDirectory();\n  }\n\n  function isFile(source) {\n    return lstatSync(source).isFile();\n  }\n\n  function getDirectories(source) {\n    return readdirSync(source).map(function (name) {\n      return join(source, name);\n    }).filter(isDirectory);\n  }\n\n  function getFiles(source) {\n    return readdirSync(source).map(function (name) {\n      return join(source, name);\n    }).filter(isFile);\n  }\n\n  function getFilesRecursively(source) {\n    try {\n      let dirs = getDirectories(source);\n      let files = dirs.map(function (dir) {\n        return getFilesRecursively(dir);\n      }).reduce(function (a, b) {\n        return a.concat(b);\n      }, []);\n      return files.concat(getFiles(source));\n    } catch (e) {\n      return [];\n    }\n  }\n\n  if (fs.existsSync(source)) {\n    return getFilesRecursively(source);\n  } else {\n    return [];\n  }\n}\n\nfunction decodePiCpuinfo(lines) {\n  // https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md\n  const oldRevisionCodes = {\n    '0002': {\n      type: 'B',\n      revision: '1.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0003': {\n      type: 'B',\n      revision: '1.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0004': {\n      type: 'B',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0005': {\n      type: 'B',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Qisda',\n      processor: 'BCM2835'\n    },\n    '0006': {\n      type: 'B',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0007': {\n      type: 'A',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0008': {\n      type: 'A',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0009': {\n      type: 'A',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Qisda',\n      processor: 'BCM2835'\n    },\n    '000d': {\n      type: 'B',\n      revision: '2.0',\n      memory: 512,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '000e': {\n      type: 'B',\n      revision: '2.0',\n      memory: 512,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '000f': {\n      type: 'B',\n      revision: '2.0',\n      memory: 512,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0010': {\n      type: 'B+',\n      revision: '1.2',\n      memory: 512,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0011': {\n      type: 'CM1',\n      revision: '1.0',\n      memory: 512,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0012': {\n      type: 'A+',\n      revision: '1.1',\n      memory: 256,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0013': {\n      type: 'B+',\n      revision: '1.2',\n      memory: 512,\n      manufacturer: 'Embest',\n      processor: 'BCM2835'\n    },\n    '0014': {\n      type: 'CM1',\n      revision: '1.0',\n      memory: 512,\n      manufacturer: 'Embest',\n      processor: 'BCM2835'\n    },\n    '0015': {\n      type: 'A+',\n      revision: '1.1',\n      memory: 256,\n      manufacturer: '512MB\tEmbest',\n      processor: 'BCM2835'\n    }\n  };\n  const processorList = ['BCM2835', 'BCM2836', 'BCM2837', 'BCM2711'];\n  const manufacturerList = ['Sony UK', 'Egoman', 'Embest', 'Sony Japan', 'Embest', 'Stadium'];\n  const typeList = {\n    '00': 'A',\n    '01': 'B',\n    '02': 'A+',\n    '03': 'B+',\n    '04': '2B',\n    '05': 'Alpha (early prototype)',\n    '06': 'CM1',\n    '08': '3B',\n    '09': 'Zero',\n    '0a': 'CM3',\n    '0c': 'Zero W',\n    '0d': '3B+',\n    '0e': '3A+',\n    '0f': 'Internal use only',\n    '10': 'CM3+',\n    '11': '4B',\n    '12': 'Zero 2 W',\n    '13': '400',\n    '14': 'CM4'\n  };\n  const revisionCode = getValue(lines, 'revision', ':', true);\n  const model = getValue(lines, 'model:', ':', true);\n  const serial = getValue(lines, 'serial', ':', true);\n  let result = {};\n\n  if ({}.hasOwnProperty.call(oldRevisionCodes, revisionCode)) {\n    // old revision codes\n    result = {\n      model,\n      serial,\n      revisionCode,\n      memory: oldRevisionCodes[revisionCode].memory,\n      manufacturer: oldRevisionCodes[revisionCode].manufacturer,\n      processor: oldRevisionCodes[revisionCode].processor,\n      type: oldRevisionCodes[revisionCode].type,\n      revision: oldRevisionCodes[revisionCode].revision\n    };\n  } else {\n    // new revision code\n    const revision = ('00000000' + getValue(lines, 'revision', ':', true).toLowerCase()).substr(-8); // const revisionStyleNew = hex2bin(revision.substr(2, 1)).substr(4, 1) === '1';\n\n    const memSizeCode = parseInt(hex2bin(revision.substr(2, 1)).substr(5, 3), 2) || 0;\n    const manufacturer = manufacturerList[parseInt(revision.substr(3, 1), 10)];\n    const processor = processorList[parseInt(revision.substr(4, 1), 10)];\n    const typeCode = revision.substr(5, 2);\n    result = {\n      model,\n      serial,\n      revisionCode,\n      memory: 256 * Math.pow(2, memSizeCode),\n      manufacturer,\n      processor,\n      type: {}.hasOwnProperty.call(typeList, typeCode) ? typeList[typeCode] : '',\n      revision: '1.' + revision.substr(7, 1)\n    };\n  }\n\n  return result;\n}\n\nfunction promiseAll(promises) {\n  const resolvingPromises = promises.map(function (promise) {\n    return new Promise(function (resolve) {\n      var payload = new Array(2);\n      promise.then(function (result) {\n        payload[0] = result;\n      }).catch(function (error) {\n        payload[1] = error;\n      }).then(function () {\n        // The wrapped Promise returns an array: 0 = result, 1 = error ... we resolve all\n        resolve(payload);\n      });\n    });\n  });\n  var errors = [];\n  var results = []; // Execute all wrapped Promises\n\n  return Promise.all(resolvingPromises).then(function (items) {\n    items.forEach(function (payload) {\n      if (payload[1]) {\n        errors.push(payload[1]);\n        results.push(null);\n      } else {\n        errors.push(null);\n        results.push(payload[0]);\n      }\n    });\n    return {\n      errors: errors,\n      results: results\n    };\n  });\n}\n\nfunction promisify(nodeStyleFunction) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    return new Promise(function (resolve, reject) {\n      args.push(function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n      nodeStyleFunction.apply(null, args);\n    });\n  };\n}\n\nfunction promisifySave(nodeStyleFunction) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    return new Promise(function (resolve) {\n      args.push(function (err, data) {\n        resolve(data);\n      });\n      nodeStyleFunction.apply(null, args);\n    });\n  };\n}\n\nfunction linuxVersion() {\n  let result = '';\n\n  if (_linux) {\n    try {\n      result = execSync('uname -v').toString();\n    } catch (e) {\n      result = '';\n    }\n  }\n\n  return result;\n}\n\nfunction plistParser(xmlStr) {\n  const tags = ['array', 'dict', 'key', 'string', 'integer', 'date', 'real', 'data', 'boolean', 'arrayEmpty'];\n  const startStr = '<plist version';\n  let pos = xmlStr.indexOf(startStr);\n  let len = xmlStr.length;\n\n  while (xmlStr[pos] !== '>' && pos < len) {\n    pos++;\n  }\n\n  let depth = 0;\n  let inTagStart = false;\n  let inTagContent = false;\n  let inTagEnd = false;\n  let metaData = [{\n    tagStart: '',\n    tagEnd: '',\n    tagContent: '',\n    key: '',\n    data: null\n  }];\n  let c = '';\n  let cn = xmlStr[pos];\n\n  while (pos < len) {\n    c = cn;\n\n    if (pos + 1 < len) {\n      cn = xmlStr[pos + 1];\n    }\n\n    if (c === '<') {\n      inTagContent = false;\n\n      if (cn === '/') {\n        inTagEnd = true;\n      } else if (metaData[depth].tagStart) {\n        metaData[depth].tagContent = '';\n\n        if (!metaData[depth].data) {\n          metaData[depth].data = metaData[depth].tagStart === 'array' ? [] : {};\n        }\n\n        depth++;\n        metaData.push({\n          tagStart: '',\n          tagEnd: '',\n          tagContent: '',\n          key: null,\n          data: null\n        });\n        inTagStart = true;\n        inTagContent = false;\n      } else if (!inTagStart) {\n        inTagStart = true;\n      }\n    } else if (c === '>') {\n      if (metaData[depth].tagStart === 'true/') {\n        inTagStart = false;\n        inTagEnd = true;\n        metaData[depth].tagStart = '';\n        metaData[depth].tagEnd = '/boolean';\n        metaData[depth].data = true;\n      }\n\n      if (metaData[depth].tagStart === 'false/') {\n        inTagStart = false;\n        inTagEnd = true;\n        metaData[depth].tagStart = '';\n        metaData[depth].tagEnd = '/boolean';\n        metaData[depth].data = false;\n      }\n\n      if (metaData[depth].tagStart === 'array/') {\n        inTagStart = false;\n        inTagEnd = true;\n        metaData[depth].tagStart = '';\n        metaData[depth].tagEnd = '/arrayEmpty';\n        metaData[depth].data = [];\n      }\n\n      if (inTagContent) {\n        inTagContent = false;\n      }\n\n      if (inTagStart) {\n        inTagStart = false;\n        inTagContent = true;\n\n        if (metaData[depth].tagStart === 'array') {\n          metaData[depth].data = [];\n        }\n\n        if (metaData[depth].tagStart === 'dict') {\n          metaData[depth].data = {};\n        }\n      }\n\n      if (inTagEnd) {\n        inTagEnd = false;\n\n        if (metaData[depth].tagEnd && tags.indexOf(metaData[depth].tagEnd.substr(1)) >= 0) {\n          if (metaData[depth].tagEnd === '/dict' || metaData[depth].tagEnd === '/array') {\n            if (depth > 1 && metaData[depth - 2].tagStart === 'array') {\n              metaData[depth - 2].data.push(metaData[depth - 1].data);\n            }\n\n            if (depth > 1 && metaData[depth - 2].tagStart === 'dict') {\n              metaData[depth - 2].data[metaData[depth - 1].key] = metaData[depth - 1].data;\n            }\n\n            depth--;\n            metaData.pop();\n            metaData[depth].tagContent = '';\n            metaData[depth].tagStart = '';\n            metaData[depth].tagEnd = '';\n          } else {\n            if (metaData[depth].tagEnd === '/key' && metaData[depth].tagContent) {\n              metaData[depth].key = metaData[depth].tagContent;\n            } else {\n              if (metaData[depth].tagEnd === '/real' && metaData[depth].tagContent) {\n                metaData[depth].data = parseFloat(metaData[depth].tagContent) || 0;\n              }\n\n              if (metaData[depth].tagEnd === '/integer' && metaData[depth].tagContent) {\n                metaData[depth].data = parseInt(metaData[depth].tagContent) || 0;\n              }\n\n              if (metaData[depth].tagEnd === '/string' && metaData[depth].tagContent) {\n                metaData[depth].data = metaData[depth].tagContent || '';\n              }\n\n              if (metaData[depth].tagEnd === '/boolean') {\n                metaData[depth].data = metaData[depth].tagContent || false;\n              }\n\n              if (metaData[depth].tagEnd === '/arrayEmpty') {\n                metaData[depth].data = metaData[depth].tagContent || [];\n              }\n\n              if (depth > 0 && metaData[depth - 1].tagStart === 'array') {\n                metaData[depth - 1].data.push(metaData[depth].data);\n              }\n\n              if (depth > 0 && metaData[depth - 1].tagStart === 'dict') {\n                metaData[depth - 1].data[metaData[depth].key] = metaData[depth].data;\n              }\n            }\n\n            metaData[depth].tagContent = '';\n            metaData[depth].tagStart = '';\n            metaData[depth].tagEnd = '';\n          }\n        }\n\n        metaData[depth].tagEnd = '';\n        inTagStart = false;\n        inTagContent = false;\n      }\n    } else {\n      if (inTagStart) {\n        metaData[depth].tagStart += c;\n      }\n\n      if (inTagEnd) {\n        metaData[depth].tagEnd += c;\n      }\n\n      if (inTagContent) {\n        metaData[depth].tagContent += c;\n      }\n    }\n\n    pos++;\n  }\n\n  return metaData[0].data;\n}\n\nfunction semverCompare(v1, v2) {\n  let res = 0;\n  const parts1 = v1.split('.');\n  const parts2 = v2.split('.');\n\n  if (parts1[0] < parts2[0]) {\n    res = 1;\n  } else if (parts1[0] > parts2[0]) {\n    res = -1;\n  } else if (parts1[0] === parts2[0] && parts1.length >= 2 && parts2.length >= 2) {\n    if (parts1[1] < parts2[1]) {\n      res = 1;\n    } else if (parts1[1] > parts2[1]) {\n      res = -1;\n    } else if (parts1[1] === parts2[1]) {\n      if (parts1.length >= 3 && parts2.length >= 3) {\n        if (parts1[2] < parts2[2]) {\n          res = 1;\n        } else if (parts1[2] > parts2[2]) {\n          res = -1;\n        }\n      } else if (parts2.length >= 3) {\n        res = 1;\n      }\n    }\n  }\n\n  return res;\n}\n\nfunction noop() {}\n\nexports.toInt = toInt;\nexports.execOptsWin = execOptsWin;\nexports.getCodepage = getCodepage;\nexports.execWin = execWin;\nexports.isFunction = isFunction;\nexports.unique = unique;\nexports.sortByKey = sortByKey;\nexports.cores = cores;\nexports.getValue = getValue;\nexports.decodeEscapeSequence = decodeEscapeSequence;\nexports.parseDateTime = parseDateTime;\nexports.parseHead = parseHead;\nexports.findObjectByKey = findObjectByKey;\nexports.getWmic = getWmic;\nexports.wmic = wmic;\nexports.darwinXcodeExists = darwinXcodeExists;\nexports.getVboxmanage = getVboxmanage;\nexports.powerShell = powerShell;\nexports.powerShellStart = powerShellStart;\nexports.powerShellRelease = powerShellRelease;\nexports.execSafe = execSafe;\nexports.nanoSeconds = nanoSeconds;\nexports.countUniqueLines = countUniqueLines;\nexports.countLines = countLines;\nexports.noop = noop;\nexports.isRaspberry = isRaspberry;\nexports.isRaspbian = isRaspbian;\nexports.sanitizeShellString = sanitizeShellString;\nexports.isPrototypePolluted = isPrototypePolluted;\nexports.decodePiCpuinfo = decodePiCpuinfo;\nexports.promiseAll = promiseAll;\nexports.promisify = promisify;\nexports.promisifySave = promisifySave;\nexports.smartMonToolsInstalled = smartMonToolsInstalled;\nexports.linuxVersion = linuxVersion;\nexports.plistParser = plistParser;\nexports.stringReplace = stringReplace;\nexports.stringToLower = stringToLower;\nexports.stringToString = stringToString;\nexports.stringSubstr = stringSubstr;\nexports.stringTrim = stringTrim;\nexports.stringStartWith = stringStartWith;\nexports.mathMin = mathMin;\nexports.WINDIR = WINDIR;\nexports.getFilesInPath = getFilesInPath;\nexports.semverCompare = semverCompare;","'use strict'; // @ts-check\n// ==================================================================================\n// virtualbox.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 14. Docker\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\n\nconst exec = require('child_process').exec;\n\nconst util = require('./util');\n\nfunction vboxInfo(callback) {\n  // fallback - if only callback is given\n  let result = [];\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      try {\n        exec(util.getVboxmanage() + ' list vms --long', function (error, stdout) {\n          let parts = (os.EOL + stdout.toString()).split(os.EOL + 'Name:');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = ('Name:' + part).split(os.EOL);\n            const state = util.getValue(lines, 'State');\n            const running = state.startsWith('running');\n            const runningSinceString = running ? state.replace('running (since ', '').replace(')', '').trim() : '';\n            let runningSince = 0;\n\n            try {\n              if (running) {\n                const sinceDateObj = new Date(runningSinceString);\n                const offset = sinceDateObj.getTimezoneOffset();\n                runningSince = Math.round((Date.now() - Date.parse(sinceDateObj)) / 1000) + offset * 60;\n              }\n            } catch (e) {\n              util.noop();\n            }\n\n            const stoppedSinceString = !running ? state.replace('powered off (since', '').replace(')', '').trim() : '';\n            let stoppedSince = 0;\n\n            try {\n              if (!running) {\n                const sinceDateObj = new Date(stoppedSinceString);\n                const offset = sinceDateObj.getTimezoneOffset();\n                stoppedSince = Math.round((Date.now() - Date.parse(sinceDateObj)) / 1000) + offset * 60;\n              }\n            } catch (e) {\n              util.noop();\n            }\n\n            result.push({\n              id: util.getValue(lines, 'UUID'),\n              name: util.getValue(lines, 'Name'),\n              running,\n              started: runningSinceString,\n              runningSince,\n              stopped: stoppedSinceString,\n              stoppedSince,\n              guestOS: util.getValue(lines, 'Guest OS'),\n              hardwareUUID: util.getValue(lines, 'Hardware UUID'),\n              memory: parseInt(util.getValue(lines, 'Memory size', '     '), 10),\n              vram: parseInt(util.getValue(lines, 'VRAM size'), 10),\n              cpus: parseInt(util.getValue(lines, 'Number of CPUs'), 10),\n              cpuExepCap: util.getValue(lines, 'CPU exec cap'),\n              cpuProfile: util.getValue(lines, 'CPUProfile'),\n              chipset: util.getValue(lines, 'Chipset'),\n              firmware: util.getValue(lines, 'Firmware'),\n              pageFusion: util.getValue(lines, 'Page Fusion') === 'enabled',\n              configFile: util.getValue(lines, 'Config file'),\n              snapshotFolder: util.getValue(lines, 'Snapshot folder'),\n              logFolder: util.getValue(lines, 'Log folder'),\n              hpet: util.getValue(lines, 'HPET') === 'enabled',\n              pae: util.getValue(lines, 'PAE') === 'enabled',\n              longMode: util.getValue(lines, 'Long Mode') === 'enabled',\n              tripleFaultReset: util.getValue(lines, 'Triple Fault Reset') === 'enabled',\n              apic: util.getValue(lines, 'APIC') === 'enabled',\n              x2Apic: util.getValue(lines, 'X2APIC') === 'enabled',\n              acpi: util.getValue(lines, 'ACPI') === 'enabled',\n              ioApic: util.getValue(lines, 'IOAPIC') === 'enabled',\n              biosApicMode: util.getValue(lines, 'BIOS APIC mode'),\n              bootMenuMode: util.getValue(lines, 'Boot menu mode'),\n              bootDevice1: util.getValue(lines, 'Boot Device 1'),\n              bootDevice2: util.getValue(lines, 'Boot Device 2'),\n              bootDevice3: util.getValue(lines, 'Boot Device 3'),\n              bootDevice4: util.getValue(lines, 'Boot Device 4'),\n              timeOffset: util.getValue(lines, 'Time offset'),\n              rtc: util.getValue(lines, 'RTC')\n            });\n          });\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      } catch (e) {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.vboxInfo = vboxInfo;","'use strict'; // @ts-check\n// ==================================================================================\n// wifi.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2022\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 9. wifi\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\n\nconst exec = require('child_process').exec;\n\nconst execSync = require('child_process').execSync;\n\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = _platform === 'linux' || _platform === 'android';\n\nconst _darwin = _platform === 'darwin';\n\nconst _windows = _platform === 'win32';\n\nfunction wifiDBFromQuality(quality) {\n  return parseFloat(quality) / 2 - 100;\n}\n\nfunction wifiQualityFromDB(db) {\n  const result = 2 * (parseFloat(db) + 100);\n  return result <= 100 ? result : 100;\n}\n\nconst _wifi_frequencies = {\n  1: 2412,\n  2: 2417,\n  3: 2422,\n  4: 2427,\n  5: 2432,\n  6: 2437,\n  7: 2442,\n  8: 2447,\n  9: 2452,\n  10: 2457,\n  11: 2462,\n  12: 2467,\n  13: 2472,\n  14: 2484,\n  32: 5160,\n  34: 5170,\n  36: 5180,\n  38: 5190,\n  40: 5200,\n  42: 5210,\n  44: 5220,\n  46: 5230,\n  48: 5240,\n  50: 5250,\n  52: 5260,\n  54: 5270,\n  56: 5280,\n  58: 5290,\n  60: 5300,\n  62: 5310,\n  64: 5320,\n  68: 5340,\n  96: 5480,\n  100: 5500,\n  102: 5510,\n  104: 5520,\n  106: 5530,\n  108: 5540,\n  110: 5550,\n  112: 5560,\n  114: 5570,\n  116: 5580,\n  118: 5590,\n  120: 5600,\n  122: 5610,\n  124: 5620,\n  126: 5630,\n  128: 5640,\n  132: 5660,\n  134: 5670,\n  136: 5680,\n  138: 5690,\n  140: 5700,\n  142: 5710,\n  144: 5720,\n  149: 5745,\n  151: 5755,\n  153: 5765,\n  155: 5775,\n  157: 5785,\n  159: 5795,\n  161: 5805,\n  165: 5825,\n  169: 5845,\n  173: 5865,\n  183: 4915,\n  184: 4920,\n  185: 4925,\n  187: 4935,\n  188: 4940,\n  189: 4945,\n  192: 4960,\n  196: 4980\n};\n\nfunction wifiFrequencyFromChannel(channel) {\n  return {}.hasOwnProperty.call(_wifi_frequencies, channel) ? _wifi_frequencies[channel] : null;\n}\n\nfunction wifiChannelFromFrequencs(frequency) {\n  let channel = 0;\n\n  for (let key in _wifi_frequencies) {\n    if ({}.hasOwnProperty.call(_wifi_frequencies, key)) {\n      if (_wifi_frequencies[key] === frequency) {\n        channel = util.toInt(key);\n      }\n    }\n  }\n\n  return channel;\n}\n\nfunction ifaceListLinux() {\n  const result = [];\n  const cmd = 'iw dev';\n\n  try {\n    const all = execSync(cmd).toString().split('\\n').map(line => line.trim()).join('\\n');\n    const parts = all.split('\\nInterface ');\n    parts.shift();\n    parts.forEach(ifaceDetails => {\n      const lines = ifaceDetails.split('\\n');\n      const iface = lines[0];\n      const id = util.toInt(util.getValue(lines, 'ifindex', ' '));\n      const mac = util.getValue(lines, 'addr', ' ');\n      const channel = util.toInt(util.getValue(lines, 'channel', ' '));\n      result.push({\n        id,\n        iface,\n        mac,\n        channel\n      });\n    });\n    return result;\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction nmiDeviceLinux(iface) {\n  const cmd = `nmcli -t -f general,wifi-properties,capabilities,ip4,ip6 device show ${iface} 2>/dev/null`;\n\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const ssid = util.getValue(lines, 'GENERAL.CONNECTION');\n    return {\n      iface,\n      type: util.getValue(lines, 'GENERAL.TYPE'),\n      vendor: util.getValue(lines, 'GENERAL.VENDOR'),\n      product: util.getValue(lines, 'GENERAL.PRODUCT'),\n      mac: util.getValue(lines, 'GENERAL.HWADDR').toLowerCase(),\n      ssid: ssid !== '--' ? ssid : null\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction nmiConnectionLinux(ssid) {\n  const cmd = `nmcli -t --show-secrets connection show ${ssid} 2>/dev/null`;\n\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const bssid = util.getValue(lines, '802-11-wireless.seen-bssids').toLowerCase();\n    return {\n      ssid: ssid !== '--' ? ssid : null,\n      uuid: util.getValue(lines, 'connection.uuid'),\n      type: util.getValue(lines, 'connection.type'),\n      autoconnect: util.getValue(lines, 'connection.autoconnect') === 'yes',\n      security: util.getValue(lines, '802-11-wireless-security.key-mgmt'),\n      bssid: bssid !== '--' ? bssid : null\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction wpaConnectionLinux(iface) {\n  const cmd = `wpa_cli -i ${iface} status 2>&1`;\n\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const freq = util.toInt(util.getValue(lines, 'freq', '='));\n    return {\n      ssid: util.getValue(lines, 'ssid', '='),\n      uuid: util.getValue(lines, 'uuid', '='),\n      security: util.getValue(lines, 'key_mgmt', '='),\n      freq,\n      channel: wifiChannelFromFrequencs(freq),\n      bssid: util.getValue(lines, 'bssid', '=').toLowerCase()\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction getWifiNetworkListNmi() {\n  const result = [];\n  const cmd = 'nmcli -t -m multiline --fields active,ssid,bssid,mode,chan,freq,signal,security,wpa-flags,rsn-flags device wifi list 2>/dev/null';\n\n  try {\n    const stdout = execSync(cmd, {\n      maxBuffer: 1024 * 20000\n    });\n    const parts = stdout.toString().split('ACTIVE:');\n    parts.shift();\n    parts.forEach(part => {\n      part = 'ACTIVE:' + part;\n      const lines = part.split(os.EOL);\n      const channel = util.getValue(lines, 'CHAN');\n      const frequency = util.getValue(lines, 'FREQ').toLowerCase().replace('mhz', '').trim();\n      const security = util.getValue(lines, 'SECURITY').replace('(', '').replace(')', '');\n      const wpaFlags = util.getValue(lines, 'WPA-FLAGS').replace('(', '').replace(')', '');\n      const rsnFlags = util.getValue(lines, 'RSN-FLAGS').replace('(', '').replace(')', '');\n      result.push({\n        ssid: util.getValue(lines, 'SSID'),\n        bssid: util.getValue(lines, 'BSSID').toLowerCase(),\n        mode: util.getValue(lines, 'MODE'),\n        channel: channel ? parseInt(channel, 10) : null,\n        frequency: frequency ? parseInt(frequency, 10) : null,\n        signalLevel: wifiDBFromQuality(util.getValue(lines, 'SIGNAL')),\n        quality: parseFloat(util.getValue(lines, 'SIGNAL')),\n        security: security && security !== 'none' ? security.split(' ') : [],\n        wpaFlags: wpaFlags && wpaFlags !== 'none' ? wpaFlags.split(' ') : [],\n        rsnFlags: rsnFlags && rsnFlags !== 'none' ? rsnFlags.split(' ') : []\n      });\n    });\n    return result;\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction getWifiNetworkListIw(iface) {\n  const result = [];\n\n  try {\n    let iwlistParts = execSync(`export LC_ALL=C; iwlist ${iface} scan 2>&1; unset LC_ALL`).toString().split('        Cell ');\n\n    if (iwlistParts[0].indexOf('resource busy') >= 0) {\n      return -1;\n    }\n\n    if (iwlistParts.length > 1) {\n      iwlistParts.shift();\n\n      for (let i = 0; i < iwlistParts.length; i++) {\n        const lines = iwlistParts[i].split('\\n');\n        const channel = util.getValue(lines, 'channel', ':', true);\n        const address = lines && lines.length && lines[0].indexOf('Address:') >= 0 ? lines[0].split('Address:')[1].trim().toLowerCase() : '';\n        const mode = util.getValue(lines, 'mode', ':', true);\n        const frequency = util.getValue(lines, 'frequency', ':', true);\n        const qualityString = util.getValue(lines, 'Quality', '=', true);\n        const dbParts = qualityString.toLowerCase().split('signal level=');\n        const db = dbParts.length > 1 ? util.toInt(dbParts[1]) : 0;\n        const quality = db ? wifiQualityFromDB(db) : 0;\n        const ssid = util.getValue(lines, 'essid', ':', true); // security and wpa-flags\n\n        const isWpa = iwlistParts[i].indexOf(' WPA ') >= 0;\n        const isWpa2 = iwlistParts[i].indexOf('WPA2 ') >= 0;\n        const security = [];\n\n        if (isWpa) {\n          security.push('WPA');\n        }\n\n        if (isWpa2) {\n          security.push('WPA2');\n        }\n\n        const wpaFlags = [];\n        let wpaFlag = '';\n        lines.forEach(function (line) {\n          const l = line.trim().toLowerCase();\n\n          if (l.indexOf('group cipher') >= 0) {\n            if (wpaFlag) {\n              wpaFlags.push(wpaFlag);\n            }\n\n            const parts = l.split(':');\n\n            if (parts.length > 1) {\n              wpaFlag = parts[1].trim().toUpperCase();\n            }\n          }\n\n          if (l.indexOf('pairwise cipher') >= 0) {\n            const parts = l.split(':');\n\n            if (parts.length > 1) {\n              if (parts[1].indexOf('tkip')) {\n                wpaFlag = wpaFlag ? 'TKIP/' + wpaFlag : 'TKIP';\n              } else if (parts[1].indexOf('ccmp')) {\n                wpaFlag = wpaFlag ? 'CCMP/' + wpaFlag : 'CCMP';\n              } else if (parts[1].indexOf('proprietary')) {\n                wpaFlag = wpaFlag ? 'PROP/' + wpaFlag : 'PROP';\n              }\n            }\n          }\n\n          if (l.indexOf('authentication suites') >= 0) {\n            const parts = l.split(':');\n\n            if (parts.length > 1) {\n              if (parts[1].indexOf('802.1x')) {\n                wpaFlag = wpaFlag ? '802.1x/' + wpaFlag : '802.1x';\n              } else if (parts[1].indexOf('psk')) {\n                wpaFlag = wpaFlag ? 'PSK/' + wpaFlag : 'PSK';\n              }\n            }\n          }\n        });\n\n        if (wpaFlag) {\n          wpaFlags.push(wpaFlag);\n        }\n\n        result.push({\n          ssid,\n          bssid: address,\n          mode,\n          channel: channel ? util.toInt(channel) : null,\n          frequency: frequency ? util.toInt(frequency.replace('.', '')) : null,\n          signalLevel: db,\n          quality,\n          security,\n          wpaFlags,\n          rsnFlags: []\n        });\n      }\n    }\n\n    return result;\n  } catch (e) {\n    return -1;\n  }\n}\n/*\n                    ssid: line.substring(parsedhead[0].from, parsedhead[0].to).trim(),\n                    bssid: line.substring(parsedhead[1].from, parsedhead[1].to).trim().toLowerCase(),\n                    mode: '',\n                    channel,\n                    frequency: wifiFrequencyFromChannel(channel),\n                    signalLevel: signalLevel ? parseInt(signalLevel, 10) : null,\n                    quality: wifiQualityFromDB(signalLevel),\n                    security,\n                    wpaFlags,\n                    rsnFlags: []\n\n                  const securityAll = line.substring(parsedhead[6].from, 1000).trim().split(' ');\n                  let security = [];\n                  let wpaFlags = [];\n                  securityAll.forEach(securitySingle => {\n                    if (securitySingle.indexOf('(') > 0) {\n                      const parts = securitySingle.split('(');\n                      security.push(parts[0]);\n                      wpaFlags = wpaFlags.concat(parts[1].replace(')', '').split(','));\n                    }\n                  });\n\n*/\n\n\nfunction parseWifiDarwin(wifiObj) {\n  const result = [];\n\n  if (wifiObj) {\n    wifiObj.forEach(function (wifiItem) {\n      const signalLevel = wifiItem.RSSI;\n      let security = [];\n      let wpaFlags = [];\n\n      if (wifiItem.WPA_IE) {\n        security.push('WPA');\n\n        if (wifiItem.WPA_IE.IE_KEY_WPA_UCIPHERS) {\n          wifiItem.WPA_IE.IE_KEY_WPA_UCIPHERS.forEach(function (ciphers) {\n            if (ciphers === 0 && wpaFlags.indexOf('unknown/TKIP') === -1) {\n              wpaFlags.push('unknown/TKIP');\n            }\n\n            if (ciphers === 2 && wpaFlags.indexOf('PSK/TKIP') === -1) {\n              wpaFlags.push('PSK/TKIP');\n            }\n\n            if (ciphers === 4 && wpaFlags.indexOf('PSK/AES') === -1) {\n              wpaFlags.push('PSK/AES');\n            }\n          });\n        }\n      }\n\n      if (wifiItem.RSN_IE) {\n        security.push('WPA2');\n\n        if (wifiItem.RSN_IE.IE_KEY_RSN_UCIPHERS) {\n          wifiItem.RSN_IE.IE_KEY_RSN_UCIPHERS.forEach(function (ciphers) {\n            if (ciphers === 0 && wpaFlags.indexOf('unknown/TKIP') === -1) {\n              wpaFlags.push('unknown/TKIP');\n            }\n\n            if (ciphers === 2 && wpaFlags.indexOf('TKIP/TKIP') === -1) {\n              wpaFlags.push('TKIP/TKIP');\n            }\n\n            if (ciphers === 4 && wpaFlags.indexOf('PSK/AES') === -1) {\n              wpaFlags.push('PSK/AES');\n            }\n          });\n        }\n      }\n\n      result.push({\n        ssid: wifiItem.SSID_STR,\n        bssid: wifiItem.BSSID,\n        mode: '',\n        channel: wifiItem.CHANNEL,\n        frequency: wifiFrequencyFromChannel(wifiItem.CHANNEL),\n        signalLevel: signalLevel ? parseInt(signalLevel, 10) : null,\n        quality: wifiQualityFromDB(signalLevel),\n        security,\n        wpaFlags,\n        rsnFlags: []\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction wifiNetworks(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      let result = [];\n\n      if (_linux) {\n        result = getWifiNetworkListNmi();\n\n        if (result.length === 0) {\n          try {\n            const iwconfigParts = execSync('export LC_ALL=C; iwconfig 2>/dev/null; unset LC_ALL').toString().split('\\n\\n');\n            let iface = '';\n\n            for (let i = 0; i < iwconfigParts.length; i++) {\n              if (iwconfigParts[i].indexOf('no wireless') === -1 && iwconfigParts[i].trim() !== '') {\n                iface = iwconfigParts[i].split(' ')[0];\n              }\n            }\n\n            if (iface) {\n              const res = getWifiNetworkListIw(iface);\n\n              if (res === -1) {\n                // try again after 4 secs\n                setTimeout(function (iface) {\n                  const res = getWifiNetworkListIw(iface);\n\n                  if (res != -1) {\n                    result = res;\n                  }\n\n                  if (callback) {\n                    callback(result);\n                  }\n\n                  resolve(result);\n                }, 4000);\n              } else {\n                result = res;\n\n                if (callback) {\n                  callback(result);\n                }\n\n                resolve(result);\n              }\n            } else {\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            }\n          } catch (e) {\n            if (callback) {\n              callback(result);\n            }\n\n            resolve(result);\n          }\n        } else {\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        }\n      } else if (_darwin) {\n        let cmd = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -s -x';\n        exec(cmd, {\n          maxBuffer: 1024 * 40000\n        }, function (error, stdout) {\n          const output = stdout.toString();\n          result = parseWifiDarwin(util.plistParser(output));\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show networks mode=Bssid';\n        util.powerShell(cmd).then(stdout => {\n          const ssidParts = stdout.toString('utf8').split(os.EOL + os.EOL + 'SSID ');\n          ssidParts.shift();\n          ssidParts.forEach(ssidPart => {\n            const ssidLines = ssidPart.split(os.EOL);\n\n            if (ssidLines && ssidLines.length >= 8 && ssidLines[0].indexOf(':') >= 0) {\n              const bssidsParts = ssidPart.split(' BSSID');\n              bssidsParts.shift();\n              bssidsParts.forEach(bssidPart => {\n                const bssidLines = bssidPart.split(os.EOL);\n                const bssidLine = bssidLines[0].split(':');\n                bssidLine.shift();\n                const bssid = bssidLine.join(':').trim().toLowerCase();\n                const channel = bssidLines[3].split(':').pop().trim();\n                const quality = bssidLines[1].split(':').pop().trim();\n                result.push({\n                  ssid: ssidLines[0].split(':').pop().trim(),\n                  bssid,\n                  mode: '',\n                  channel: channel ? parseInt(channel, 10) : null,\n                  frequency: wifiFrequencyFromChannel(channel),\n                  signalLevel: wifiDBFromQuality(quality),\n                  quality: quality ? parseInt(quality, 10) : null,\n                  security: [ssidLines[2].split(':').pop().trim()],\n                  wpaFlags: [ssidLines[3].split(':').pop().trim()],\n                  rsnFlags: []\n                });\n              });\n            }\n          });\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiNetworks = wifiNetworks;\n\nfunction getVendor(model) {\n  model = model.toLowerCase();\n  let result = '';\n\n  if (model.indexOf('intel') >= 0) {\n    result = 'Intel';\n  } else if (model.indexOf('realtek') >= 0) {\n    result = 'Realtek';\n  } else if (model.indexOf('qualcom') >= 0) {\n    result = 'Qualcom';\n  } else if (model.indexOf('broadcom') >= 0) {\n    result = 'Broadcom';\n  } else if (model.indexOf('cavium') >= 0) {\n    result = 'Cavium';\n  } else if (model.indexOf('cisco') >= 0) {\n    result = 'Cisco';\n  } else if (model.indexOf('marvel') >= 0) {\n    result = 'Marvel';\n  } else if (model.indexOf('zyxel') >= 0) {\n    result = 'Zyxel';\n  } else if (model.indexOf('melanox') >= 0) {\n    result = 'Melanox';\n  } else if (model.indexOf('d-link') >= 0) {\n    result = 'D-Link';\n  } else if (model.indexOf('tp-link') >= 0) {\n    result = 'TP-Link';\n  } else if (model.indexOf('asus') >= 0) {\n    result = 'Asus';\n  } else if (model.indexOf('linksys') >= 0) {\n    result = 'Linksys';\n  }\n\n  return result;\n}\n\nfunction wifiConnections(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      const result = [];\n\n      if (_linux) {\n        const ifaces = ifaceListLinux();\n        const networkList = getWifiNetworkListNmi();\n        ifaces.forEach(ifaceDetail => {\n          const nmiDetails = nmiDeviceLinux(ifaceDetail.iface);\n          const wpaDetails = wpaConnectionLinux(ifaceDetail.iface);\n          const ssid = nmiDetails.ssid || wpaDetails.ssid;\n          const network = networkList.filter(nw => nw.ssid === ssid);\n          const nmiConnection = nmiConnectionLinux(ssid);\n          const channel = network && network.length && network[0].channel ? network[0].channel : wpaDetails.channel ? wpaDetails.channel : null;\n          const bssid = network && network.length && network[0].bssid ? network[0].bssid : wpaDetails.bssid ? wpaDetails.bssid : null;\n\n          if (ssid && bssid) {\n            result.push({\n              id: ifaceDetail.id,\n              iface: ifaceDetail.iface,\n              model: nmiDetails.product,\n              ssid,\n              bssid: network && network.length && network[0].bssid ? network[0].bssid : wpaDetails.bssid ? wpaDetails.bssid : null,\n              channel,\n              frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n              type: nmiConnection.type ? nmiConnection.type : '802.11',\n              security: nmiConnection.security ? nmiConnection.security : wpaDetails.security ? wpaDetails.security : null,\n              signalLevel: network && network.length && network[0].signalLevel ? network[0].signalLevel : null,\n              txRate: null\n            });\n          }\n        });\n\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      } else if (_darwin) {\n        let cmd = 'system_profiler SPNetworkDataType';\n        exec(cmd, function (error, stdout) {\n          const parts1 = stdout.toString().split('\\n\\n    Wi-Fi:\\n\\n');\n\n          if (parts1.length > 1) {\n            const lines = parts1[1].split('\\n\\n')[0].split('\\n');\n            const iface = util.getValue(lines, 'BSD Device Name', ':', true);\n            const model = util.getValue(lines, 'hardware', ':', true);\n            cmd = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I';\n            exec(cmd, function (error, stdout) {\n              const lines2 = stdout.toString().split('\\n');\n\n              if (lines.length > 10) {\n                const ssid = util.getValue(lines2, 'ssid', ':', true);\n                const bssid = util.getValue(lines2, 'bssid', ':', true);\n                const security = util.getValue(lines2, 'link auth', ':', true);\n                const txRate = util.getValue(lines2, 'lastTxRate', ':', true);\n                const channel = util.getValue(lines2, 'channel', ':', true).split(',')[0];\n                const type = '802.11';\n                const rssi = util.toInt(util.getValue(lines2, 'agrCtlRSSI', ':', true));\n                const noise = util.toInt(util.getValue(lines2, 'agrCtlNoise', ':', true));\n                const signalLevel = rssi - noise; // const signal = wifiQualityFromDB(signalLevel);\n\n                if (ssid || bssid) {\n                  result.push({\n                    id: 'Wi-Fi',\n                    iface,\n                    model,\n                    ssid,\n                    bssid,\n                    channel: util.toInt(channel),\n                    frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n                    type,\n                    security,\n                    signalLevel,\n                    txRate\n                  });\n                }\n              }\n\n              if (callback) {\n                callback(result);\n              }\n\n              resolve(result);\n            });\n          }\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show interfaces';\n        util.powerShell(cmd).then(function (stdout) {\n          const allLines = stdout.toString().split('\\r\\n');\n\n          for (let i = 0; i < allLines.length; i++) {\n            allLines[i] = allLines[i].trim();\n          }\n\n          const parts = allLines.join('\\r\\n').split(':\\r\\n\\r\\n');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = part.split('\\r\\n');\n\n            if (lines.length >= 5) {\n              const iface = lines[0].indexOf(':') >= 0 ? lines[0].split(':')[1].trim() : '';\n              const model = lines[1].indexOf(':') >= 0 ? lines[1].split(':')[1].trim() : '';\n              const id = lines[2].indexOf(':') >= 0 ? lines[2].split(':')[1].trim() : '';\n              const ssid = util.getValue(lines, 'SSID', ':', true);\n              const bssid = util.getValue(lines, 'BSSID', ':', true);\n              const signalLevel = util.getValue(lines, 'Signal', ':', true);\n              const type = util.getValue(lines, 'Radio type', ':', true) || util.getValue(lines, 'Type de radio', ':', true) || util.getValue(lines, 'Funktyp', ':', true) || null;\n              const security = util.getValue(lines, 'authentication', ':', true) || util.getValue(lines, 'Authentification', ':', true) || util.getValue(lines, 'Authentifizierung', ':', true) || null;\n              const channel = util.getValue(lines, 'Channel', ':', true) || util.getValue(lines, 'Canal', ':', true) || util.getValue(lines, 'Kanal', ':', true) || null;\n              const txRate = util.getValue(lines, 'Transmit rate (mbps)', ':', true) || util.getValue(lines, 'Transmission (mbit/s)', ':', true) || util.getValue(lines, 'Empfangsrate (MBit/s)', ':', true) || null;\n\n              if (model && id && ssid && bssid) {\n                result.push({\n                  id,\n                  iface,\n                  model,\n                  ssid,\n                  bssid,\n                  channel: util.toInt(channel),\n                  frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n                  type,\n                  security,\n                  signalLevel,\n                  txRate: util.toInt(txRate) || null\n                });\n              }\n            }\n          });\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiConnections = wifiConnections;\n\nfunction wifiInterfaces(callback) {\n  return new Promise(resolve => {\n    process.nextTick(() => {\n      const result = [];\n\n      if (_linux) {\n        const ifaces = ifaceListLinux();\n        ifaces.forEach(ifaceDetail => {\n          const nmiDetails = nmiDeviceLinux(ifaceDetail.iface);\n          result.push({\n            id: ifaceDetail.id,\n            iface: ifaceDetail.iface,\n            model: nmiDetails.product ? nmiDetails.product : null,\n            vendor: nmiDetails.vendor ? nmiDetails.vendor : null,\n            mac: ifaceDetail.mac\n          });\n        });\n\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      } else if (_darwin) {\n        let cmd = 'system_profiler SPNetworkDataType';\n        exec(cmd, function (error, stdout) {\n          const parts1 = stdout.toString().split('\\n\\n    Wi-Fi:\\n\\n');\n\n          if (parts1.length > 1) {\n            const lines = parts1[1].split('\\n\\n')[0].split('\\n');\n            const iface = util.getValue(lines, 'BSD Device Name', ':', true);\n            const mac = util.getValue(lines, 'MAC Address', ':', true);\n            const model = util.getValue(lines, 'hardware', ':', true);\n            result.push({\n              id: 'Wi-Fi',\n              iface,\n              model,\n              vendor: '',\n              mac\n            });\n          }\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show interfaces';\n        util.powerShell(cmd).then(function (stdout) {\n          const allLines = stdout.toString().split('\\r\\n');\n\n          for (let i = 0; i < allLines.length; i++) {\n            allLines[i] = allLines[i].trim();\n          }\n\n          const parts = allLines.join('\\r\\n').split(':\\r\\n\\r\\n');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = part.split('\\r\\n');\n\n            if (lines.length >= 5) {\n              const iface = lines[0].indexOf(':') >= 0 ? lines[0].split(':')[1].trim() : '';\n              const model = lines[1].indexOf(':') >= 0 ? lines[1].split(':')[1].trim() : '';\n              const id = lines[2].indexOf(':') >= 0 ? lines[2].split(':')[1].trim() : '';\n              const macParts = lines[3].indexOf(':') >= 0 ? lines[3].split(':') : [];\n              macParts.shift();\n              const mac = macParts.join(':').trim();\n              const vendor = getVendor(model);\n\n              if (iface && model && id && mac) {\n                result.push({\n                  id,\n                  iface,\n                  model,\n                  vendor,\n                  mac\n                });\n              }\n            }\n          });\n\n          if (callback) {\n            callback(result);\n          }\n\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiInterfaces = wifiInterfaces;","module.exports = require(\"child_process\");","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"tty\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/native_modules/\";","const {BrowserWindow, ipcMain} = require('electron')\r\n\r\nconst closeEventHome = 'home-close',\r\n    minimizeEventHome = 'home-minimize',\r\n    maximizeEventHome = 'home-maximize'\r\nconst closeEvent = 'project-close',\r\n    minimizeEvent = 'project-minimize',\r\n    maximizeEvent = 'project-maximize'\r\n\r\nexport default class WindowEvents {\r\n    project = null\r\n\r\n    currentListeners = {\r\n        close: undefined,\r\n        minimize: undefined,\r\n        maximize: undefined,\r\n    }\r\n\r\n    constructor() {\r\n        this.getData = this.getDataCall.bind(this)\r\n        this.onSwitch = this.onSwitchCall.bind(this)\r\n\r\n        this.prepareHomeWindow()\r\n        this.initEvents(this.mainWindow, maximizeEventHome, minimizeEventHome, closeEventHome)\r\n\r\n        ipcMain.on('switch-window', this.onSwitch)\r\n        ipcMain.on('load-page', this.getData)\r\n    }\r\n\r\n    initEvents(window, mE, minE, closeE) {\r\n        this.currentListeners.minimize = ipcMain.on(minE, () => window.minimize())\r\n        this.currentListeners.maximize = ipcMain.on(mE, () => {\r\n            if (window.isMaximized())\r\n                window.setSize(800, 650)\r\n            else\r\n                window.maximize()\r\n        })\r\n        this.currentListeners.close = ipcMain.on(closeE, () => window.close())\r\n    }\r\n\r\n    removeEvents() {\r\n        if (this.project) {\r\n            this.currentListeners.minimize?.removeAllListeners(maximizeEvent)\r\n            this.currentListeners.maximize?.removeAllListeners(minimizeEvent)\r\n            this.currentListeners.close?.removeAllListeners(closeEvent)\r\n        } else {\r\n            this.currentListeners.minimize?.removeAllListeners(maximizeEventHome)\r\n            this.currentListeners.maximize?.removeAllListeners(minimizeEventHome)\r\n            this.currentListeners.close?.removeAllListeners(closeEventHome)\r\n        }\r\n    }\r\n\r\n    getDataCall(ev) {\r\n        ev.sender.send('page-load-props', this.project)\r\n    }\r\n\r\n    prepareProjectWindow(data) {\r\n        this.removeEvents()\r\n        this.mainWindow.close()\r\n        const newWindow = new BrowserWindow({\r\n            show: false,\r\n            frame: false,\r\n            webPreferences: {\r\n                webSecurity: false,\r\n                enableRemoteModule: true,\r\n                nodeIntegration: true,\r\n                contextIsolation: false,\r\n                nativeWindowOpen: true,\r\n                nodeIntegrationInWorker: true,\r\n            },\r\n            autoHideMenuBar: true\r\n        });\r\n        this.mainWindow = newWindow\r\n        newWindow.maximize();\r\n        newWindow.show();\r\n\r\n        newWindow.loadURL(PROJECT_WINDOW_WEBPACK_ENTRY);\r\n        this.project = {\r\n            package: data,\r\n            closeEvent,\r\n            minimizeEvent,\r\n            maximizeEvent\r\n        }\r\n        return {\r\n            newWindow,\r\n            closeEvent,\r\n            minimizeEvent,\r\n            maximizeEvent\r\n        }\r\n    }\r\n\r\n    prepareHomeWindow() {\r\n        if(this.mainWindow) {\r\n            this.removeEvents()\r\n            this.mainWindow.close()\r\n        }\r\n        this.project = null\r\n        const newWindow = new BrowserWindow({\r\n            width: 800,\r\n            height: 650,\r\n            frame: false,\r\n            webPreferences: {\r\n                webSecurity: false,\r\n                enableRemoteModule: true,\r\n                nodeIntegration: true,\r\n                contextIsolation: false,\r\n                nativeWindowOpen: true,\r\n                nodeIntegrationInWorker: true,\r\n            },\r\n            autoHideMenuBar: true\r\n        });\r\n        this.mainWindow = newWindow\r\n        newWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);\r\n\r\n        return {\r\n            newWindow,\r\n            closeEvent: closeEventHome,\r\n            minimizeEvent: minimizeEventHome,\r\n            maximizeEvent: maximizeEventHome\r\n        }\r\n    }\r\n\r\n    onSwitchCall(_, d) {\r\n        const {\r\n            newWindow,\r\n            closeEvent,\r\n            minimizeEvent,\r\n            maximizeEvent\r\n        } = this.project ? this.prepareHomeWindow() : this.prepareProjectWindow(d.data)\r\n\r\n        this.initEvents(newWindow, maximizeEvent, minimizeEvent, closeEvent)\r\n    }\r\n}","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"crypto\");","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","const fs = require('fs')\r\nconst path = require('path')\r\nconst atob = require('atob')\r\nexport default class Buffer {\r\n    constructor(data, basePath) {\r\n        this.data = data\r\n        this.basePath = basePath\r\n    }\r\n\r\n    initialize(){\r\n        if (this.data.uri.includes('base64'))\r\n            return new Promise(resolve => {\r\n                this.data = this._getBufferData(this.data.uri)\r\n                resolve()\r\n            })\r\n        else {\r\n            return new Promise(resolve => {\r\n                fs.readFile(path.resolve(this.basePath + '\\\\' + this.data.uri), 'base64', (e, r) => {\r\n                    this.data = this._getBufferData(r)\r\n                    resolve()\r\n                })\r\n            })\r\n        }\r\n    }\r\n    _getBufferData(str) {\r\n        let byteCharacters = atob(str.replace('data:application/octet-stream;base64,', ''));\r\n\r\n        let dv = new DataView(new ArrayBuffer(byteCharacters.length));\r\n\r\n        Array.from(byteCharacters).forEach((char, i) => {\r\n            dv.setUint8(i, char.charCodeAt(0));\r\n        });\r\n\r\n        return dv;\r\n    }\r\n}","\r\nexport default class Accessor{\r\n    _data\r\n    constructor(data, buffers, bufferViews) {\r\n        let items = 0\r\n        switch (data.type) {\r\n            case 'SCALAR':\r\n                items = 1\r\n                break\r\n            case 'VEC2':\r\n                items = 2\r\n                break\r\n            case 'VEC3':\r\n                items = 3\r\n                break\r\n            case 'VEC4':\r\n                items = 4\r\n                break\r\n            default:\r\n                break\r\n        }\r\n\r\n        let elementBytesLength, typedGetter\r\n\r\n        switch (data.componentType) {\r\n            case 5120: // SIGNED BYTE 8\r\n                elementBytesLength = Int8Array\r\n                typedGetter = 'getInt8'\r\n                break\r\n            case 5121: // UNSIGNED BYTE 8\r\n                elementBytesLength = Uint8Array\r\n                typedGetter = 'getUint8'\r\n                break\r\n            case 5122: // SIGNED SHORT 16\r\n                elementBytesLength = Int16Array\r\n                typedGetter = 'getInt16'\r\n                break\r\n            case 5123: // UNSIGNED SHORT 16\r\n                elementBytesLength = Uint16Array\r\n                typedGetter = 'getUint16'\r\n                break\r\n            case 5125: // UNSIGNED INT 32\r\n                elementBytesLength = Uint32Array\r\n                typedGetter = 'getUint32'\r\n                break\r\n            default: // FLOAT\r\n                elementBytesLength = Float32Array\r\n                typedGetter = 'getFloat32'\r\n                break\r\n        }\r\n        elementBytesLength = elementBytesLength.BYTES_PER_ELEMENT\r\n\r\n        const length = items * data.count;\r\n        const res = this._unpackBufferViewData(\r\n            buffers,\r\n            bufferViews,\r\n            length,\r\n            elementBytesLength,\r\n            typedGetter,\r\n            data.bufferView\r\n        )\r\n\r\n        this._data =  {\r\n            ...data,\r\n            data: res\r\n        }\r\n    }\r\n    get data(){\r\n        return this._data.data\r\n    }\r\n    _unpackBufferViewData(\r\n        buffers,\r\n        bufferViews,\r\n        length,\r\n        elementBytesLength,\r\n        typedGetter,\r\n        bufferView\r\n    ) {\r\n\r\n        let bufferId = bufferViews[bufferView].buffer;\r\n        let offset = bufferViews[bufferView].byteOffset;\r\n        if (!offset)\r\n            offset = 0\r\n\r\n        let dv = buffers[bufferId].data;\r\n        return Array.from({\r\n            length\r\n        }).map((el, i) => {\r\n            let loopOffset = offset + Math.max(0, elementBytesLength * i)\r\n            return dv[typedGetter](loopOffset, true);\r\n        })\r\n    }\r\n}","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","export default function groupInto(size, mainArray) {\r\n    let arrayOfArrays = [];\r\n    for (let i = 0; i < mainArray.length; i += size) {\r\n        arrayOfArrays.push(mainArray.slice(i, i + size));\r\n    }\r\n\r\n    return arrayOfArrays\r\n}","import {vec3} from \"gl-matrix\";\r\nimport groupInto from \"./utils/groupInto\";\r\n\r\n\r\nexport default class PrimitiveProcessor {\r\n    static computeNormals(indices, vertices) {\r\n        const faces = groupInto(3, indices)\r\n        const positions = groupInto(3, vertices)\r\n        let quantity = positions.length;\r\n        let normals = (new Array(quantity));\r\n\r\n\r\n        for (let i = 0; i < quantity; ++i) {\r\n            normals[i] = [0, 0, 0];\r\n        }\r\n        for (let i = 0; i < faces.length; ++i) {\r\n            let f = faces[i], p = 0, c = f[f.length - 1], n = f[0]\r\n            for (let j = 0; j < f.length; ++j) {\r\n                p = c\r\n                c = n\r\n                n = f[(j + 1) % f.length]\r\n\r\n                let v0 = positions[p],\r\n                    v1 = positions[c],\r\n                    v2 = positions[n]\r\n\r\n                let d01 = new Array(3),\r\n                    m01 = 0,\r\n                    d21 = new Array(3),\r\n                    m21 = 0\r\n\r\n                if (v0 && v1 && v2) {\r\n                    vec3.sub(d01, v0, v1)\r\n                    vec3.sub(d21, v2, v1)\r\n                    m01 = vec3.dot(d01, d01);\r\n                    m21 = vec3.dot(d21, d21);\r\n\r\n                    if (m01 * m21 > 1e-6) {\r\n                        let norm = normals[c];\r\n                        let w = 1.0 / Math.sqrt(m01 * m21);\r\n                        for (let k = 0; k < 3; ++k) {\r\n                            let u = (k + 1) % 3, v = (k + 2) % 3\r\n                            norm[k] += w * (d21[u] * d01[v] - d21[v] * d01[u]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return normals.flat()\r\n    }\r\n\r\n    static computeTangents(indices, vertices, uvs, normals) {\r\n        const norm = groupInto(3, normals)\r\n\r\n        let groupedVertices = groupInto(3, vertices),\r\n            groupedUVs = groupInto(2, uvs),\r\n            tangents = [],\r\n            tangentArray = [],\r\n            triangles = groupInto(3, indices)\r\n\r\n        for (let i = 0; i < groupedVertices.length; ++i) {\r\n            tangents[i] = [0, 0, 0];\r\n        }\r\n        for (let i = 0; i < triangles.length; i++) {\r\n            let i0 = triangles[i][0],\r\n                i1 = triangles[i][1],\r\n                i2 = triangles[i][2]\r\n\r\n            let v0 = groupedVertices[i0],\r\n                v1 = groupedVertices[i1],\r\n                v2 = groupedVertices[i2],\r\n                uv0 = groupedUVs[i0],\r\n                uv1 = groupedUVs[i1],\r\n                uv2 = groupedUVs[i2]\r\n            let e1 = [], e2 = []\r\n\r\n            if(v1 && v0 && v2) {\r\n                vec3.sub(e1, v1, v0)\r\n                vec3.sub(e2, v2, v0)\r\n\r\n                let x1 = uv1[0] - uv0[0],\r\n                    x2 = uv2[0] - uv0[0],\r\n                    y1 = uv1[1] - uv0[1],\r\n                    y2 = uv2[1] - uv0[1]\r\n\r\n                const div = x1 * y2 - x2 * y1\r\n\r\n                const r = div === 0 ? 1 : 1 / div\r\n\r\n                let tangent = [],\r\n                    tangentP1 = [],\r\n                    tangentP2 = []\r\n                // TANGENT\r\n                vec3.scale(tangentP1, e1, y2)\r\n                vec3.scale(tangentP2, e2, y1)\r\n                vec3.sub(tangent, tangentP1, tangentP2)\r\n                vec3.scale(tangent, tangent, r)\r\n\r\n                vec3.add(tangents[i0], tangents[i0], tangent)\r\n                vec3.add(tangents[i1], tangents[i1], tangent)\r\n                vec3.add(tangents[i2], tangents[i2], tangent)\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < groupedVertices.length; i++) {\r\n            let t0 = tangents[i],\r\n                n = norm[i]\r\n\r\n                let t = [0, 0, 0]\r\n                const nCop = [0, 0, 0]\r\n                vec3.scale(nCop, n, vec3.dot(n, t0))\r\n                vec3.sub(t, t0, nCop)\r\n                vec3.normalize(t, t)\r\n\r\n                tangentArray[i] = [t[0], t[1], t[2]]\r\n        }\r\n\r\n        return tangentArray.flat()\r\n    }\r\n\r\n}","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","import {mat4, quat} from \"gl-matrix\";\r\n\r\nexport default function parseNode(node, allNodes, parentTransform) {\r\n    let res = []\r\n    let children = node.children && node.children.length > 0 ? allNodes\r\n            .map((n, index) => {\r\n                if (node.children.includes(index))\r\n                    return {...allNodes[index], index}\r\n                else\r\n                    return undefined\r\n            }).filter(e => e !== undefined)\r\n        :\r\n        []\r\n\r\n    let parsedNode = {\r\n        name: node.name,\r\n        meshIndex: node.mesh,\r\n        scaling: [1, 1, 1],\r\n        rotation: [0, 0, 0],\r\n        translation: [0, 0, 0],\r\n        children: [],\r\n        baseTransformationMatrix: Array.from(mat4.create())\r\n    }\r\n    let transformationMatrix\r\n    if (node.matrix) {\r\n\r\n        parsedNode = {\r\n            ...parsedNode,\r\n            translation: [0, 0, 0],\r\n            rotationQuat: [0, 0, 0, 1],\r\n            scaling: [1, 1, 1],\r\n            baseTransformationMatrix: Array.from(node.matrix)\r\n        }\r\n\r\n        transformationMatrix = node.matrix\r\n    } else {\r\n        let translation = node.translation,\r\n            rotation = node.rotation,\r\n            scale = node.scale\r\n\r\n        if (!translation)\r\n            translation = [0, 0, 0]\r\n        if (!scale)\r\n            scale = [1, 1, 1]\r\n        if (!rotation)\r\n            parsedNode.rotationQuat = [0, 0, 0, 1]\r\n        else\r\n            parsedNode.rotationQuat = quat.normalize([], rotation)\r\n\r\n        parsedNode.scaling = scale\r\n        parsedNode.translation = translation\r\n        transformationMatrix = mat4.fromRotationTranslationScale([], parsedNode.rotationQuat, parsedNode.translation, parsedNode.scaling)\r\n    }\r\n\r\n\r\n\r\n    if (parentTransform) {\r\n        mat4.multiply(\r\n            transformationMatrix,\r\n            parentTransform,\r\n            transformationMatrix\r\n        )\r\n        parsedNode = {\r\n            ...parsedNode,\r\n            translation: [0, 0, 0],\r\n            rotationQuat: [0, 0, 0, 1],\r\n            scaling: [1, 1, 1],\r\n            baseTransformationMatrix: Array.from(transformationMatrix)\r\n        }\r\n    }\r\n\r\n    children = children\r\n        .map(child => parseNode(child, allNodes, transformationMatrix))\r\n        .flat()\r\n    res.push(...children)\r\n\r\n    if (node.mesh !== undefined)\r\n        res.push(parsedNode)\r\n    return res\r\n}\r\n","\r\nexport default function getPrimitives(mesh, materials = []) {\r\n    const primitives = mesh.primitives;\r\n\r\n    primitives.forEach(primitive => {\r\n        primitive.attributes = Object.keys(primitive.attributes).map(name => ({\r\n            name,\r\n            index: primitive.attributes[name]\r\n        }))\r\n\r\n        if (typeof primitive.material !== \"undefined\") {\r\n            primitive.material = materials[primitive.material];\r\n        }\r\n    });\r\n    return primitives.map(p => {\r\n        const vert = p.attributes.find(d => d.name === 'POSITION')\r\n        const norm = p.attributes.find(d => d.name === 'NORMAL')\r\n        const tang = p.attributes.find(d => d.name === 'TANGENT')\r\n        const uv = p.attributes.find(d => d.name === 'TEXCOORD_0')\r\n\r\n        return {\r\n            indices: p.indices,\r\n            vertices: vert ? vert.index : -1,\r\n            tangents: tang ? tang.index : -1,\r\n            normals: norm ? norm.index : -1,\r\n            uvs: uv ? uv.index : -1,\r\n            material: p.material\r\n        }\r\n    })\r\n}\r\n","import {mat4, quat} from \"gl-matrix\";\r\n\r\nconst fs = require('fs')\r\nconst path = require('path')\r\n\r\n\r\nexport default async function parseMaterial(basePath, data, textures, images) {\r\n\r\n    const PBR = data.pbrMetallicRoughness\r\n    const {\r\n        baseColorFactor,\r\n        baseColorTexture,\r\n        metallicFactor,\r\n        roughnessFactor,\r\n        metallicRoughnessTexture,\r\n\r\n        normalTexture,\r\n        emissiveFactor,\r\n        occlusionTexture,\r\n        emissiveTexture\r\n    } = {...PBR, data}\r\n    let promises = []\r\n    if (PBR) {\r\n        if (baseColorTexture)\r\n            promises.push(loadTexture('albedo', basePath, baseColorTexture, textures, images))\r\n        else if (baseColorFactor)\r\n            promises.push(new Promise(async resolve => resolve({\r\n                key: 'albedo',\r\n                data: baseColorFactor\r\n            })))\r\n\r\n        if (metallicRoughnessTexture) {\r\n            promises.push(loadTexture('metallic', basePath, metallicRoughnessTexture, textures, images, [0, 0, 1, 1]))\r\n            promises.push(loadTexture('roughness', basePath, metallicRoughnessTexture, textures, images, [0, 1, 0, 1]))\r\n        } else {\r\n            const m = metallicFactor,\r\n                r = roughnessFactor\r\n            if (m)\r\n                promises.push(new Promise(async resolve => resolve({\r\n                    key: 'metallic',\r\n                    data: m\r\n                })))\r\n            if (r)\r\n                promises.push(new Promise(async resolve => resolve({\r\n                    key: 'roughness',\r\n                    data: m\r\n                })))\r\n        }\r\n    }\r\n\r\n    if (normalTexture)\r\n        promises.push(loadTexture('normal', basePath, normalTexture, textures, images))\r\n    if (occlusionTexture)\r\n        promises.push(loadTexture('ao', basePath, occlusionTexture, textures, images, metallicRoughnessTexture?.index === occlusionTexture?.index ? [1, 0, 0, 1] : undefined))\r\n\r\n\r\n    // return await Promise.all(promises)\r\n    return []\r\n}\r\n\r\nasync function loadTexture(key, basePath, texture, textures, images) {\r\n    const index = texture.index\r\n    const source = index !== undefined ? textures[index] : undefined\r\n    const imgURI = source !== undefined ? images[source.source] : undefined\r\n    if (imgURI !== undefined) {\r\n        let file\r\n        if (typeof imgURI.uri === 'string' && imgURI.uri.includes('data:image'))\r\n            file = imgURI.uri\r\n        else\r\n            file = await new Promise(resolve => fs.readFile(path.resolve(basePath + '\\\\' + imgURI.uri), {encoding: 'base64'}, (_, data) => resolve(data)))\r\n        if (file) {\r\n            return {key, data: `data:image/${imgURI.uri.split('.').pop()};base64, ` + file}\r\n        } else\r\n            return {key}\r\n    } else\r\n        return {key}\r\n\r\n}\r\n\r\n","import Buffer from \"./Buffer\";\r\nimport Accessor from \"./Accessor\";\r\nimport PrimitiveProcessor from \"./PrimitiveProcessor\";\r\nimport groupInto from \"./utils/groupInto\";\r\nimport parseNode from \"./utils/parseNode\";\r\nimport getPrimitives from \"./utils/getPrimitive\";\r\nimport parseMaterial from \"./utils/parseMaterial\";\r\n\r\n\r\nconst fs = require('fs')\r\nconst path = require('path')\r\n\r\nexport default async function glTF(newRoot, file, options, createRegistryEntry, pathName, filePath, fileName) {\r\n    try {\r\n        fs.mkdirSync(path.resolve(newRoot))\r\n    } catch (e) {\r\n    }\r\n    const {nodes, materials} = await parseGLTF(file, filePath.replace(fileName, ''), options)\r\n    let promises = []\r\n    if (nodes)\r\n        promises.push(...nodes.map(d => {\r\n            return [\r\n                new Promise(r => {\r\n                    fs.writeFile(\r\n                        path.resolve(newRoot + `\\\\${d.name}.mesh`),\r\n                        JSON.stringify(d.data),\r\n                        () => {\r\n                            r()\r\n                        });\r\n                }),\r\n                createRegistryEntry(newRoot.replace(pathName + '\\\\assets\\\\', '') + `\\\\${d.name}.mesh`)\r\n            ]\r\n        }))\r\n\r\n\r\n    // if (materials && materials.length > 0) {\r\n    //     fs.mkdir(resolvePath(newRoot + `\\\\Materials`), () => {\r\n    //         fs.mkdir(resolvePath(newRoot + `\\\\Materials\\\\Resources`), () => {\r\n    //             promises.push(...materials.map(d => {\r\n    //                 let parsedData = {...emptyMaterial}\r\n    //                 const keysOnRes = Object.keys(d.response)\r\n    //                 parsedData.nodes = parsedData.nodes.filter(n => {\r\n    //                     return keysOnRes.includes(n.id) || n.id === 'material'\r\n    //                 })\r\n    //                 parsedData.links = parsedData.links.filter(e => {\r\n    //                     return keysOnRes.includes(e.target.attribute.key)\r\n    //                 })\r\n    //                 parsedData.nodes = parsedData.nodes.map(n => {\r\n    //                     const newNode = {...n}\r\n    //                     newNode.sample = {\r\n    //                         type: n.id,\r\n    //                         registryID: uuidv4()\r\n    //                     }\r\n    //                     return newNode\r\n    //                 })\r\n    //                 parsedData.response = d.response\r\n    //                 parsedData.response.name = d.name\r\n    //\r\n    //                 let localPromises = [\r\n    //                     new Promise(r => {\r\n    //                         fs.writeFile(\r\n    //                             resolvePath(newRoot + `\\\\Materials\\\\${d.name}.material`),\r\n    //                             JSON.stringify(parsedData),\r\n    //                             () => {\r\n    //                                 r()\r\n    //                             });\r\n    //                     }),\r\n    //                     createRegistryEntry(d.id, newRoot.replace(path + '\\\\assets\\\\', '') + `\\\\Materials\\\\${d.name}.material`)\r\n    //                 ]\r\n    //\r\n    //                 parsedData.nodes.forEach((n, i) => {\r\n    //                     let nameSplit = n.sample.registryID\r\n    //                     nameSplit = nameSplit.substr(0, nameSplit.length / 2)\r\n    //                     localPromises.push(...importImage(newRoot + '\\\\Materials\\\\Resources\\\\' + nameSplit, d.response[n.sample.type]?.high, n.sample.registryID))\r\n    //                 })\r\n    //\r\n    //                 return localPromises\r\n    //             }))\r\n    //         })\r\n    //     })\r\n    // }\r\n    await Promise.all(promises)\r\n}\r\n\r\nasync function parseGLTF(data, basePath, options) {\r\n    try {\r\n        let parsed = JSON.parse(data)\r\n        const buffers = parsed.buffers.map(b => {\r\n            return new Buffer(b, basePath)\r\n        })\r\n        await Promise.all(buffers.map(b => b.initialize()))\r\n        parsed.buffers = null\r\n        const accessors = parsed.accessors.map(a => new Accessor(a, buffers, parsed.bufferViews))\r\n        const mainScene = parsed.scenes[0]\r\n        let sceneNodes = parsed.nodes\r\n            .map((n, index) => {\r\n                if (mainScene.nodes.includes(index))\r\n                    return {...parsed.nodes[index], index}\r\n                else\r\n                    return undefined\r\n            })\r\n            .filter(e => e !== undefined)\r\n            .map(n => parseNode(n, parsed.nodes))\r\n            .flat()\r\n\r\n        parsed = {\r\n            materials: parsed.materials,\r\n            meshes: parsed.meshes,\r\n            textures: parsed.textures,\r\n            images: parsed.images\r\n        }\r\n        const parsedMaterials = await Promise.all(parsed.materials ? parsed.materials.map(m => parseMaterial(basePath, m, parsed.textures, parsed.images)) : [])\r\n        let meshes = parsed.meshes.filter((_, index) => {\r\n            return sceneNodes.find(n => n.meshIndex === index) !== undefined\r\n        }).map(m => getPrimitives(m, parsed.materials)[0])\r\n\r\n        let files = []\r\n        sceneNodes.forEach(m => {\r\n            const [min, max] = computeBoundingBox(accessors[meshes[m.meshIndex]?.vertices].data)\r\n            const currentMesh = meshes[m.meshIndex]\r\n            const normals = !options.keepNormals || (currentMesh.normals === -1 || currentMesh.normals === undefined) ? PrimitiveProcessor.computeNormals(accessors[currentMesh.indices]?.data, accessors[currentMesh.vertices]?.data) : accessors[currentMesh.normals].data\r\n            const tangents = !options.keepTangents || (currentMesh.tangents === -1 || currentMesh.tangents === undefined) ? PrimitiveProcessor.computeTangents(accessors[currentMesh.indices]?.data, accessors[currentMesh.vertices]?.data, accessors[currentMesh.uvs]?.data, normals) : accessors[currentMesh.tangents].data\r\n            files.push({\r\n                name: m.name,\r\n                data: {\r\n                    ...m,\r\n                    // material: currentMesh.material ? parsedMaterials.find(p => p.name === currentMesh.material.name)?.id : undefined,\r\n                    indices: accessors[currentMesh.indices]?.data,\r\n                    vertices: accessors[currentMesh.vertices]?.data,\r\n                    tangents: tangents,\r\n                    normals: normals,\r\n                    uvs: accessors[currentMesh.uvs].data,\r\n                    maxBoundingBox: max,\r\n                    minBoundingBox: min,\r\n                }\r\n            })\r\n        })\r\n        return {nodes: files, materials: parsedMaterials}\r\n    } catch (error) {\r\n        return {}\r\n    }\r\n}\r\n\r\nfunction computeBoundingBox(vertices) {\r\n    if (vertices && vertices.length > 0) {\r\n        const toVector = groupInto(3, vertices)\r\n        let min = [], max = []\r\n        for (let i = 0; i < toVector.length; i++) {\r\n            const current = toVector[i]\r\n            if (!min[0] || current[0] < min[0])\r\n                min[0] = current[0]\r\n\r\n            if (!min[1] || current[1] < min[1])\r\n                min[1] = current[1]\r\n\r\n            if (!min[2] || current[2] < min[2])\r\n                min[2] = current[2]\r\n\r\n            if (!max[0] || current[0] > max[0])\r\n                max[0] = current[0]\r\n\r\n            if (!max[1] || current[1] > max[1])\r\n                max[1] = current[1]\r\n\r\n            if (!max[2] || current[2] > max[2])\r\n                max[2] = current[2]\r\n        }\r\n\r\n        return [min, max]\r\n\r\n    } else\r\n        return [0, 0]\r\n}","\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport glTF from \"../utils/gltf/glTF\";\r\n\r\nconst {BrowserWindow, dialog, ipcMain} = require('electron')\r\nconst fs = require('fs')\r\nconst path = require('path')\r\nconst si = require(\"systeminformation\");\r\n\r\nasync function readFile(event, {pathName, type}) {\r\n    return await new Promise(resolve => {\r\n        fs.readFile(path.resolve(pathName), (e, res) => {\r\n            try {\r\n                let d = type === 'buffer' ? res : (res ? res.toString() : undefined)\r\n                resolve(type === 'json' && d ? JSON.parse(d) : d)\r\n            } catch (e) {\r\n                resolve()\r\n            }\r\n        })\r\n    })\r\n\r\n}\r\n\r\nasync function createRegistryEntry(pathName, projectPath) {\r\n    const fID = uuidv4()\r\n    const pathRe = path.resolve(projectPath + '\\\\assets\\\\')\r\n    const p = path.resolve(projectPath + '\\\\assets\\\\' + pathName).replace(pathRe, '')\r\n\r\n    return new Promise(r => {\r\n        fs.writeFile(\r\n            path.resolve(projectPath + '\\\\assetsRegistry\\\\' + fID + `.reg`),\r\n            JSON.stringify({\r\n                id: fID,\r\n                path: p.charAt(0) === '\\\\' ? p.substring(1, p.length) : p\r\n            }),\r\n            () => {\r\n                r()\r\n            })\r\n    })\r\n}\r\n\r\nexport default class FileSystemEvents {\r\n    constructor() {\r\n        ipcMain.on('open-file-dialog', (ev, {listenID}) => {\r\n            const properties = ['openFile', 'multiSelections']\r\n            dialog.showOpenDialog({\r\n                properties, filters: [{name: 'Assets', extensions: ['jpg', 'png', 'jpeg', 'gltf', 'hdri']}]\r\n            })\r\n                .then(result => {\r\n                    if (!result.canceled)\r\n                        ev.sender.send('dialog-response-' + listenID, result.filePaths)\r\n                    else\r\n                        ev.sender.send('dialog-response-' + listenID, [])\r\n                })\r\n                .catch(err => console.log(err))\r\n        })\r\n        ipcMain.on('get-current-load', async (event) => {\r\n            const load = await si.currentLoad()\r\n            event.sender.send('current-load', load)\r\n        })\r\n        ipcMain.on('read-file', async (event, data) => {\r\n            const result = await readFile(event, data)\r\n            event.sender.send('read-file-' + data.listenID, result)\r\n        })\r\n        ipcMain.on('read-registry', async (event, {pathName, listenID}) => {\r\n            const result = await new Promise(resolve => {\r\n                fs.readdir(pathName, (e, res) => {\r\n                    if (!e) {\r\n                        let promises = res.map(f => {\r\n                            return new Promise(resolve1 => {\r\n                                const registryPath = pathName + f\r\n                                fs.readFile(registryPath, (e, registryFile) => {\r\n                                    if (!e)\r\n                                        try {\r\n                                            resolve1({\r\n                                                ...JSON.parse(registryFile.toString()),\r\n                                                registryPath\r\n                                            })\r\n                                        } catch (e) {\r\n                                            resolve1()\r\n                                        }\r\n                                    else\r\n                                        resolve1()\r\n                                })\r\n                            })\r\n                        })\r\n\r\n                        Promise.all(promises).then(registryFiles => {\r\n                            resolve(registryFiles\r\n                                .filter(f => f !== undefined))\r\n                        })\r\n                    } else\r\n                        resolve([])\r\n                })\r\n            })\r\n            event.sender.send('read-registry-' + listenID, result)\r\n        })\r\n\r\n        // IMPORT\r\n        ipcMain.on('import-gltf', async (event, {filePath, newRoot, options, projectPath, fileName, listenID}) => {\r\n            fs.readFile(path.resolve(filePath), async (e, data) => {\r\n                if (!e) {\r\n                    const file = data.toString()\r\n                    await glTF(newRoot, file, options, p => createRegistryEntry(p, projectPath), projectPath, filePath, fileName)\r\n                    event.sender.send('import-gltf-' + listenID, undefined)\r\n                } else\r\n                    event.sender.send('import-gltf-' + listenID, undefined)\r\n            })\r\n        })\r\n    }\r\n}","import WindowEvents from \"./events/WindowEvents\";\r\nimport FileSystemEvents from \"./events/FileSystemEvents\";\r\n\r\nconst {app, BrowserWindow, ipcMain, ipcRenderer} = require('electron');\r\n\r\nif (require('electron-squirrel-startup')) {\r\n    // eslint-disable-line global-require\r\n    app.quit();\r\n}\r\n\r\nconst createWindow = () => {\r\n    const {session} = require('electron')\r\n\r\n    session.defaultSession.webRequest.onHeadersReceived((details, callback) => {\r\n        callback({\r\n            responseHeaders: {\r\n                ...details.responseHeaders,\r\n                'Content-Security-Policy': [`default-src * 'self' data: blob: file: 'unsafe-inline' 'unsafe-eval'; script-src * 'self' data: blob: file: 'unsafe-inline' 'unsafe-eval'; connect-src * 'self' data: blob: file: 'unsafe-inline' 'unsafe-eval'; img-src * 'self' data: blob: file: data: blob: 'unsafe-inline'; frame-src * 'self' data: blob: file:; style-src * 'self' data: blob: file: 'unsafe-inline';`]\r\n            }\r\n        })\r\n    })\r\n    const windowEvents = new WindowEvents(),\r\n        projectEvents = new FileSystemEvents()\r\n\r\n}\r\n\r\napp.on('ready', createWindow);\r\napp.on('window-all-closed', () => {\r\n    if (process.platform !== 'darwin') {\r\n        app.quit();\r\n    }\r\n});\r\napp.on('activate', () => {\r\n    if (BrowserWindow.getAllWindows().length === 0) {\r\n        createWindow();\r\n    }\r\n});\r\n\r\n\r\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","isArray","arrayLikeToArray","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","self","this","args","arguments","apply","err","undefined","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","prototype","obj","iter","Symbol","iterator","from","_i","_s","_e","_arr","_n","_d","call","next","push","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","o","minLen","n","toString","slice","constructor","name","test","atob","str","Buffer","path","spawn","debug","app","run","updateExe","dirname","process","execPath","detached","on","platform","cmd","argv","basename","quit","check","load","r","storage","e","env","DEBUG","log","console","Function","formatArgs","useColors","namespace","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","removeItem","window","type","document","documentElement","style","WebkitAppearance","firebug","exception","table","navigator","userAgent","toLowerCase","parseInt","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","message","enable","prevTime","createDebug","enabled","curr","Date","ms","prev","coerce","unshift","format","formatter","val","logFn","bind","hash","charCodeAt","Math","abs","selectColor","init","Error","stack","disable","names","skips","split","substr","tty","util","inspectOpts","keys","stream","write","prefix","join","toUTCString","Boolean","isatty","fd","filter","reduce","prop","substring","_","k","toUpperCase","Number","DEBUG_FD","deprecate","stdout","stderr","binding","guessHandleType","WriteStream","_type","_handle","unref","SyncWriteStream","autoClose","Socket","readable","read","_isStdio","createWritableStdioStream","inspect","map","trim","O","s","m","h","d","plural","floor","ceil","options","String","exec","parseFloat","parse","isNaN","long","round","fmtShort","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","object","reverse","pop","skipTempReset","charAt","stop","rootRecord","rval","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","execSync","_platform","_linux","_darwin","_windows","_freebsd","_openbsd","_netbsd","_sunos","parseAudioType","input","output","indexOf","parseLinuxAudioPciMM","lines","audioPCI","slotId","getValue","pciMatch","item","id","manufacturer","revision","driver","default","channel","in","out","status","parseDarwinAudio","audioObject","channelStr","coreaudio_device_transport","_name","coreaudio_device_manufacturer","coreaudio_default_audio_input_device","coreaudio_default_audio_output_device","parseDarwinChannel","coreaudio_device_input","coreaudio_device_output","parseWindowsAudio","audio","callback","nextTick","parts","getLinuxAudioPci","outObj","SPAudioDataType","noop","powerShell","fs","parseWinBatteryPart","designedCapacity","fullChargeCapacity","statusValue","hasBattery","maxCapacity","voltage","capacityUnit","percent","currentCapacity","isCharging","acConnected","model","cycleCount","timeRemaining","serial","battery_path","existsSync","acPath","file","readFileSync","readFile","desingedMinVoltage","energy","power","current","batteries","parts2","workload","promiseAll","data","results","hasValue","designCapacities","fullChargeCapacities","first","additionalBatteries","parsed","toInt","shift","parseBluetoothType","parseLinuxBluetoothInfo","macAddr1","macAddr2","macDevice","macHost","batteryPercent","connected","parseDarwinBluetoothDevices","bluetoothObject","typeStr","device_minorClassOfDevice_string","device_majorClassOfDevice_string","device_name","device","device_services","device_manufacturer","device_addr","device_batteryPercent","device_isconnected","parseWindowsBluetooth","bluetoothDevices","btFiles","getFilesInPath","filename","pathParts","infoFile","encoding","hdicon","SPBluetoothDataType","local_device_title","general_address","objKey","innerObject","bluetoothDevice","os","_cpu_speed","_current_cpu","user","nice","system","idle","irq","tick","currentLoad","currentLoadUser","currentLoadSystem","currentLoadNice","currentLoadIdle","currentLoadIrq","rawCurrentLoad","rawCurrentLoadUser","rawCurrentLoadSystem","rawCurrentLoadNice","rawCurrentLoadIdle","rawCurrentLoadIrq","_cpus","_corecount","AMDBaseFrequencies","socketTypes","socketTypesByName","cpuManufacturer","cpuBrandManufacturer","res","brand","getAMDSpeed","found","getCpuCurrentSpeedSync","cpus","minFreq","maxFreq","avgFreq","cores","freq","speed","toFixed","min","max","avg","cpuFlags","execOptsWin","flag_hex","flag_bin_unpadded","flag_bin","repeat","all_flags","f","line","flags","flag","cpuCache","l1d","l1i","l2","l3","cache","cacheType","sizeParts","size","unit","part","level","installedSize","cpu","UNKNOWN","vendor","family","stepping","speedMin","speedMax","governor","physicalCores","processors","socket","virtualization","modellineParts","tbFrequency","countProcessors","countCores","countThreads","arch","clusters","efficiencyCores","performanceCores","modelline","threadsPerCore","threadsPerCoreInt","processorsInt","linesRpi","rPIRevision","decodePiCpuinfo","processor","revisionCode","lines2","error2","stdout2","sig","threadCount","coreCount","all","description","startsWith","socketId","socketByName","getSocketTypesByName","countLines","hyperv","cpuCurrentSpeed","currCpuSpeed","cpuTemperature","main","chipset","tdiePos","label","a","b","maxtmp","tdieTemp","newSectionStarts","section","temps","firstPart","stat","er","sum","temp","osxTemp","idx","loads","loadavg","x","avgLoad","now","totalUser","totalSystem","totalNice","totalIrq","totalIdle","times","sys","tmpTick","totalTick","tmpLoad","totalLoad","tmpUser","tmpSystem","tmpNice","tmpIdle","tmpIrq","currentTick","loadUser","loadSystem","loadNice","loadIdle","loadIrq","rawLoad","rawLoadUser","rawLoadSystem","rawLoadNice","rawLoadIdle","rawLoadIrq","fullLoad","totalTicks","DockerSocket","_docker_socket","_docker_container_stats","_docker_last_read","dockerContainers","inContainers","containers","Id","isFunction","listContainers","docker_containers","element","containerID","payload","Names","Name","containerIdSanitized","isPrototypePolluted","sanitizeShellString","getInspect","image","Image","imageID","ImageID","command","Command","created","Created","started","State","StartedAt","getTime","finished","FinishedAt","createdAt","startedAt","finishedAt","restartCount","RestartCount","Platform","Driver","ports","Ports","mounts","Mounts","dockerContainerStats","containerIDs","containerArray","containerIDsSanitized","stringToLower","stringReplace","stringTrim","mathMin","sl","allContainers","container","dockerContainerStatsSingle","memUsage","memLimit","memPercent","cpuPercent","pids","netIO","rx","wx","blockIO","w","cpuStats","precpuStats","memoryStats","networks","dataInspect","getStats","stats","memory_stats","usage","limit","cpu_stats","precpu_stats","nanoSecNow","nanoSeconds","possIntervals","intervalsUsed","cpu_usage","total_usage","cpuDelta","systemDelta","system_cpu_usage","percpu_usage","docker_calcCPUPercent","pids_stats","rx_bytes","tx_bytes","docker_calcNetworkIO","blkio_stats","io_service_bytes_recursive","op","docker_calcBlockIO","dockerContainerProcesses","getProcesses","Titles","Processes","titles","pos_pid","pos_ppid","pos_pgid","pos_vsz","pos_time","pos_elapsed","pos_ni","pos_ruser","pos_user","pos_rgroup","pos_group","pos_stat","pos_rss","pos_command","pidHost","ppid","pgid","ruser","group","rgroup","time","elapsed","rss","vsz","dockerInfo","getInfo","ID","Containers","containersRunning","ContainersRunning","containersPaused","ContainersPaused","containersStopped","ContainersStopped","images","Images","memoryLimit","MemoryLimit","swapLimit","SwapLimit","kernelMemory","KernelMemory","cpuCfsPeriod","CpuCfsPeriod","cpuCfsQuota","CpuCfsQuota","cpuShares","CPUShares","cpuSet","CPUSet","ipv4Forwarding","IPv4Forwarding","bridgeNfIptables","BridgeNfIptables","bridgeNfIp6tables","BridgeNfIp6tables","Debug","nfd","NFd","oomKillDisable","OomKillDisable","ngoroutines","NGoroutines","systemTime","SystemTime","loggingDriver","LoggingDriver","cgroupDriver","CgroupDriver","nEventsListener","NEventsListener","kernelVersion","KernelVersion","operatingSystem","OperatingSystem","osType","OSType","architecture","Architecture","ncpu","NCPU","memTotal","MemTotal","dockerRootDir","DockerRootDir","httpProxy","HttpProxy","httpsProxy","HttpsProxy","noProxy","NoProxy","labels","Labels","experimentalBuild","ExperimentalBuild","serverVersion","ServerVersion","clusterStore","ClusterStore","clusterAdvertise","ClusterAdvertise","defaultRuntime","DefaultRuntime","liveRestoreEnabled","LiveRestoreEnabled","isolation","Isolation","initBinary","InitBinary","productLicense","ProductLicense","dockerImages","listImages","imageIDSanitized","inspectImage","Container","comment","Comment","Os","parent","Parent","dockerVersion","DockerVersion","Size","sharedSize","SharedSize","virtualSize","VirtualSize","author","Author","containerConfig","ContainerConfig","graphDriver","GraphDriver","repoDigests","RepoDigests","repoTags","RepoTags","config","Config","rootFS","RootFS","dockerVolumes","listVolumes","Volumes","mountpoint","Mountpoint","Options","scope","Scope","CreatedAt","dockerAll","l","processes","net","socketPath","createConnection","alldata","startbody","execPromiseSave","promisifySave","_fs_speed","_disk_io","parseBlk","decodeURIComponent","disk","fsType","rota","uuid","rm","tran","unique","sortByKey","blkStdoutToObject","calcFsSpeed","tx","rx_sec","wx_sec","tx_sec","bytes_read","bytes_write","bytes_overall","last_ms","calcDiskIO","rIO","wIO","rWaitTime","wWaitTime","tWaitTime","tIO","rIO_sec","wIO_sec","tIO_sec","rWaitPercent","wWaitPercent","tWaitPercent","fsSize","macOsDisks","parseDf","fsShort","macOsDisksSingle","getmacOsFsType","used","available","use","mount","find","el","maxBuffer","free","caption","fsOpenFiles","allocated","blockDevices","devices","identifier","physical","removable","protocol","parseDevices","drivetypes","drivetype","fsStats","fs_filter","disksIO","diskLayout","getVendorFromModel","pattern","commitResult","BSDName","cmdFullSmart","outJSON","blockdevices","parttype","mediumType","logical","interfaceType","bytesPerSector","totalCylinders","totalHeads","totalSectors","totalTracks","tracksPerCylinder","sectorsPerTrack","firmwareRevision","rev","serialNum","smartStatus","temperature","diskBSDName","smartctl","smart_status","passed","smartData","linesSATA","linesNVMe","linesUSB","dataType","sizeStr","sizeValue","smartStatusString","linkWidth","replaceAll","smartMonToolsInstalled","smartDev","dev","mediaType","findObjectByKey","smartStr","serial_number","_nvidiaSmiPath","_resolutionX","_resolutionY","_pixelDepth","_refreshRate","videoTypes","vendorToId","graphics","nvidiaDevices","safeParseNumber","includes","nvidiaSmiExe","basePath","WINDIR","targetDir","readdirSync","dir","prevDir","currentDir","previousNvidiaSmi","statSync","currentNvidiaSmi","ctimeMs","getNvidiaSmi","nvidiaSmi","gpu","splittedData","driverVersion","subDeviceId","pciBus","fanSpeed","memoryTotal","memoryUsed","memoryFree","utilizationGpu","utilizationMemory","temperatureGpu","temperatureMemory","powerDraw","powerLimit","clockCore","clockMemory","mergeControllerNvidia","controller","nvidia","vram","vramDynamic","parseLinesLinuxEdid","edid","deviceName","builtin","connection","sizeX","sizeY","pixelDepth","resolutionX","resolutionY","currentResX","currentResY","positionX","positionY","currentRefreshRate","start","model_raw","fromCharCode","controllers","displays","graphicsArr","bus","sppci_bus","spdisplays_vram","vramDyn","spdisplays_vram_shared","metalVersion","spdisplays_metal","spdisplays_metalfamily","spdisplays_vendor","sppci_model","deviceId","vendorId","external","sppci_device_type","spdisplays_ndrvs","displayItem","connectionType","currentResolutionParts","currentResolution","pixelParts","pixelDepthString","productionYear","displayId","parseLinesDarwin","plistParser","_items","isRaspberry","isRaspbian","currentController","busAddress","pciID","isGraphicsController","pciIDs","isExternal","vgapos","_3dcontrollerpos","pciIDCandidate","endpos","search","memparts","parseLinesLinuxControllers","nvidiaData","contr","endsWith","fieldPattern","field","bdf","slot","padStart","memory","parseLinesLinuxClinfo","depth","currentDisplay","is_edid","is_current","edid_raw","edid_decoded","parts1","resParts","parseLinesLinuxDisplays","csections","vsections","sections","vections","memorySizes","matchingDeviceId","quadWordmemorySize","pnpDeviceId","memorySize","parseLinesWindowsControllers","windowsSubDeviceId","nvidiaSubDeviceIdParts","nvidiaSubDeviceId","lengthDifference","dsections","msections","ssections","tsections","isections","code","instanceId","deviceID","linesDisplay","linesScreen","linesMonitor","linesConnection","bitsPerPixel","bounds","primary","instanceName","videoOutputTechnology","displayVendor","displayModel","parseLinesWindowsDisplaysPowershell","catch","lib_version","osInfo","battery","filesystem","network","wifi","users","internet","docker","vbox","printer","usb","bluetooth","version","getStaticData","bios","baseboard","chassis","versions","networkInterfaces","memLayout","getDynamicData","srv","iface","getDefaultNetworkInterface","functionProcessed","totalFunctions","node","v8","networkStats","networkConnections","mem","services","wifiNetworks","inetLatency","get","valueObject","allPromises","func","params","lastIndexOf","funcWithoutParams","filterParts","partialArray","partialRes","getCodepage","shell","networkInterfaceDefault","networkGatewayDefault","wifiInterfaces","wifiConnections","processLoad","inetChecksite","vboxInfo","getAllData","observe","interval","_data","setInterval","assign","powerShellStart","powerShellRelease","url","ok","urlSanitized","stringStartWith","t","execSafe","statusCode","http","resume","host","hostSanitized","filt","timeout","OSX_RAM_manufacturers","LINUX_RAM_manufacturers","total","totalmem","freemem","active","buffers","cached","slab","buffcache","swaptotal","swapused","swapfree","pagesize","inactive","pageSize","sysPpageSize","getManufacturerLinux","manId","manIdSearch","sizeString","totalWidth","dataWidth","bank","ecc","clockSpeed","formFactor","partNum","voltageConfigured","voltageMin","voltageMax","allLines","eccStatus","hasBank","memoryTypes","FormFactors","pathToIp","_network","_default_iface","_ifaces","_dhcpNics","_networkInterfaces","_mac","ifacename","ifacenameFirst","ifaces","scopeid","details","internal","defaultIp","EOL","address","getMacAddresses","mac","nextline","getWindowsIfaceDNSsuffix","dnsSuffix","interfaceName","connectionDnsSuffix","getWindowsIEEE8021x","i8021x","arrayIface8021xInfo","state8021x","protocol8021x","i8021xState","i8021xProtocol","SSID","getWindowsWirelessIfaceSSID","splitSectionsNics","getLinuxIfaceConnectionName","connectionName","checkLinuxDCHPInterfaces","concat","getLinuxDHCPNics","nic","parseLinuxDHCPNics","getLinuxIfaceDHCPstatus","DHCPNics","getDarwinIfaceDHCPstatus","getLinuxIfaceDNSsuffix","getLinuxIfaceIEEE8021xAuth","authenticationProtocol","testVirtualNic","ifaceName","rescan","defaultString","nics","dnsSuffixes","nics8021xInfo","defaultInterface","mtu","ip6","ip4","operstate","duplex","parseLinesDarwinNics","getDarwinNics","ip4subnet","netmask","ip6subnet","virtual","dhcp","ieee8021xAuth","ieee8021xState","carrierChanges","nodeMainVersion","myspeed","wirelessspeed","nsections","nconfigsections","linesNicConfig","netEnabled","adapterType","parseLinesWindowsNics","getWindowsWiredProfilesInformation","primaryDNS","exitCode","longPrimaryDNS","connectionSpecificDNS","getWindowsDNSsuffixes","foundFirst","detail","IEEE8021x","calcNetworkSpeed","rx_dropped","rx_errors","tx_dropped","tx_errors","networkStatsSingle","ifaceSanitized","offset","perfData","psections","parseLinesWindowsPerfData","interfaces","det","ifacesArray","allIFaces","localip","localport","localaddress","peerip","peerport","peeraddress","connstate","proc","localAddress","localPort","peerAddress","peerPort","pid","getLogoFile","distro","getFQDN","fqdn","hostname","getUniqueMacAdresses","macs","sort","hardware","jsonObj","SPHardwareDataType","spHardware","platform_UUID","sysdir","uptime","timezone","timezoneName","Intl","DateTimeFormat","resolvedOptions","timeZone","release","codename","kernel","codepage","logofile","build","servicepack","uefi","releaseVersion","VERSION","DISTRIB_CODENAME","VERSION_CODENAME","DISTRIB_ID","NAME","DISTRIB_RELEASE","VERSION_ID","BUILD_ID","hypervisor","term","remoteSession","apps","versionObject","openssl","systemOpenssl","systemOpensslLib","npm","yarn","pm2","gulp","grunt","git","tsc","mysql","redis","mongodb","apache","nginx","php","postfix","postgresql","perl","python","python3","pip","pip3","java","gcc","virtualbox","bash","zsh","fish","powershell","dotnet","appsObj","counter","checkVersionParam","gitHomebrewExists","darwinXcodeExists","postgresqlBin","serviceSections","srvCaption","osVersion","gitHomebrewExists1","gitHomebrewExists2","semverCompare","getVboxmanage","winPrinterStatus","parseLinuxCupsPrinter","printerId","uri","shared","parseLinuxLpstatPrinter","parseDarwinPrinters","printerObject","uriParts","printserver","parseWindowsPrinters","printerHeader","cupsVersion","parseLinuxCupsHeader","printers","engine","engineVersion","SPPrintersDataType","_processes_cpu","all_utime","all_stime","list","_services_cpu","_process_cpu","_winStatusValues","parseProcStat","calcProcStatLinux","_cpu_old","statparts","utime","stime","cutime","cstime","cpuu","calcProcStatWin","procStat","srvString","srvs","dataSrv","tmpsrv","srvStr","ps","p","running","startmode","pv","cv","curr_processes","list_new","resultProcess","listPos","wincommand","srvName","startMode","parsedhead","getName","blocked","sleeping","unknown","head","parseHead","offset2","checkColumn","to","priority","parseTimeUnix","cmdPath","fullcommand","firstParamPos","firstParamPathPos","firstPos","tmpCommand","tmpParams","lastSlashPos","parentPid","memVsz","memRss","parseLine","parseProcesses","pmem","elapsed_parts","month","getMonth","getFullYear","getDay","getHours","getMinutes","getSeconds","formatDateTime","parseProcesses2","processSections","procs","procStats","allcpuu","allcpus","commandLine","commandPath","memw","processesString","pname","inList","processFound","procName","resultItemId","execPromise","promisify","sku","virtualHost","disksById","procLines","raspberry","releaseDate","datetime","parseDateTime","date","language","features","feature","hardwareData","bootRomVersion","boot_rom_version","assetTag","memMax","memSlots","rpi","chassisTypes","ctype","parseLinuxUsb","idVendor","vendorParts","idProduct","productParts","product","interfaceClassParts","usbType","iManufacturerParts","getLinuxUsbType","maxPower","serialNumber","parseDarwinUsb","usbObj","removableDrive","getDarwinUsbType","parseWindowsUsb","creationclass","getWindowsUsbTypeCreation","parseUsersLinux","phase","result_who","result_w","w_first","w_header","w_pos","who_line","is_whopart","ip","parseUsersDarwin","sessions","sessionParts","session","starttime","parseWinSessions","loggedons","loggedonParts","loggedon","domainParts","nameParts","domain","parseWinLoggedOn","queryUser","header","headerDelimiter","nextSpace","parseWinUsersQuery","userParts","userQuery","username","sessionid","quser","name1","name2","eq","fuzzyMatch","parseWinUsers","dateTime","_cores","wmicPath","_smartMonToolsInstalled","_psChild","_psResult","_psCmds","_psPersistent","_psToUTF8","_psCmdStart","_psError","_psCmdSeperator","_psIdSeperator","windowsHide","_extend","LANG","stringToString","stringSubstr","property","separator","trimmed","lineMatch","getWmic","wmicPathArray","powerShellProceedResults","remove","random","stdin","child","stdio","kill","end","execWin","opts","functionToCheck","uniques","array","y","decodeEscapeSequence","base","dt","culture","dateFormat","pmDesignator","dtparts","hour","splitter","seperator","detectSplit","isPM","parseTime","rights","space","count","cap","wmic","cmdLineToolsExists","xcodeAppExists","xcodeExists","VBOX_INSTALL_PATH","VBOX_MSI_INSTALL_PATH","hrtime","countUniqueLines","startingWith","uniqueLines","cpuinfo","osrelease","strict","notPolluted","st","rs","rs2","q","qs","qs2","stm","sto","stl","s1","s2","s1l","oldRevisionCodes","processorList","manufacturerList","typeList","memSizeCode","hex","typeCode","pow","promises","resolvingPromises","promise","errors","items","nodeStyleFunction","pathArray","linuxVersion","xmlStr","tags","pos","inTagStart","inTagContent","inTagEnd","metaData","tagStart","tagEnd","tagContent","cn","source","lstatSync","isDirectory","isFile","getFilesRecursively","dirs","getDirectories","getFiles","v1","v2","runningSinceString","runningSince","sinceDateObj","getTimezoneOffset","stoppedSinceString","stoppedSince","stopped","guestOS","hardwareUUID","cpuExepCap","cpuProfile","firmware","pageFusion","configFile","snapshotFolder","logFolder","hpet","pae","longMode","tripleFaultReset","apic","x2Apic","acpi","ioApic","biosApicMode","bootMenuMode","bootDevice1","bootDevice2","bootDevice3","bootDevice4","timeOffset","rtc","wifiDBFromQuality","quality","wifiQualityFromDB","db","_wifi_frequencies","wifiFrequencyFromChannel","wifiChannelFromFrequencs","frequency","ifaceListLinux","ifaceDetails","nmiDeviceLinux","ssid","getWifiNetworkListNmi","security","wpaFlags","rsnFlags","bssid","mode","signalLevel","getWifiNetworkListIw","iwlistParts","dbParts","isWpa","isWpa2","wpaFlag","iwconfigParts","setTimeout","wifiObj","wifiItem","RSSI","WPA_IE","IE_KEY_WPA_UCIPHERS","ciphers","RSN_IE","IE_KEY_RSN_UCIPHERS","SSID_STR","BSSID","CHANNEL","parseWifiDarwin","ssidParts","ssidPart","ssidLines","bssidsParts","bssidPart","bssidLines","bssidLine","networkList","ifaceDetail","nmiDetails","wpaDetails","wpaConnectionLinux","nw","nmiConnection","autoconnect","nmiConnectionLinux","txRate","macParts","getVendor","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","ab","__dirname","BrowserWindow","ipcMain","closeEventHome","minimizeEventHome","maximizeEventHome","closeEvent","minimizeEvent","maximizeEvent","WindowEvents","close","minimize","maximize","getData","getDataCall","onSwitch","onSwitchCall","prepareHomeWindow","initEvents","mainWindow","mE","minE","closeE","currentListeners","isMaximized","setSize","project","removeAllListeners","ev","sender","send","removeEvents","newWindow","show","frame","webPreferences","webSecurity","enableRemoteModule","nodeIntegration","contextIsolation","nativeWindowOpen","nodeIntegrationInWorker","autoHideMenuBar","loadURL","PROJECT_WINDOW_WEBPACK_ENTRY","package","width","height","MAIN_WINDOW_WEBPACK_ENTRY","prepareProjectWindow","rnds8Pool","Uint8Array","poolPtr","rng","byteToHex","buf","rnds","_getBufferData","byteCharacters","dv","DataView","ArrayBuffer","char","setUint8","Accessor","bufferViews","elementBytesLength","typedGetter","componentType","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","BYTES_PER_ELEMENT","_unpackBufferViewData","bufferView","bufferId","buffer","byteOffset","loopOffset","ARRAY_TYPE","fromValues","z","add","scale","normalize","sqrt","PI","hypot","sub","groupInto","mainArray","arrayOfArrays","PrimitiveProcessor","indices","vertices","faces","positions","quantity","normals","v0","d01","m01","d21","m21","vec3","norm","u","flat","uvs","groupedVertices","groupedUVs","tangents","tangentArray","triangles","i0","i1","i2","uv0","uv1","uv2","e1","e2","x1","x2","y1","y2","div","tangent","tangentP1","tangentP2","t0","nCop","parseNode","allNodes","parentTransform","transformationMatrix","children","parsedNode","meshIndex","mesh","scaling","rotation","translation","baseTransformationMatrix","mat4","matrix","rotationQuat","quat","z2","xx","xy","xz","yy","yz","zz","wy","wz","sx","sy","sz","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","getPrimitives","materials","primitives","primitive","attributes","material","vert","tang","uv","parseMaterial","textures","PBR","pbrMetallicRoughness","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","normalTexture","emissiveFactor","occlusionTexture","emissiveTexture","loadTexture","texture","imgURI","glTF","newRoot","createRegistryEntry","pathName","filePath","fileName","mkdirSync","parseGLTF","nodes","writeFile","initialize","accessors","mainScene","scenes","sceneNodes","meshes","parsedMaterials","files","computeBoundingBox","currentMesh","keepNormals","computeNormals","keepTangents","computeTangents","maxBoundingBox","minBoundingBox","toVector","dialog","si","event","projectPath","fID","uuidv4","pathRe","FileSystemEvents","listenID","showOpenDialog","properties","filters","extensions","canceled","filePaths","readdir","resolve1","registryPath","registryFile","registryFiles","ipcRenderer","createWindow","defaultSession","webRequest","onHeadersReceived","responseHeaders","getAllWindows"],"sourceRoot":""}